import{l as e,y as t,n as s,o as i,P as r,V as n,b7 as a,aJ as o,b8 as l,iE as p,a8 as d,ac as u,au as h,aW as c,dx as y,e as f,U as m,j7 as g,d2 as w,d3 as b,d4 as v,hH as j,d5 as I,hR as S,a5 as F,bS as O,dr as x,i7 as D,j8 as L,b as E,cK as P,di as A,k as T,hf as N,s as R,M as G,hM as q,cr as U,ha as _,K as C,hI as k,Q,A as M,j9 as V,ja as $,i_ as K,hU as W,i9 as z,ia as J,ib as H,hT as Z,Y as B,hN as Y,hO as X,hp as ee,ie as te,hP as se}from"./p-b54724b6.js";import{N as ie,K as re}from"./p-221e6973.js";import{l as ne,i as ae,t as oe}from"./p-778d705c.js";import{s as le,l as pe,u as de,m as ue}from"./p-097c58e3.js";import{g as he}from"./p-3a359945.js";import{n as ce,p as ye}from"./p-52324761.js";import"./p-bafc5e09.js";import"./p-bf0e41eb.js";import"./p-8043ab9b.js";import"./p-56278127.js";import"./p-52a9dec5.js";import"./p-de65f975.js";import"./p-cc24e5bd.js";import"./p-cc3f40fb.js";import"./p-603bf978.js";import"./p-5a001adc.js";import"./p-2570f2bd.js";import"./p-2563414c.js";import"./p-d9618e4e.js";import"./p-b4b7d6a0.js";import"./p-e9a502d1.js";import"./p-80e8e171.js";import"./p-52d8e383.js";import"./p-783b6965.js";import"./p-e75aa2b5.js";import"./p-0db5f47d.js";let fe=class extends i{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};e([t({type:String,json:{read:!0,write:!0}})],fe.prototype,"name",void 0),e([t({type:String,json:{read:!0,write:!0}})],fe.prototype,"field",void 0),e([t({type:[Number],json:{read:!0,write:!0}})],fe.prototype,"currentRangeExtent",void 0),e([t({type:[Number],json:{read:!0,write:!0}})],fe.prototype,"fullRangeExtent",void 0),e([t({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],fe.prototype,"type",void 0),fe=e([s("esri.layers.support.RangeInfo")],fe);var me;let ge=me=class extends(r(n.ofType(a))){constructor(e){super(e)}clone(){return new me(this.items.map((e=>e.clone())))}write(e,t){return this.toJSON(t)}toJSON(e){const t=e?.layer?.spatialReference;return t?this.toArray().map((s=>{if(!t.equals(s.spatialReference)){if(!o(s.spatialReference,t))return e&&e.messages&&e.messages.push(new l("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const i=new a;p(s,i,t),s=i}const i=s.toJSON(e);return delete i.spatialReference,i})).filter((e=>null!=e)):(e?.messages&&e.messages.push(new l("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map((t=>t.toJSON(e))))}static fromJSON(e,t){const s=new me;return e.forEach((e=>s.add(a.fromJSON(e,t)))),s}};ge=me=e([s("esri.layers.support.PolygonCollection")],ge);const we=ge;var be;let ve=be=class extends i{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new we,this._geometriesSource=null,this._handles=new u}initialize(){this._handles.add(h((()=>this.geometries),"after-changes",(()=>this.geometries=this.geometries),c))}destroy(){this._handles.destroy()}readGeometries(e,t,s){Array.isArray(e)?this.geometries=we.fromJSON(e,s):this._geometriesSource={url:y(e,s),context:s}}async loadGeometries(e,t){if(null==this._geometriesSource)return;const{url:s,context:i}=this._geometriesSource,r=await f(s,{responseType:"json",signal:t?.signal}),n=e.toJSON(),a=r.data.map((e=>({...e,spatialReference:n})));this.geometries=we.fromJSON(a,i),this._geometriesSource=null}clone(){const e=new be({geometries:m(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};e([t({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],ve.prototype,"spatialRelationship",void 0),e([t({type:we,nonNullable:!0,json:{write:!0}}),he({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries"})],ve.prototype,"geometries",void 0),e([d(["web-scene","portal-item"],"geometries")],ve.prototype,"readGeometries",null),ve=be=e([s("esri.layers.support.SceneFilter")],ve);const je=ve;const Ie=["3DObject","Point"],Se=se();let Fe=class extends(g(ie(w(b(v(j(I(S(F(O)))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new n,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){this._set("renderer",null)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){const s=this.getFeatureType(t?.feature)?.domains?.[e];return s&&"inherited"!==s.type?s:this.getField(e)?.domain??null}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){return this.associatedLayer?.types??[]}get typeIdField(){return this.associatedLayer?.typeIdField??null}get templates(){return this.associatedLayer?.templates??null}get formTemplate(){return this.associatedLayer?.formTemplate??null}get fieldsIndex(){return new x(this.fields)}readNodePages(e,t,s){return"Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:le.fromJSON(e,s)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get geometryType(){return xe[this.profile]||"mesh"}set renderer(e){D(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get capabilities(){const e=this.associatedLayer?.capabilities??oe,{query:t,editing:{supportsGlobalId:s,supportsRollbackOnFailure:i,supportsUploadWithItemId:r,supportsGeometryUpdate:n,supportsReturnServiceEditsInSourceSpatialReference:a},data:{supportsZ:o,supportsM:l,isVersioned:p,supportsAttachment:d},operations:{supportsEditing:u,supportsAdd:h,supportsUpdate:c,supportsDelete:y,supportsQuery:f,supportsQueryAttachments:m,supportsAsyncConvert3D:g}}=e,w=e.operations.supportsChangeTracking,b=!!this.associatedLayer?.infoFor3D&&L();return{query:t,editing:{supportsGlobalId:s,supportsReturnServiceEditsInSourceSpatialReference:a,supportsRollbackOnFailure:i,supportsGeometryUpdate:b&&n,supportsUploadWithItemId:r},data:{supportsAttachment:d,supportsZ:o,supportsM:l,isVersioned:p},operations:{supportsQuery:f,supportsQueryAttachments:m,supportsEditing:u&&w,supportsAdd:b&&h&&w,supportsDelete:b&&y&&w,supportsUpdate:c&&w,supportsAsyncConvert3D:g}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.userHasEditingPrivileges}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){return this.associatedLayer?.infoFor3D??null}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e))),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e))),e||void 0}get displayField(){return this.associatedLayer?.displayField??null}readProfile(e,t){const s=t.store.profile;return null!=s&&Oe[s]?Oe[s]:(E.getLogger(this).error("Unknown or missing profile",{profile:s,layer:this}),"mesh-pyramids")}load(e){const t=null!=e?e.signal:null,s=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(P).then((()=>this._fetchService(t))).then((()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),this._loadFilterGeometries()]))).then((()=>this._validateElevationInfo())).then((()=>this._applyAssociatedLayerOverrides())).then((()=>this._populateFieldUsageInfo())).then((()=>A(this,{origin:"service"},t))).then((()=>D(this.renderer,this.fieldsIndex))).then((()=>this.finishLoadEditablePortalLayer(e)));return this.addResolvingPromise(s),Promise.resolve(this)}async beforeSave(){null!=this.filter&&(this.filter=this.filter.clone(),await this.load())}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(e){E.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null}}createQuery(){const e=new T;return"mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then((s=>s.queryExtent(e||this.createQuery(),t)))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then((s=>s.queryFeatureCount(e||this.createQuery(),t)))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then((s=>s.queryFeatures(e||this.createQuery(),t))).then((e=>{if(e?.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e}))}async queryCachedAttributes(e,t){const s=N(this.fieldsIndex,await ce(this,ye(this)));return ne(this.parsedUrl.path,this.attributeStorageInfo??[],e,t,s)}async queryCachedFeature(e,t){const s=await this.queryCachedAttributes(e,[t]);if(!s||0===s.length)throw new R("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const i=new G;return i.attributes=s[0],i.layer=this,i.sourceLayer=this,i}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then((s=>s.queryObjectIds(e||this.createQuery(),t)))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then((s=>s.queryAttachments(e,t)))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(E.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return q(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e?.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new R("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new R("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some((t=>t.name===e))}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new R("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const s=this.fieldsIndex.get(e);if(!s)throw new R("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const e of this.statisticsInfo)if(e.name===s.name){const s=U(this.parsedUrl.path,e.href);return f(s,{query:{f:"json",token:this.apiKey},responseType:"json",signal:t?t.signal:null}).then((e=>e.data))}throw new R("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(re.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(re.SAVE,e)}async applyEdits(e,t){const{applyEdits:s}=await import("./p-c3d1eaf6.js");if(await this.load(),!this.associatedLayer)throw new R(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),s(this,this.associatedLayer.source,e,t)}async uploadAssets(e,t){if(await this.load(),null==this.associatedLayer)throw new R(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,t)}on(e,t){return super.on(e,t)}validateLayer(e){if(e.layerType&&!Ie.includes(e.layerType))throw new R("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new R("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new R("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function t(e,t){let s=!1,i=!1;if(null==e)s=!0,i=!0;else{const r=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":s=!0,i=r;break;case"vertex-reference-frame":s=!0,i=!r;break;default:s=!1}}if(!s)throw new R("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!i)throw new R("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}t(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else{if("mesh-pyramids"!==this.profile)throw new R("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some((t=>t.name===e.name))),s=!!this.associatedLayer?.fields?.some((t=>t&&e.name===t.name)),i={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||s,supportsLayerQuery:s};this._fieldUsageInfo[e.name]=i}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides(),this._applyAssociatedLayerExtentOverride()}_applyAssociatedLayerFieldsOverrides(){if(!this.associatedLayer?.fields)return;let e=null;for(const t of this.associatedLayer.fields){const s=this.getField(t.name);s?(!s.domain&&t.domain&&(s.domain=t.domain.clone()),s.editable=t.editable,s.nullable=t.nullable,s.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled"],t=k(this);for(let s=0;s<e.length;s++){const i=e[s],r=this.originIdOf(i),n=this.associatedLayer.originIdOf(i);r<n&&(n===_.SERVICE||n===_.PORTAL_ITEM)&&t.setAtOrigin(i,this.associatedLayer[i],n)}}_applyAssociatedLayerExtentOverride(){const e=this.associatedLayer?.editingInfo?.lastEditDate,t=this.associatedLayer?.serverGens,s=this.associatedLayer?.getAtOrigin("fullExtent","service");if(!L()||null==this.associatedLayer?.infoFor3D||!s||!C(this.associatedLayer?.url)||!e||this.serviceUpdateTimeStamp?.lastUpdate===e.getTime()||!this.serviceUpdateTimeStamp&&t?.minServerGen===t?.serverGen)return;k(this).setAtOrigin("fullExtent",s.clone(),_.SERVICE)}async _setAssociatedFeatureLayer(e){if(!["mesh-pyramids","points"].includes(this.profile))return;const t=new ae(this.parsedUrl,this.portalItem,this.apiKey,e);try{this.associatedLayer=await t.fetch()}catch(e){Q(e)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){await M((()=>this.popupEnabled&&null!=this.popupTemplate));const e=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?E.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):E.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}_validateElevationInfo(){const e=this.elevationInfo;e&&("mesh-pyramids"===this.profile&&"relative-to-scene"===e.mode&&E.getLogger(this).warn(".elevationInfo=","Mesh scene layers don't support relative-to-scene elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&E.getLogger(this).warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))}};e([t({types:{key:"type",base:V,typeMap:{selection:$}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],Fe.prototype,"featureReduction",void 0),e([t({type:[fe],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],Fe.prototype,"rangeInfos",void 0),e([t({json:{read:!1}})],Fe.prototype,"associatedLayer",void 0),e([t({type:["show","hide"]})],Fe.prototype,"listMode",void 0),e([t({type:["ArcGISSceneServiceLayer"]})],Fe.prototype,"operationalLayerType",void 0),e([t({json:{read:!1},readOnly:!0})],Fe.prototype,"type",void 0),e([t({...Se.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],Fe.prototype,"fields",void 0),e([t()],Fe.prototype,"types",null),e([t()],Fe.prototype,"typeIdField",null),e([t()],Fe.prototype,"templates",null),e([t()],Fe.prototype,"formTemplate",null),e([t({readOnly:!0})],Fe.prototype,"fieldsIndex",null),e([t({type:K,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],Fe.prototype,"floorInfo",void 0),e([t(Se.outFields)],Fe.prototype,"outFields",void 0),e([t({type:le,readOnly:!0,json:{read:!1}})],Fe.prototype,"nodePages",void 0),e([d("service","nodePages",["nodePages","pointNodePages"])],Fe.prototype,"readNodePages",null),e([t({type:[pe],readOnly:!0})],Fe.prototype,"materialDefinitions",void 0),e([t({type:[de],readOnly:!0})],Fe.prototype,"textureSetDefinitions",void 0),e([t({type:[ue],readOnly:!0})],Fe.prototype,"geometryDefinitions",void 0),e([t({readOnly:!0})],Fe.prototype,"serviceUpdateTimeStamp",void 0),e([t({readOnly:!0})],Fe.prototype,"attributeStorageInfo",void 0),e([t({readOnly:!0})],Fe.prototype,"statisticsInfo",void 0),e([t({type:n.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],Fe.prototype,"excludeObjectIds",void 0),e([t({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],Fe.prototype,"definitionExpression",void 0),e([t({type:je,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],Fe.prototype,"filter",void 0),e([t({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],Fe.prototype,"path",void 0),e([t(W)],Fe.prototype,"elevationInfo",null),e([t({type:String})],Fe.prototype,"geometryType",null),e([t(z)],Fe.prototype,"labelsVisible",void 0),e([t({type:[J],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:H},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:H},write:!0}})],Fe.prototype,"labelingInfo",void 0),e([t(Z)],Fe.prototype,"legendEnabled",void 0),e([t({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){if("number"==typeof e&&e>=0&&e<=1)return e;const s=t.layerDefinition?.drawingInfo?.transparency;return void 0!==s?B(s):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],Fe.prototype,"opacity",void 0),e([t({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],Fe.prototype,"priority",void 0),e([t({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],Fe.prototype,"semantic",void 0),e([t({types:Y,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],Fe.prototype,"renderer",null),e([t({json:{read:!1}})],Fe.prototype,"cachedDrawingInfo",void 0),e([d("service","cachedDrawingInfo")],Fe.prototype,"readCachedDrawingInfo",null),e([t({readOnly:!0,json:{read:!1}})],Fe.prototype,"capabilities",null),e([t({type:Boolean,json:{read:!1}})],Fe.prototype,"editingEnabled",null),e([t({readOnly:!0,json:{write:!1,read:!1}})],Fe.prototype,"infoFor3D",null),e([t(X)],Fe.prototype,"popupEnabled",void 0),e([t({type:ee,json:{name:"popupInfo",write:!0}})],Fe.prototype,"popupTemplate",void 0),e([t({readOnly:!0,json:{read:!1}})],Fe.prototype,"defaultPopupTemplate",null),e([t({type:String,json:{read:!1}})],Fe.prototype,"objectIdField",void 0),e([d("service","objectIdField",["objectIdField","fields"])],Fe.prototype,"readObjectIdField",null),e([t({type:String,json:{read:!1}})],Fe.prototype,"globalIdField",void 0),e([d("service","globalIdField",["globalIdField","fields"])],Fe.prototype,"readGlobalIdField",null),e([t({readOnly:!0,type:String,json:{read:!1}})],Fe.prototype,"displayField",null),e([t({type:String,json:{read:!1}})],Fe.prototype,"profile",void 0),e([d("service","profile",["store.profile"])],Fe.prototype,"readProfile",null),e([t({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],Fe.prototype,"normalReferenceFrame",void 0),e([t(te)],Fe.prototype,"screenSizePerspectiveEnabled",void 0),Fe=e([s("esri.layers.SceneLayer")],Fe);const Oe={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},xe={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"},De=Fe;export default De;
//# sourceMappingURL=p-bf33ba15.js.map