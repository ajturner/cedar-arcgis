import{l as e,y as t,hx as r,n as s,o as i,h5 as o,ik as n,h2 as l,q as a,a8 as u,W as c,b as p,s as d,e as y,j5 as h,c1 as m,bJ as v,a6 as w,M as f,ce as g,aT as b,N as S,aU as B,R as T,a5 as j,aa as P,ab as A,bk as N,V as R,hG as M,hH as L,d3 as I,d4 as D,d5 as k,aO as x,bS as C,au as F,cJ as O,dl as U,c as G,iD as E,bP as _,cL as J,aK as q,bQ as z,bn as Z,d0 as W,Q as V,j6 as $,hp as Q,eF as H,dJ as K}from"./p-b54724b6.js";import{i as X}from"./p-bafc5e09.js";import{f as Y,i as ee,b as te}from"./p-a5e3ec2a.js";import{U as re,y as se,s as ie,R as oe,r as ne,a as le,b as ae,n as ue,o as ce,w as pe,d as de,D as ye,e as he,k as me,i as ve,f as we,l as fe,m as ge,c as be,C as Se,T as Be,j as Te,O as je,S as Pe,g as Ae}from"./p-bbc22af5.js";import"./p-bf0e41eb.js";import"./p-80be55a5.js";let Ne=class extends i{constructor(e){super(e),this.break=new o({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}}),this.first=new o({color:[0,255,0],size:20,outline:{color:[255,255,255],width:4}}),this.unlocated=new o({color:[255,0,0],size:12,outline:{color:[255,255,255],width:3}}),this.last=new o({color:[255,0,0],size:20,outline:{color:[255,255,255],width:4}}),this.middle=new o({color:[51,51,51],size:12,outline:{color:[0,122,194],width:3}}),this.waypoint=new o({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}})}};e([t({types:r})],Ne.prototype,"break",void 0),e([t({types:r})],Ne.prototype,"first",void 0),e([t({types:r})],Ne.prototype,"unlocated",void 0),e([t({types:r})],Ne.prototype,"last",void 0),e([t({types:r})],Ne.prototype,"middle",void 0),e([t({types:r})],Ne.prototype,"waypoint",void 0),Ne=e([s("esri.layers.support.RouteStopSymbols")],Ne);const Re=Ne;let Me=class extends i{constructor(e){super(e),this.directionLines=new n({color:[0,122,194],width:6}),this.directionPoints=new o({color:[255,255,255],size:6,outline:{color:[0,122,194],width:2}}),this.pointBarriers=new o({style:"x",size:10,outline:{color:[255,0,0],width:3}}),this.polygonBarriers=new l({color:[255,170,0,.6],outline:{width:7.5,color:[255,0,0,.6]}}),this.polylineBarriers=new n({width:7.5,color:[255,85,0,.7]}),this.routeInfo=new n({width:8,color:[20,89,127]}),this.stops=new Re}};e([t({types:r})],Me.prototype,"directionLines",void 0),e([t({types:r})],Me.prototype,"directionPoints",void 0),e([t({types:r})],Me.prototype,"pointBarriers",void 0),e([t({types:r})],Me.prototype,"polygonBarriers",void 0),e([t({types:r})],Me.prototype,"polylineBarriers",void 0),e([t({types:r})],Me.prototype,"routeInfo",void 0),e([t({type:Re})],Me.prototype,"stops",void 0),Me=e([s("esri.layers.support.RouteSymbols")],Me);const Le=Me;let Ie=class extends i{constructor(e){super(e),this.dataType=null,this.name=null,this.parameterNames=null,this.restrictionUsageParameterName=null,this.timeNeutralAttributeName=null,this.trafficSupport=null,this.units=null,this.usageType=null}};e([t({type:String})],Ie.prototype,"dataType",void 0),e([a(re,{ignoreUnknown:!1})],Ie.prototype,"name",void 0),e([t({type:[String]})],Ie.prototype,"parameterNames",void 0),e([t({type:String})],Ie.prototype,"restrictionUsageParameterName",void 0),e([a(se,{ignoreUnknown:!1})],Ie.prototype,"timeNeutralAttributeName",void 0),e([t({type:String})],Ie.prototype,"trafficSupport",void 0),e([a(ie)],Ie.prototype,"units",void 0),e([a(oe)],Ie.prototype,"usageType",void 0),Ie=e([s("esri.rest.support.NetworkAttribute")],Ie);const De=Ie;let ke=class extends i{constructor(e){super(e),this.buildTime=null,this.name=null,this.networkAttributes=null,this.networkSources=null,this.state=null}};e([t({type:Number})],ke.prototype,"buildTime",void 0),e([t({type:String})],ke.prototype,"name",void 0),e([t({type:[De]})],ke.prototype,"networkAttributes",void 0),e([t()],ke.prototype,"networkSources",void 0),e([t({type:String})],ke.prototype,"state",void 0),ke=e([s("esri.rest.support.NetworkDataset")],ke);const xe=ke;let Ce=class extends i{constructor(e){super(e),this.accumulateAttributeNames=null,this.attributeParameterValues=null,this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}readAccumulateAttributes(e){return null==e?null:e.map((e=>re.fromJSON(e)))}writeAccumulateAttributes(e,t,r){null!=e&&e.length&&(t[r]=e.map((e=>re.toJSON(e))))}readDefaultTravelMode(e,t){const r=t.supportedTravelModes?.find((({id:e})=>e===t.defaultTravelMode))??t.supportedTravelModes?.find((({itemId:e})=>e===t.defaultTravelMode));return r?le.fromJSON(r):null}};e([t()],Ce.prototype,"accumulateAttributeNames",void 0),e([u("accumulateAttributeNames")],Ce.prototype,"readAccumulateAttributes",null),e([c("accumulateAttributeNames")],Ce.prototype,"writeAccumulateAttributes",null),e([t()],Ce.prototype,"attributeParameterValues",void 0),e([t()],Ce.prototype,"currentVersion",void 0),e([t()],Ce.prototype,"defaultTravelMode",void 0),e([u("defaultTravelMode",["defaultTravelMode","supportedTravelModes"])],Ce.prototype,"readDefaultTravelMode",null),e([t()],Ce.prototype,"directionsLanguage",void 0),e([a(ne)],Ce.prototype,"directionsLengthUnits",void 0),e([t()],Ce.prototype,"directionsSupportedLanguages",void 0),e([a(se,{ignoreUnknown:!1})],Ce.prototype,"directionsTimeAttribute",void 0),e([t()],Ce.prototype,"hasZ",void 0),e([a(re,{ignoreUnknown:!1})],Ce.prototype,"impedance",void 0),e([t({type:xe})],Ce.prototype,"networkDataset",void 0),e([t({type:[le]})],Ce.prototype,"supportedTravelModes",void 0),Ce=e([s("esri.rest.support.NetworkServiceDescription")],Ce);const Fe=Ce;const Oe=p.getLogger("esri.rest.networkService");function Ue(e,t,r,s){s[r]=[t.length,t.length+e.length],e.forEach((e=>{t.push(e.geometry)}))}function Ge(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)e.z=void 0}Oe.warnOnce("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}function Ee(e,t){for(let r=0;r<t.length;r++){const s=e[t[r]];if(s&&s.length)for(const e of s)if(null!=e&&e.hasZ)return!0}return!1}async function _e(e,t,r){if(!e)throw new d("network-service:missing-url","Url to Network service is missing");const s=ee({f:"json",token:t},r),{data:i}=await y(e,s),o=i.currentVersion>=10.4?qe(e,t,r):Je(e,r),{defaultTravelMode:n,supportedTravelModes:l}=await o;return i.defaultTravelMode=n,i.supportedTravelModes=l,Fe.fromJSON(i)}async function Je(e,t){const r=ee({f:"json"},t),{data:s}=await y(e.replace(/\/rest\/.*$/i,"/info"),r);if(!s||!s.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:i}=s,o=h(i)+"/sharing/rest/portals/self",{data:n}=await y(o,r),l=m("helperServices.routingUtilities.url",n);if(!l)return{supportedTravelModes:[],defaultTravelMode:null};const a=Y(i),u=/\/solve$/i.test(a.path)?"Route":/\/solveclosestfacility$/i.test(a.path)?"ClosestFacility":"ServiceAreas",c=ee({f:"json",serviceName:u},t),p=h(l)+"/GetTravelModes/execute",d=await y(p,c),v=[];let w=null;if(d?.data?.results?.length){const e=d.data.results;for(const t of e)if("supportedTravelModes"===t.paramName){if(t.value?.features)for(const{attributes:e}of t.value.features)if(e){const t=JSON.parse(e.TravelMode);v.push(t)}}else"defaultTravelMode"===t.paramName&&(w=t.value)}return{supportedTravelModes:v,defaultTravelMode:w}}async function qe(e,t,r){try{const s=ee({f:"json",token:t},r),i=h(e)+"/retrieveTravelModes",{data:{supportedTravelModes:o,defaultTravelMode:n}}=await y(i,s);return{supportedTravelModes:o,defaultTravelMode:n}}catch(e){throw new d("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:e})}}const ze=new v({esriJobMessageTypeInformative:"informative",esriJobMessageTypeProcessDefinition:"process-definition",esriJobMessageTypeProcessStart:"process-start",esriJobMessageTypeProcessStop:"process-stop",esriJobMessageTypeWarning:"warning",esriJobMessageTypeError:"error",esriJobMessageTypeEmpty:"empty",esriJobMessageTypeAbort:"abort"});let Ze=class extends i{constructor(e){super(e),this.description=null,this.type=null}};e([t({type:String,json:{write:!0}})],Ze.prototype,"description",void 0),e([t({type:String,json:{read:ze.read,write:ze.write}})],Ze.prototype,"type",void 0),Ze=e([s("esri.rest.support.GPMessage")],Ze);const We=Ze;const Ve=new v({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let $e=class extends We{constructor(e){super(e),this.type=null}};e([t({type:String,json:{read:Ve.read,write:Ve.write}})],$e.prototype,"type",void 0),$e=e([s("esri.rest.support.NAMessage")],$e);const Qe=$e;let He=class extends i{constructor(e){super(e)}};e([t({json:{read:{source:"string"}}})],He.prototype,"text",void 0),e([a(ae,{name:"stringType"})],He.prototype,"type",void 0),He=e([s("esri.rest.support.DirectionsString")],He);const Ke=He;let Xe=class extends i{constructor(e){super(e),this.arriveTime=null,this.arriveTimeOffset=null,this.geometry=null,this.strings=null}readArriveTimeOffset(e,t){return ue(t.ETA,t.arriveTimeUTC)}readGeometry(e,t){return w.fromJSON(t.point)}};e([t({type:Date,json:{read:{source:"arriveTimeUTC"}}})],Xe.prototype,"arriveTime",void 0),e([t()],Xe.prototype,"arriveTimeOffset",void 0),e([u("arriveTimeOffset",["arriveTimeUTC","ETA"])],Xe.prototype,"readArriveTimeOffset",null),e([t({type:w})],Xe.prototype,"geometry",void 0),e([u("geometry",["point"])],Xe.prototype,"readGeometry",null),e([t({type:[Ke]})],Xe.prototype,"strings",void 0),Xe=e([s("esri.rest.support.DirectionsEvent")],Xe);const Ye=Xe;function et(e){if(null==e||""===e)return null;let t=0,r=0,s=0,i=0;const o=[];let n,l,a,u,c,p,d,y,h=0,m=0,v=0;if(c=e.match(/((\+|\-)[^\+\-\|]+|\|)/g),c||(c=[]),0===parseInt(c[h],32)){h=2;const e=parseInt(c[h],32);h++,p=parseInt(c[h],32),h++,1&e&&(m=c.indexOf("|")+1,d=parseInt(c[m],32),m++),2&e&&(v=c.indexOf("|",m)+1,y=parseInt(c[v],32),v++)}else p=parseInt(c[h],32),h++;for(;h<c.length&&"|"!==c[h];){n=parseInt(c[h],32)+t,h++,t=n,l=parseInt(c[h],32)+r,h++,r=l;const e=[n/p,l/p];m&&(u=parseInt(c[m],32)+s,m++,s=u,e.push(u/d)),v&&(a=parseInt(c[v],32)+i,v++,i=a,e.push(a/y)),o.push(e)}return{paths:[o],hasZ:m>0,hasM:v>0}}let tt=class extends f{constructor(e){super(e),this.events=null,this.strings=null}readGeometry(e,t){const r=et(t.compressedGeometry);return null!=r?g.fromJSON(r):null}};e([t({type:[Ye]})],tt.prototype,"events",void 0),e([u("geometry",["compressedGeometry"])],tt.prototype,"readGeometry",null),e([t({type:[Ke]})],tt.prototype,"strings",void 0),tt=e([s("esri.rest.support.DirectionsFeature")],tt);const rt=tt;function st(e,t){if(0===e.length)return new g({spatialReference:t});const r=[];for(const t of e)for(const e of t.paths)r.push(...e);const s=[];r.forEach(((e,t)=>{0!==t&&e[0]===r[t-1][0]&&e[1]===r[t-1][1]||s.push(e)}));const{hasM:i,hasZ:o}=e[0];return new g({hasM:i,hasZ:o,paths:[s],spatialReference:t})}let it=class extends S{constructor(e){super(e),this.extent=null,this.features=[],this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,t){if(!e)return[];const r=t.summary.envelope.spatialReference??t.spatialReference,s=r&&B.fromJSON(r);return e.map((e=>{const t=rt.fromJSON(e);if(null!=t.geometry&&(t.geometry.spatialReference=s),null!=t.events)for(const e of t.events)null!=e.geometry&&(e.geometry.spatialReference=s);return t}))}get mergedGeometry(){if(!this.features)return null;return st(this.features.map((({geometry:e})=>e)),this.extent.spatialReference)}get strings(){return this.features.map((({strings:e})=>e)).flat().filter(T)}};e([t({type:b,json:{read:{source:"summary.envelope"}}})],it.prototype,"extent",void 0),e([t({nonNullable:!0})],it.prototype,"features",void 0),e([u("features")],it.prototype,"readFeatures",null),e([t()],it.prototype,"geometryType",void 0),e([t({readOnly:!0})],it.prototype,"mergedGeometry",null),e([t()],it.prototype,"routeId",void 0),e([t()],it.prototype,"routeName",void 0),e([t({value:null,readOnly:!0})],it.prototype,"strings",null),e([t({json:{read:{source:"summary.totalDriveTime"}}})],it.prototype,"totalDriveTime",void 0),e([t({json:{read:{source:"summary.totalLength"}}})],it.prototype,"totalLength",void 0),e([t({json:{read:{source:"summary.totalTime"}}})],it.prototype,"totalTime",void 0),it=e([s("esri.rest.support.DirectionsFeatureSet")],it);const ot=it;let nt=class extends i{constructor(e){super(e),this.directionLines=null,this.directionPoints=null,this.directions=null,this.route=null,this.routeName=null,this.stops=null,this.traversedEdges=null,this.traversedJunctions=null,this.traversedTurns=null}};e([t({type:S,json:{write:!0}})],nt.prototype,"directionLines",void 0),e([t({type:S,json:{write:!0}})],nt.prototype,"directionPoints",void 0),e([t({type:ot,json:{write:!0}})],nt.prototype,"directions",void 0),e([t({type:f,json:{write:!0}})],nt.prototype,"route",void 0),e([t({type:String,json:{write:!0}})],nt.prototype,"routeName",void 0),e([t({type:[f],json:{write:!0}})],nt.prototype,"stops",void 0),e([t({type:S,json:{write:!0}})],nt.prototype,"traversedEdges",void 0),e([t({type:S,json:{write:!0}})],nt.prototype,"traversedJunctions",void 0),e([t({type:S,json:{write:!0}})],nt.prototype,"traversedTurns",void 0),nt=e([s("esri.rest.support.RouteResult")],nt);const lt=nt;function at(e){return e?S.fromJSON(e).features.filter(T):[]}let ut=class extends i{constructor(e){super(e),this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(e,t){return at(t.barriers)}readPolylineBarriers(e){return at(e)}readPolygonBarriers(e){return at(e)}};e([t({type:[Qe]})],ut.prototype,"messages",void 0),e([t({type:[f]})],ut.prototype,"pointBarriers",void 0),e([u("pointBarriers",["barriers"])],ut.prototype,"readPointBarriers",null),e([t({type:[f]})],ut.prototype,"polylineBarriers",void 0),e([u("polylineBarriers")],ut.prototype,"readPolylineBarriers",null),e([t({type:[f]})],ut.prototype,"polygonBarriers",void 0),e([u("polygonBarriers")],ut.prototype,"readPolygonBarriers",null),e([t({type:[lt]})],ut.prototype,"routeResults",void 0),ut=e([s("esri.rest.support.RouteSolveResult")],ut);const ct=ut;function pt(e){return e instanceof S}async function dt(e,t,r){const s=[],i=[],o={},n={},l=Y(e),{path:a}=l;pt(t.stops)&&Ue(t.stops.features,i,"stops.features",o),pt(t.pointBarriers)&&Ue(t.pointBarriers.features,i,"pointBarriers.features",o),pt(t.polylineBarriers)&&Ue(t.polylineBarriers.features,i,"polylineBarriers.features",o),pt(t.polygonBarriers)&&Ue(t.polygonBarriers.features,i,"polygonBarriers.features",o);const u=await te(i);for(const e in o){const t=o[e];s.push(e),n[e]=u.slice(t[0],t[1])}if(Ee(n,s)){let e=null;try{e=await _e(a,t.apiKey,r)}catch{}e&&!e.hasZ&&Ge(n,s)}for(const e in n)n[e].forEach(((r,s)=>{t.get(e)[s].geometry=r}));const c={...r,query:{...l.query,...ce(t),f:"json"}},p=a.endsWith("/solve")?a:`${a}/solve`,{data:d}=await y(p,c);return yt(d)}function yt(e){const{barriers:t,directionLines:r,directionPoints:s,directions:i,messages:o,polygonBarriers:n,polylineBarriers:l,routes:a,stops:u,traversedEdges:c,traversedJunctions:p,traversedTurns:d}=e,y=e=>{const t=m.find((t=>t.routeName===e));if(null!=t)return t;const r={routeId:m.length+1,routeName:e};return m.push(r),r},h=e=>{const t=m.find((t=>t.routeId===e));if(null!=t)return t;const r={routeId:e,routeName:null};return m.push(r),r},m=[];a?.features.forEach(((e,t)=>{e.geometry.spatialReference=a.spatialReference??void 0;const r=e.attributes.Name,s=t+1;m.push({routeId:s,routeName:r,route:e})})),i?.forEach((e=>{const{routeName:t}=e;y(t).directions=e}));const v=(u?.features.every((e=>null==e.attributes.RouteName))??!1)&&m.length>0?m[0].routeName:null;return u?.features.forEach((e=>{e.geometry&&(e.geometry.spatialReference??=u.spatialReference??void 0);const t=v??e.attributes.RouteName,r=y(t);r.stops??=[],r.stops.push(e)})),r?.features.forEach((e=>{const t=e.attributes.RouteID,s=h(t),{geometryType:i,spatialReference:o}=r;s.directionLines??={features:[],geometryType:i,spatialReference:o},s.directionLines.features.push(e)})),s?.features.forEach((e=>{const t=e.attributes.RouteID,r=h(t),{geometryType:i,spatialReference:o}=s;r.directionPoints??={features:[],geometryType:i,spatialReference:o},r.directionPoints.features.push(e)})),c?.features.forEach((e=>{const t=e.attributes.RouteID,r=h(t),{geometryType:s,spatialReference:i}=c;r.traversedEdges??={features:[],geometryType:s,spatialReference:i},r.traversedEdges.features.push(e)})),p?.features.forEach((e=>{const t=e.attributes.RouteID,r=h(t),{geometryType:s,spatialReference:i}=p;r.traversedJunctions??={features:[],geometryType:s,spatialReference:i},r.traversedJunctions.features.push(e)})),d?.features.forEach((e=>{const t=e.attributes.RouteID,r=h(t);r.traversedTurns??={features:[]},r.traversedTurns.features.push(e)})),ct.fromJSON({routeResults:m,barriers:t,polygonBarriers:n,polylineBarriers:l,messages:o})}const ht={type:String,json:{read:{source:"token"},write:{target:"token"}}};let mt=class extends(j(i)){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.geometry=null,this.geometryType=null,this.name=null,this.spatialRelationship=null,this.type="layer",this.where=null}};e([t({type:Boolean,json:{write:!0}})],mt.prototype,"doNotLocateOnRestrictedElements",void 0),e([t({types:P,json:{read:A,write:!0}})],mt.prototype,"geometry",void 0),e([a(pe)],mt.prototype,"geometryType",void 0),e([t({type:String,json:{name:"layerName",write:!0}})],mt.prototype,"name",void 0),e([a(de,{name:"spatialRel"})],mt.prototype,"spatialRelationship",void 0),e([t({type:String,json:{write:!0}})],mt.prototype,"type",void 0),e([t({type:String,json:{write:!0}})],mt.prototype,"where",void 0),mt=e([s("esri.rest.support.DataLayer")],mt);const vt=mt;var wt;let ft=wt=class extends S{constructor(e){super(e),this.doNotLocateOnRestrictedElements=null}clone(){return new wt({doNotLocateOnRestrictedElements:this.doNotLocateOnRestrictedElements,...this.cloneProperties()})}};e([t({type:Boolean,json:{write:!0}})],ft.prototype,"doNotLocateOnRestrictedElements",void 0),ft=wt=e([s("esri.rest.support.NetworkFeatureSet")],ft);const gt=ft;let bt=class extends(j(i)){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.url=null}};e([t({type:Boolean,json:{write:!0}})],bt.prototype,"doNotLocateOnRestrictedElements",void 0),e([t({type:String,json:{write:!0}})],bt.prototype,"url",void 0),bt=e([s("esri.rest.support.NetworkUrl")],bt);const St=bt;var Bt;let Tt=Bt=class extends(j(i)){constructor(e){super(e),this.accumulateAttributes=null,this.apiKey=null,this.attributeParameterValues=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsOutputType=null,this.directionsStyleName=null,this.directionsTimeAttribute=null,this.findBestSequence=null,this.geometryPrecision=null,this.geometryPrecisionM=null,this.geometryPrecisionZ=null,this.ignoreInvalidLocations=null,this.impedanceAttribute=null,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines="true-shape",this.outSpatialReference=null,this.overrides=null,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.preserveObjectID=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnBarriers=!1,this.returnDirections=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.returnRoutes=!0,this.returnStops=!1,this.returnTraversedEdges=null,this.returnTraversedJunctions=null,this.returnTraversedTurns=null,this.returnZ=!0,this.startTime=null,this.startTimeIsUTC=!0,this.stops=null,this.timeWindowsAreUTC=null,this.travelMode=null,this.useHierarchy=null,this.useTimeWindows=null}static from(e){return N(Bt,e)}readAccumulateAttributes(e){return null==e?null:e.map((e=>re.fromJSON(e)))}writeAccumulateAttributes(e,t,r){null!=e&&e.length&&(t[r]=e.map((e=>re.toJSON(e))))}writePointBarriers(e,t,r){Lt(e,t,r)}writePolygonBarrier(e,t,r){Lt(e,t,r)}writePolylineBarrier(e,t,r){Lt(e,t,r)}readRestrictionAttributes(e){return null==e?null:e.map((e=>ye.fromJSON(e)))}writeRestrictionAttributes(e,t,r){null!=e&&e.length&&(t[r]=e.map((e=>ye.toJSON(e))))}readStartTime(e,t){const{startTime:r}=t;return null==r?null:"now"===r?"now":new Date(r)}writeStartTime(e,t){null!=e&&(t.startTime="now"===e?"now":e.getTime())}readStops(e,t){return Mt(t.stops)}writeStops(e,t,r){Lt(e,t,r)}};e([t({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],Tt.prototype,"accumulateAttributes",void 0),e([u("accumulateAttributes")],Tt.prototype,"readAccumulateAttributes",null),e([c("accumulateAttributes")],Tt.prototype,"writeAccumulateAttributes",null),e([t(ht)],Tt.prototype,"apiKey",void 0),e([t({json:{write:!0}})],Tt.prototype,"attributeParameterValues",void 0),e([t({type:String,json:{write:!0}})],Tt.prototype,"directionsLanguage",void 0),e([a(ne)],Tt.prototype,"directionsLengthUnits",void 0),e([a(he)],Tt.prototype,"directionsOutputType",void 0),e([a(me)],Tt.prototype,"directionsStyleName",void 0),e([a(se,{name:"directionsTimeAttributeName",ignoreUnknown:!1})],Tt.prototype,"directionsTimeAttribute",void 0),e([t({type:Boolean,json:{write:!0}})],Tt.prototype,"findBestSequence",void 0),e([t({type:Number,json:{write:!0}})],Tt.prototype,"geometryPrecision",void 0),e([t({type:Number,json:{write:!0}})],Tt.prototype,"geometryPrecisionM",void 0),e([t({type:Number,json:{write:!0}})],Tt.prototype,"geometryPrecisionZ",void 0),e([t({type:Boolean,json:{write:!0}})],Tt.prototype,"ignoreInvalidLocations",void 0),e([a(re,{name:"impedanceAttributeName",ignoreUnknown:!1})],Tt.prototype,"impedanceAttribute",void 0),e([t({type:Number,json:{write:!0}})],Tt.prototype,"outputGeometryPrecision",void 0),e([a(ve)],Tt.prototype,"outputGeometryPrecisionUnits",void 0),e([a(we)],Tt.prototype,"outputLines",void 0),e([t({type:B,json:{name:"outSR",write:!0}})],Tt.prototype,"outSpatialReference",void 0),e([t({json:{write:!0}})],Tt.prototype,"overrides",void 0),e([t({json:{name:"barriers",write:!0}})],Tt.prototype,"pointBarriers",void 0),e([c("pointBarriers")],Tt.prototype,"writePointBarriers",null),e([t({json:{write:!0}})],Tt.prototype,"polygonBarriers",void 0),e([c("polygonBarriers")],Tt.prototype,"writePolygonBarrier",null),e([t({json:{write:!0}})],Tt.prototype,"polylineBarriers",void 0),e([c("polylineBarriers")],Tt.prototype,"writePolylineBarrier",null),e([t({type:Boolean,json:{write:!0}})],Tt.prototype,"preserveFirstStop",void 0),e([t({type:Boolean,json:{write:!0}})],Tt.prototype,"preserveLastStop",void 0),e([t({type:Boolean,json:{write:!0}})],Tt.prototype,"preserveObjectID",void 0),e([t({type:[String],json:{name:"restrictionAttributeNames",write:!0}})],Tt.prototype,"restrictionAttributes",void 0),e([u("restrictionAttributes")],Tt.prototype,"readRestrictionAttributes",null),e([c("restrictionAttributes")],Tt.prototype,"writeRestrictionAttributes",null),e([a(fe)],Tt.prototype,"restrictUTurns",void 0),e([t({type:Boolean,json:{write:!0}})],Tt.prototype,"returnBarriers",void 0),e([t({type:Boolean,json:{write:!0}})],Tt.prototype,"returnDirections",void 0),e([t({type:Boolean,json:{write:!0}})],Tt.prototype,"returnPolygonBarriers",void 0),e([t({type:Boolean,json:{write:!0}})],Tt.prototype,"returnPolylineBarriers",void 0),e([t({type:Boolean,json:{write:!0}})],Tt.prototype,"returnRoutes",void 0),e([t({type:Boolean,json:{write:!0}})],Tt.prototype,"returnStops",void 0),e([t({type:Boolean,json:{write:!0}})],Tt.prototype,"returnTraversedEdges",void 0),e([t({type:Boolean,json:{write:!0}})],Tt.prototype,"returnTraversedJunctions",void 0),e([t({type:Boolean,json:{write:!0}})],Tt.prototype,"returnTraversedTurns",void 0),e([t({type:Boolean,json:{write:!0}})],Tt.prototype,"returnZ",void 0),e([t({type:Date,json:{type:Number,write:!0}})],Tt.prototype,"startTime",void 0),e([u("startTime")],Tt.prototype,"readStartTime",null),e([c("startTime")],Tt.prototype,"writeStartTime",null),e([t({type:Boolean,json:{write:!0}})],Tt.prototype,"startTimeIsUTC",void 0),e([t({json:{write:!0}})],Tt.prototype,"stops",void 0),e([u("stops")],Tt.prototype,"readStops",null),e([c("stops")],Tt.prototype,"writeStops",null),e([t({type:Boolean,json:{write:!0}})],Tt.prototype,"timeWindowsAreUTC",void 0),e([t({type:le,json:{write:!0}})],Tt.prototype,"travelMode",void 0),e([t({type:Boolean,json:{write:!0}})],Tt.prototype,"useHierarchy",void 0),e([t({type:Boolean,json:{write:!0}})],Tt.prototype,"useTimeWindows",void 0),Tt=Bt=e([s("esri.rest.support.RouteParameters")],Tt);const jt=Tt;function Pt(e){return e&&"type"in e}function At(e){return e&&"features"in e&&"doNotLocateOnRestrictedElements"in e}function Nt(e){return e&&"url"in e}function Rt(e){return e&&"features"in e}function Mt(e){return Pt(e)?vt.fromJSON(e):Nt(e)?St.fromJSON(e):At(e)?gt.fromJSON(e):Rt(e)?S.fromJSON(e):null}function Lt(e,t,r){null!=e&&(t[r]=R.isCollection(e)?{features:e.toArray().map((e=>e.toJSON()))}:e.toJSON())}function It(e){return e.length?e:null}function Dt(e){switch(e){case"esriGeometryPoint":return{type:"esriSMS",style:"esriSMSCircle",size:12,color:[0,0,0,0],outline:Dt("esriGeometryPolyline")};case"esriGeometryPolyline":return{type:"esriSLS",style:"esriSLSSolid",width:1,color:[0,0,0,0]};case"esriGeometryPolygon":return{type:"esriSFS",style:"esriSFSNull",outline:Dt("esriGeometryPolyline")}}}function kt(e){return"layers"in e}function xt(e){return"esri.rest.support.FeatureSet"===e.declaredClass}function Ct(e){return"esri.rest.support.NetworkFeatureSet"===e.declaredClass}function Ft(e,t,r){const s=t.networkDataset?.networkAttributes,i=s?.filter((({usageType:e})=>"cost"===e))??[],o=r.travelMode??t.defaultTravelMode;if(null==o)return void $t.warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");const{timeAttributeName:n,distanceAttributeName:l}=o,a=i.find((({name:e})=>e===n)),u=i.find((({name:e})=>e===l)),c=r.travelMode?.impedanceAttributeName??r.impedanceAttribute??t.impedance,p=a?.units,y=u?.units;if(!p||!y)throw new d("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const h=r.directionsLanguage??t.directionsLanguage,m=r.accumulateAttributes??t.accumulateAttributeNames??[],v=new Set(i.filter((({name:e})=>e===n||e===l||e===c||null!=e&&m.includes(e))).map((({name:e})=>e))),w=e=>{for(const t in e)v.has(t)||delete e[t]};for(const t of e.pointBarriers)null!=t.costs&&(t.addedCost=t.costs[c]??0,w(t.costs));for(const t of e.polygonBarriers)null!=t.costs&&(t.scaleFactor=t.costs[c]??1,w(t.costs));for(const t of e.polylineBarriers)null!=t.costs&&(t.scaleFactor=t.costs[c]??1,w(t.costs));const{routeInfo:f}=e,{findBestSequence:g,preserveFirstStop:b,preserveLastStop:S,startTimeIsUTC:B,timeWindowsAreUTC:T}=r;f.analysisSettings=new Ae({accumulateAttributes:m,directionsLanguage:h,findBestSequence:g,preserveFirstStop:b,preserveLastStop:S,startTimeIsUTC:B,timeWindowsAreUTC:T,travelMode:o}),f.totalDuration=Ut(f.totalCosts?.[n]??0,p),f.totalDistance=Gt(f.totalCosts?.[l]??0,y),f.totalLateDuration=Ut(f.totalViolations?.[n]??0,p),f.totalWaitDuration=Ut(f.totalWait?.[n]??0,p),null!=f.totalCosts&&w(f.totalCosts),null!=f.totalViolations&&w(f.totalViolations),null!=f.totalWait&&w(f.totalWait);for(const t of e.stops)null!=t.serviceCosts&&(t.serviceDuration=Ut(t.serviceCosts[n]??0,p),t.serviceDistance=Gt(t.serviceCosts[l]??0,y),w(t.serviceCosts)),null!=t.cumulativeCosts&&(t.cumulativeDuration=Ut(t.cumulativeCosts[n]??0,p),t.cumulativeDistance=Gt(t.cumulativeCosts[l]??0,y),w(t.cumulativeCosts)),null!=t.violations&&(t.lateDuration=Ut(t.violations[n]??0,p),w(t.violations)),null!=t.wait&&(t.waitDuration=Ut(t.wait[n]??0,p),w(t.wait))}async function Ot(e){const t=B.WGS84;return await J(e.spatialReference,t),q(e,t)}function Ut(e,t){switch(t){case"seconds":return e/60;case"hours":return 60*e;case"days":return 60*e*24;default:return e}}function Gt(e,t){return"decimal-degrees"===t||"points"===t||"unknown"===t?e:H(e,t,"meters")}function Et(e){const{attributes:t,geometry:r,popupTemplate:s,symbol:i}=e.toGraphic().toJSON();return{attributes:t,geometry:r,popupInfo:s,symbol:i}}const _t=R.ofType(ge),Jt=R.ofType(be),qt=R.ofType(Se),zt=R.ofType(Be),Zt=R.ofType(Te),Wt=R.ofType(je),Vt="esri.layers.RouteLayer",$t=p.getLogger(Vt);let Qt=class extends(M(L(I(D(k(x(C))))))){constructor(e){super(e),this._cachedServiceDescription=null,this._featureCollection=null,this._type="Feature Collection",this.defaultSymbols=new Le,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new qt,this.polygonBarriers=new zt,this.polylineBarriers=new Zt,this.routeInfo=null,this.spatialReference=B.WGS84,this.stops=new Wt,this.type="route";const t=()=>{this._setStopSymbol(this.stops)};this.addHandles(F((()=>this.stops),"change",t,{sync:!0,onListenerAdd:t}))}writeFeatureCollectionWebmap(e,t,r,s){const i=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter((e=>!!e)),o=i.map(((e,t)=>t)),n="web-map"===s.origin?"featureCollection.layers":"layers";O(n,i,t),t.opacity=this.opacity,t.visibility=this.visible,t.visibleLayers=o}readDirectionLines(e,t){return this._getNetworkFeatures(t,"DirectionLines",(e=>ge.fromGraphic(e)))}readDirectionPoints(e,t){return this._getNetworkFeatures(t,"DirectionPoints",(e=>be.fromGraphic(e)))}get fullExtent(){const e=new b({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:B.WGS84});if(null!=this.routeInfo&&null!=this.routeInfo.geometry)return this.routeInfo.geometry.extent??e;if(null==this.stops)return e;const t=this.stops.filter((e=>null!=e.geometry));if(t.length<2)return e;const{spatialReference:r}=t.at(0).geometry;if(null==r)return e;const s=t.toArray().map((e=>{const t=e.geometry;return[t.x,t.y]}));return new U({points:s,spatialReference:r}).extent}readMaxScale(e,t){const r=kt(t)?t.layers:t.featureCollection?.layers,s=r?.find((e=>null!=e.layerDefinition.maxScale));return s?.layerDefinition.maxScale??0}readMinScale(e,t){const r=kt(t)?t.layers:t.featureCollection?.layers,s=r?.find((e=>null!=e.layerDefinition.minScale));return s?.layerDefinition.minScale??0}readPointBarriers(e,t){return this._getNetworkFeatures(t,"Barriers",(e=>Se.fromGraphic(e)))}readPolygonBarriers(e,t){return this._getNetworkFeatures(t,"PolygonBarriers",(e=>Be.fromGraphic(e)))}readPolylineBarriers(e,t){return this._getNetworkFeatures(t,"PolylineBarriers",(e=>Te.fromGraphic(e)))}readRouteInfo(e,t){const r=this._getNetworkFeatures(t,"RouteInfo",(e=>Pe.fromGraphic(e)));return r.length>0?r.at(0):null}readSpatialReference(e,t){const r=kt(t)?t.layers:t.featureCollection?.layers;if(!r?.length)return B.WGS84;const{layerDefinition:s,featureSet:i}=r[0],o=i.features[0],n=o?.geometry?.spatialReference??i.spatialReference??s.spatialReference??s.extent.spatialReference??K;return B.fromJSON(n)}readStops(e,t){return this._getNetworkFeatures(t,"Stops",(e=>je.fromGraphic(e)),(e=>this._setStopSymbol(e)))}get title(){return null!=this.routeInfo&&null!=this.routeInfo.name?this.routeInfo.name:"Route"}set title(e){this._overrideIfSome("title",e)}get url(){return G.routeServiceUrl}set url(e){null!=e?this._set("url",E(e,$t)):this._set("url",G.routeServiceUrl)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}removeAll(){this.removeResult(),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}removeResult(){null!=this.directionLines&&(this.directionLines.removeAll(),this._set("directionLines",null)),null!=this.directionPoints&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),null!=this.routeInfo&&this._set("routeInfo",null)}async save(){await this.load();const{fullExtent:e,portalItem:t}=this;if(!t)throw new d("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!t.id)throw new d("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if("Feature Collection"!==t.type)throw new d("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(null==this.routeInfo)throw new d("routelayer:route-unsolved","save() requires a solved route");const{portal:r}=t;await r.signIn(),r.user||await t.reload();const{itemUrl:s,itemControl:i}=t;if("admin"!==i&&"update"!==i)throw new d("routelayer:insufficient-permissions","To save this layer, you need to be the owner or an administrator of your organization");const o={messages:[],origin:"portal-item",portal:r,url:s?_(s):void 0,writtenProperties:[]},n=this.write(void 0,o);return t.extent=await Ot(e),t.title=this.title,await t.update({data:n}),t}async saveAs(e,t={}){if(await this.load(),null==this.routeInfo)throw new d("routelayer:route-unsolved","saveAs() requires a solved route");const r=z.from(e).clone();r.extent??=await Ot(this.fullExtent),r.id=null,r.portal??=Z.getDefault(),r.title??=this.title,r.type="Feature Collection",r.typeKeywords=["Data","Feature Collection",W.MULTI_LAYER,"Route Layer"];const{portal:s}=r,i={messages:[],origin:"portal-item",portal:s,url:null,writtenProperties:[]};await s.signIn();const o=t?.folder,n=this.write(void 0,i);return await(s.user?.addItem({item:r,folder:o,data:n})),this.portalItem=r,X(i),i.portalItem=r,r}async solve(e,t){const r=e?.stops??this.stops,s=e?.pointBarriers??It(this.pointBarriers),i=e?.polylineBarriers??It(this.polylineBarriers),o=e?.polygonBarriers??It(this.polygonBarriers);if(null==r)throw new d("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if((xt(r)||Ct(r))&&r.features.length<2||R.isCollection(r)&&r.length<2)throw new d("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");if(R.isCollection(r))for(const e of r)e.routeName=null;const n=e?.apiKey,l=this.url,a=await this._getServiceDescription(l,n,t),u=e?.travelMode??a.defaultTravelMode,c=e?.accumulateAttributes??[];null!=u&&(c.push(u.distanceAttributeName),u.timeAttributeName&&c.push(u.timeAttributeName));const p={startTime:new Date},y={accumulateAttributes:c,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:s,polylineBarriers:i,polygonBarriers:o,preserveFirstStop:!0,preserveLastStop:!0,returnBarriers:!!s,returnDirections:!0,returnPolygonBarriers:!!o,returnPolylineBarriers:!!i,returnRoutes:!0,returnStops:!0,stops:r},h=e?jt.from(e):new jt;for(const e in p)null==h[e]&&(h[e]=p[e]);let m;h.set(y);try{m=await dt(l,h,t)}catch(e){throw V(e)?e:new d("routelayer:failed-route-request","the routing request failed",{error:e})}const v=this._toRouteLayerSolution(m);return this._isOverridden("title")||(this.title=v.routeInfo.name??"Route"),Ft(v,a,h),v}update(e){const{stops:t,directionLines:r,directionPoints:s,pointBarriers:i,polylineBarriers:o,polygonBarriers:n,routeInfo:l}=e;this.set({stops:t,pointBarriers:i,polylineBarriers:o,polygonBarriers:n}),this._set("directionLines",r),this._set("directionPoints",s),this._set("routeInfo",l),null!=l.geometry&&(this.spatialReference=l.geometry.spatialReference)}_getNetworkFeatures(e,t,r,s){const i=kt(e)?e.layers:e.featureCollection?.layers,o=i?.find((e=>e.layerDefinition.name===t));if(null==o)return new R;const{layerDefinition:n,popupInfo:l,featureSet:a}=o,u=n.drawingInfo.renderer,{features:c}=a,p=a.spatialReference??n.spatialReference??n.extent.spatialReference??K,d=u&&$(u),y=B.fromJSON(p),h=c.map((e=>{const s=f.fromJSON(e);null!=s.geometry&&null!=e.geometry&&null==e.geometry.spatialReference&&(s.geometry.spatialReference=y);const i=r(s);return i.symbol??=d?.getSymbol(s)??this._getNetworkSymbol(t),i.popupTemplate??=l&&Q.fromJSON(l),i}));return s&&h.some((e=>!e.symbol))&&s(h),new R(h)}_getNetworkSymbol(e){switch(e){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}async _getServiceDescription(e,t,r){if(null!=this._cachedServiceDescription&&this._cachedServiceDescription.url===e)return this._cachedServiceDescription.serviceDescription;const s=await _e(e,t,r);return this._cachedServiceDescription={serviceDescription:s,url:e},s}_setStopSymbol(e){if(!e||0===e.length)return;if(null==this.defaultSymbols.stops)return;if(e.every((({symbol:e})=>null!=e)))return;const{first:t,last:r,middle:s,unlocated:i,waypoint:o,break:n}=this.defaultSymbols.stops;if(null==this.routeInfo||1===e.length)return void e.forEach(((i,o)=>{switch(o){case 0:i.symbol=t;break;case e.length-1:i.symbol=r;break;default:i.symbol=s}}));const l=e.map((({sequence:e})=>e)).filter((e=>null!=e)),a=Math.min(...l),u=Math.max(...l);for(const l of e)l.sequence!==a?l.sequence!==u?"ok"===l.status||"not-located-on-closest"===l.status?"waypoint"!==l.locationType?"break"!==l.locationType?l.symbol=s:l.symbol=n:l.symbol=o:l.symbol=i:l.symbol=r:l.symbol=t}_toRouteLayerSolution(e){const t=e.routeResults[0].stops?.map((e=>je.fromJSON(e.toJSON())));this._setStopSymbol(t);const r=new Wt(t),s=new zt(e.polygonBarriers?.map((e=>{const t=Be.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.polygonBarriers,t}))),i=new Zt(e.polylineBarriers?.map((e=>{const t=Te.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.polylineBarriers,t}))),o=new qt(e.pointBarriers?.map((e=>{const t=Se.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.pointBarriers,t}))),n=e.routeResults[0].route?.toJSON(),l=Pe.fromJSON(n);l.symbol=this.defaultSymbols.routeInfo;const a=new Jt(e.routeResults[0].directionPoints?.features.map((e=>{const t=be.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.directionPoints,t})));return{directionLines:new _t(e.routeResults[0].directionLines?.features.map((e=>{const t=ge.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.directionLines,t}))),directionPoints:a,pointBarriers:o,polygonBarriers:s,polylineBarriers:i,routeInfo:l,stops:r}}_writeDirectionLines(){return this._writeNetworkFeatures(this.directionLines,this.defaultSymbols.directionLines,"esriGeometryPolyline",ge.fields,ge.popupInfo,"DirectionLines","Direction Lines")}_writeDirectionPoints(){return this._writeNetworkFeatures(this.directionPoints,this.defaultSymbols.directionPoints,"esriGeometryPoint",be.fields,be.popupInfo,"DirectionPoints","Direction Points")}_writeNetworkFeatures(e,t,r,s,i,o,n){if(null==e||!e.length)return null;const l=this.spatialReference.toJSON(),{fullExtent:a,maxScale:u,minScale:c}=this;return{featureSet:{features:e.toArray().map((e=>Et(e))),geometryType:r,spatialReference:l},layerDefinition:{capabilities:"Query,Update,Editing",drawingInfo:{renderer:{type:"simple",symbol:null!=t?t.toJSON():Dt(r)}},extent:a.toJSON(),fields:s,geometryType:r,hasM:!1,hasZ:!1,maxScale:u,minScale:c,name:o,objectIdField:"ObjectID",spatialReference:l,title:n,type:"Feature Layer",typeIdField:""},popupInfo:i}}_writePointBarriers(){return this._writeNetworkFeatures(this.pointBarriers,this.defaultSymbols.pointBarriers,"esriGeometryPoint",Se.fields,Se.popupInfo,"Barriers","Point Barriers")}_writePolygonBarriers(){return this._writeNetworkFeatures(this.polygonBarriers,this.defaultSymbols.polygonBarriers,"esriGeometryPolygon",Be.fields,Be.popupInfo,"PolygonBarriers","Polygon Barriers")}_writePolylineBarriers(){return this._writeNetworkFeatures(this.polylineBarriers,this.defaultSymbols.polylineBarriers,"esriGeometryPolyline",Te.fields,Te.popupInfo,"PolylineBarriers","Line Barriers")}_writeRouteInfo(){return this._writeNetworkFeatures(null!=this.routeInfo?new R([this.routeInfo]):null,this.defaultSymbols.routeInfo,"esriGeometryPolyline",Pe.fields,Pe.popupInfo,"RouteInfo","Route Details")}_writeStops(){const e=this._writeNetworkFeatures(this.stops,null,"esriGeometryPoint",je.fields,je.popupInfo,"Stops","Stops");if(null==e)return null;const{stops:t}=this.defaultSymbols,r=null!=t&&null!=t.first&&t.first.toJSON(),s=null!=t&&null!=t.middle&&t.middle.toJSON(),i=null!=t&&null!=t.last&&t.last.toJSON();return e.layerDefinition.drawingInfo.renderer={type:"uniqueValue",field1:"Sequence",defaultSymbol:s,uniqueValueInfos:[{value:"1",symbol:r,label:"First Stop"},{value:`${this.stops.length}`,symbol:i,label:"Last Stop"}]},e}};e([t({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:null==this.portalItem}}}}}}})],Qt.prototype,"_featureCollection",void 0),e([c(["web-map","portal-item"],"_featureCollection")],Qt.prototype,"writeFeatureCollectionWebmap",null),e([t({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:null!=this.portalItem}}}}}}})],Qt.prototype,"_type",void 0),e([t({nonNullable:!0,type:Le})],Qt.prototype,"defaultSymbols",void 0),e([t({readOnly:!0})],Qt.prototype,"directionLines",void 0),e([u(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],Qt.prototype,"readDirectionLines",null),e([t({readOnly:!0})],Qt.prototype,"directionPoints",void 0),e([u(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],Qt.prototype,"readDirectionPoints",null),e([t({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],Qt.prototype,"featureCollectionType",void 0),e([t({readOnly:!0})],Qt.prototype,"fullExtent",null),e([t({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],Qt.prototype,"legendEnabled",void 0),e([t({type:["show","hide"]})],Qt.prototype,"listMode",void 0),e([t({type:Number,nonNullable:!0,json:{write:!1}})],Qt.prototype,"maxScale",void 0),e([u(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],Qt.prototype,"readMaxScale",null),e([t({type:Number,nonNullable:!0,json:{write:!1}})],Qt.prototype,"minScale",void 0),e([u(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],Qt.prototype,"readMinScale",null),e([t({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],Qt.prototype,"operationalLayerType",void 0),e([t({nonNullable:!0,type:R.ofType(Se)})],Qt.prototype,"pointBarriers",void 0),e([u(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],Qt.prototype,"readPointBarriers",null),e([t({nonNullable:!0,type:R.ofType(Be)})],Qt.prototype,"polygonBarriers",void 0),e([u(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],Qt.prototype,"readPolygonBarriers",null),e([t({nonNullable:!0,type:R.ofType(Te)})],Qt.prototype,"polylineBarriers",void 0),e([u(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],Qt.prototype,"readPolylineBarriers",null),e([t({readOnly:!0})],Qt.prototype,"routeInfo",void 0),e([u(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],Qt.prototype,"readRouteInfo",null),e([t({type:B})],Qt.prototype,"spatialReference",void 0),e([u(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],Qt.prototype,"readSpatialReference",null),e([t({nonNullable:!0,type:R.ofType(je)})],Qt.prototype,"stops",void 0),e([u(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],Qt.prototype,"readStops",null),e([t()],Qt.prototype,"title",null),e([t({readOnly:!0,json:{read:!1}})],Qt.prototype,"type",void 0),e([t()],Qt.prototype,"url",null),Qt=e([s(Vt)],Qt);const Ht=Qt;export default Ht;
//# sourceMappingURL=p-e303c49b.js.map