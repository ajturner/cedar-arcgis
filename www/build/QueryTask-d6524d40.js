import { y as b, b4 as M, ad as m$1, bT as L, b as has, a0 as d, cv as p, cw as K, s as s$1, B as e, E as y, F as a$1 } from './interfaces-f9f0dded.js';
import { o, u } from './infoFor3D-0047d262.js';
import { f } from './normalizeUtils-6257e368.js';
import { n as n$1, s } from './executeForIds-86c46f3a.js';
import { S } from './query-d7e0eb84.js';
import { a } from './executeQueryJSON-a16aae69.js';
import { n } from './executeQueryPBF-24a7740f.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
async function m(m,n,s){const p=f(m);return S(p,b.from(n),{...s}).then((t=>({count:t.data.count,extent:M.fromJSON(t.data.extent)})))}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
let F=class extends m$1{constructor(e){super(e),this.dynamicDataSource=null,this.fieldsIndex=null,this.gdbVersion=null,this.infoFor3D=null,this.pbfSupported=!1,this.queryAttachmentsSupported=!1,this.sourceSpatialReference=null,this.url=null;}get parsedUrl(){return L(this.url)}async execute(e,t){const r=await this.executeJSON(e,t);return this.featureSetFromJSON(e,r,t)}async executeJSON(e,t){const r=this._normalizeQuery(e),o=null!=e.outStatistics?.[0],s=has("featurelayer-pbf-statistics"),i=!o||s;let u;if(this.pbfSupported&&i)try{u=await n(this.url,r,t);}catch(a){if("query:parsing-pbf"!==a.name)throw a;this.pbfSupported=!1;}return this.pbfSupported&&i||(u=await a(this.url,r,t)),this._normalizeFields(u.fields),u}async featureSetFromJSON(e,t,r){if(!this._queryIs3DObjectFormat(e)||null==this.infoFor3D||!t.features)return d.fromJSON(t);const{meshFeatureSetFromJSON:s}=await p(import('./meshFeatureSet-81a88f71.js').then(function (n) { return n.b; }),r);return s(e,this.infoFor3D,t)}executeForCount(e,t){return n$1(this.url,this._normalizeQuery(e),t)}executeForExtent(e,t){return m(this.url,this._normalizeQuery(e),t)}executeForIds(e,t){return s(this.url,this._normalizeQuery(e),t)}async executeRelationshipQuery(e,t){const[{default:r},{executeRelationshipQuery:s}]=await p(Promise.all([import('./interfaces-f9f0dded.js').then(function (n) { return n.kW; }),import('./executeRelationshipQuery-45f49a30.js')]),t);return e=r.from(e),(this.gdbVersion||this.dynamicDataSource)&&((e=e.clone()).gdbVersion=e.gdbVersion||this.gdbVersion,e.dynamicDataSource=e.dynamicDataSource||this.dynamicDataSource),s(this.url,e,t)}async executeRelationshipQueryForCount(e,t){const[{default:r},{executeRelationshipQueryForCount:s}]=await p(Promise.all([import('./interfaces-f9f0dded.js').then(function (n) { return n.kW; }),import('./executeRelationshipQuery-45f49a30.js')]),t);return e=r.from(e),(this.gdbVersion||this.dynamicDataSource)&&((e=e.clone()).gdbVersion=e.gdbVersion||this.gdbVersion,e.dynamicDataSource=e.dynamicDataSource||this.dynamicDataSource),s(this.url,e,t)}async executeAttachmentQuery(e,t){const{executeAttachmentQuery:r,fetchAttachments:s,processAttachmentQueryResult:i}=await p(import('./queryAttachments-2e291a29.js'),t),u=f(this.url);return i(u,await(this.queryAttachmentsSupported?r(u,e,t):s(u,e,t)))}async executeTopFeaturesQuery(e,t){const{executeTopFeaturesQuery:r}=await p(import('./executeTopFeaturesQuery-7bdfb5e1.js'),t);return r(this.parsedUrl,e,this.sourceSpatialReference,t)}async executeForTopIds(e,t){const{executeForTopIds:r}=await p(import('./executeForTopIds-b8b57703.js'),t);return r(this.parsedUrl,e,t)}async executeForTopExtents(e,t){const{executeForTopExtents:r}=await p(import('./executeForTopExtents-9cac9d4e.js'),t);return r(this.parsedUrl,e,t)}async executeForTopCount(e,t){const{executeForTopCount:r}=await p(import('./executeForTopCount-aedaa4e1.js'),t);return r(this.parsedUrl,e,t)}_normalizeQuery(e){let t=b.from(e);t.sourceSpatialReference=t.sourceSpatialReference||this.sourceSpatialReference,(this.gdbVersion||this.dynamicDataSource)&&(t=t===e?t.clone():t,t.gdbVersion=e.gdbVersion||this.gdbVersion,t.dynamicDataSource=e.dynamicDataSource?K.from(e.dynamicDataSource):this.dynamicDataSource);const{infoFor3D:o$1}=this;if(null!=o$1&&this._queryIs3DObjectFormat(e)){t=t===e?t.clone():t,t.formatOf3DObjects=null;const{supportedFormats:s,queryFormats:i}=o$1,u$1=o("model/gltf-binary",s)??u("glb",s),c=o("model/gltf+json",s)??u("gtlf",s);for(const e of i){if(e===u$1){t.formatOf3DObjects=e;break}e!==c||t.formatOf3DObjects||(t.formatOf3DObjects=e);}if(!t.formatOf3DObjects)throw new s$1("query:unsupported-3d-query-formats","Could not find any supported 3D object query format. Only supported formats are 3D_glb and 3D_gltf");if(null==t.outFields||!t.outFields.includes("*")){t=t===e?t.clone():t,null==t.outFields&&(t.outFields=[]);const{originX:r,originY:s,originZ:i,translationX:u,translationY:a,translationZ:n,scaleX:c,scaleY:p,scaleZ:l,rotationX:m,rotationY:y,rotationZ:d,rotationDeg:f}=o$1.transformFieldRoles;t.outFields.push(r,s,i,u,a,n,c,p,l,m,y,d,f);}}return t}_normalizeFields(e){if(null!=this.fieldsIndex&&null!=e)for(const t of e){const e=this.fieldsIndex.get(t.name);e&&Object.assign(t,e.toJSON());}}_queryIs3DObjectFormat(e){return null!=this.infoFor3D&&!0===e.returnGeometry&&"xyFootprint"!==e.multipatchOption&&!e.outStatistics}};e([y({type:K})],F.prototype,"dynamicDataSource",void 0),e([y()],F.prototype,"fieldsIndex",void 0),e([y()],F.prototype,"gdbVersion",void 0),e([y()],F.prototype,"infoFor3D",void 0),e([y({readOnly:!0})],F.prototype,"parsedUrl",null),e([y()],F.prototype,"pbfSupported",void 0),e([y()],F.prototype,"queryAttachmentsSupported",void 0),e([y()],F.prototype,"sourceSpatialReference",void 0),e([y({type:String})],F.prototype,"url",void 0),F=e([a$1("esri.tasks.QueryTask")],F);const x=F;

export { x };

//# sourceMappingURL=QueryTask-d6524d40.js.map