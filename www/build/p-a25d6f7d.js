import{bM as s}from"./p-b54724b6.js";import{e}from"./p-07f12c16.js";import{T as t}from"./p-cc8b27b8.js";import{r}from"./p-b3dc802f.js";import{w as i}from"./p-0fe6a545.js";import{T as o}from"./p-29040467.js";import{i as h}from"./p-58405edc.js";class n extends r{constructor(s,e,r,i,o,h,n=null){super(s,e,r,i,o,h),this.bitmap=new t(n),this.bitmap.coordScale=[o,h],this.bitmap.once("isReady",(()=>this.ready()))}destroy(){super.destroy(),this.bitmap.destroy()}beforeRender(s){super.beforeRender(s),this.bitmap.beforeRender(s)}afterRender(s){super.afterRender(s),this.bitmap.afterRender(s)}set stencilRef(s){this.bitmap.stencilRef=s}get stencilRef(){return this.bitmap.stencilRef}_createTransforms(){return{dvs:e(),tileMat3:e()}}setTransform(s){super.setTransform(s),this.bitmap.transforms.dvs=this.transforms.dvs}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap&&(this.bitmap.stage=null)}}class p extends h{get requiresDedicatedFBO(){return this.children.some((s=>"additive"===s.bitmap.blendFunction))}createTile(e){const t=this._tileInfoView.getTileBounds(s(),e),r=this._tileInfoView.getTileResolution(e.level),[i,o]=this._tileInfoView.tileInfo.size;return new n(e,r,t[0],t[3],i,o)}prepareRenderPasses(s){const e=s.registerRenderPass({name:"bitmap (tile)",brushes:[i.bitmap],target:()=>this.children.map((s=>s.bitmap)),drawPhase:o.MAP});return[...super.prepareRenderPasses(s),e]}doRender(s){this.visible&&s.drawPhase===o.MAP&&super.doRender(s)}}export{p as n};
//# sourceMappingURL=p-a25d6f7d.js.map