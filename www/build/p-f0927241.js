import{l as t,y as e,n as r,o as s,cc as o,d as n,e as i,c as a,s as c,bn as l}from"./p-b54724b6.js";import{o as u,f as m,i as f}from"./p-a5e3ec2a.js";import"./p-80be55a5.js";let h=class extends s{constructor(t){super(t),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const t=this.geometries.map((t=>t.toJSON())),e=this.geometries[0],r={};return r.outSR=this.outSpatialReference.wkid||JSON.stringify(this.outSpatialReference.toJSON()),r.inSR=e.spatialReference.wkid||JSON.stringify(e.spatialReference.toJSON()),r.geometries=JSON.stringify({geometryType:o(e),geometries:t}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),null!=this.transformForward&&(r.transformForward=this.transformForward),r}};t([e()],h.prototype,"geometries",void 0),t([e({json:{read:{source:"outSR"}}})],h.prototype,"outSpatialReference",void 0),t([e()],h.prototype,"transformation",void 0),t([e()],h.prototype,"transformForward",void 0),h=t([r("esri.rest.support.ProjectParameters")],h);const p=h;const g=n(p);async function d(t,e,r){e=g(e);const s=m(t),n={...s.query,f:"json",...e.toJSON()},a=e.outSpatialReference,c=o(e.geometries[0]),l=f(n,r);return i(s.path+"/project",l).then((({data:{geometries:t}})=>u(t,c,a)))}async function w(t=null,e){if(a.geometryServiceUrl)return a.geometryServiceUrl;if(!t)throw new c("internal:geometry-service-url-not-configured");let r;r="portal"in t?t.portal||l.getDefault():t,await r.load({signal:e});const s=r.helperServices?.geometry?.url;if(!s)throw new c("internal:geometry-service-url-not-configured");return s}async function y(t,e,r=null,s){const o=await w(r,s),n=new p;n.geometries=[t],n.outSpatialReference=e;const i=await d(o,n,{signal:s});if(i&&Array.isArray(i)&&1===i.length)return i[0];throw new c("internal:geometry-service-projection-failed")}export{w as getGeometryServiceURL,y as projectGeometry};
//# sourceMappingURL=p-f0927241.js.map