import{aO as s,a3 as e,l as r,y as i,he as t,n as a,gw as l}from"./p-b54724b6.js";import{n}from"./p-6b09cddc.js";import{n as y}from"./p-053dc63d.js";const h={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"};let o=class extends(s(e)){constructor(s){super(s),this.floors=null,this.scale=0}destroy(){this.layer=null}get dynamicLayers(){if(!this.hasDynamicLayers)return null;const s=this.visibleSublayers.map((s=>{const e=n(this.floors,s);return s.toExportImageJSON(e)}));return s.length?JSON.stringify(s):null}get hasDynamicLayers(){return this.layer&&y(this.visibleSublayers,this.layer.serviceSublayers,this.layer.gdbVersion)}set layer(s){this._get("layer")!==s&&(this._set("layer",s),this.handles.remove("layer"),s&&this.handles.add([s.allSublayers.on("change",(()=>this.notifyChange("visibleSublayers"))),s.on("sublayer-update",(s=>this.notifyChange(h[s.propertyName])))],"layer"))}get layers(){const s=this.visibleSublayers;return s?s.length?"show:"+s.map((s=>s.id)).join(","):"show:-1":null}get layerDefs(){const s=!!this.floors?.length,e=this.visibleSublayers.filter((e=>null!=e.definitionExpression||s&&null!=e.floorInfo));return e.length?JSON.stringify(e.reduce(((s,e)=>{const r=n(this.floors,e),i=l(r,e.definitionExpression);return null!=i&&(s[e.id]=i),s}),{})):null}get version(){this.commitProperty("layers"),this.commitProperty("layerDefs"),this.commitProperty("dynamicLayers"),this.commitProperty("timeExtent");const s=this.layer;return s&&(s.commitProperty("dpi"),s.commitProperty("imageFormat"),s.commitProperty("imageTransparency"),s.commitProperty("gdbVersion")),(this._get("version")||0)+1}get visibleSublayers(){const s=[];if(!this.layer)return s;const e=this.layer.sublayers,r=e=>{const i=this.scale,t=0===i,a=0===e.minScale||i<=e.minScale,l=0===e.maxScale||i>=e.maxScale;e.visible&&(t||a&&l)&&(e.sublayers?e.sublayers.forEach(r):s.unshift(e))};e&&e.forEach(r);const i=this._get("visibleSublayers");return!i||i.length!==s.length||i.some(((e,r)=>s[r]!==e))?s:i}toJSON(){const s=this.layer;let e={dpi:s.dpi,format:s.imageFormat,transparent:s.imageTransparency,gdbVersion:s.gdbVersion||null};return this.hasDynamicLayers&&this.dynamicLayers?e.dynamicLayers=this.dynamicLayers:e={...e,layers:this.layers,layerDefs:this.layerDefs},e}};r([i({readOnly:!0})],o.prototype,"dynamicLayers",null),r([i()],o.prototype,"floors",void 0),r([i({readOnly:!0})],o.prototype,"hasDynamicLayers",null),r([i()],o.prototype,"layer",null),r([i({readOnly:!0})],o.prototype,"layers",null),r([i({readOnly:!0})],o.prototype,"layerDefs",null),r([i({type:Number})],o.prototype,"scale",void 0),r([i(t)],o.prototype,"timeExtent",void 0),r([i({readOnly:!0})],o.prototype,"version",null),r([i({readOnly:!0})],o.prototype,"visibleSublayers",null),o=r([a("esri.layers.mixins.ExportImageParameters")],o);export{o as m};
//# sourceMappingURL=p-95a83697.js.map