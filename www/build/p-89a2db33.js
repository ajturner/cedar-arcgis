import{aK as t,a6 as s,e as i,V as e,ad as a,aM as r,af as p,aT as o,aL as h,aU as n,dn as c,cz as m,cB as j,l as f,y as d,n as b}from"./p-b54724b6.js";import{b as l,g as u,d as w}from"./p-d19bdf9e.js";import{f as g}from"./p-a5e3ec2a.js";import{i as x}from"./p-c8e3775b.js";import{w as v,b as y,T as _}from"./p-cc8b27b8.js";import{a as k}from"./p-68411adb.js";import{f as S,d as D}from"./p-5f5f43c2.js";import{i as I}from"./p-add7d66d.js";import{o as L}from"./p-8b9c0412.js";import{C as M,$ as T}from"./p-22a6b5ef.js";import{n as V}from"./p-0fe6a545.js";import{P as z,o as A}from"./p-c09e2cd9.js";import{D as C,G as E,U,X as B}from"./p-13e550f5.js";import{x as P}from"./p-1fd43aa6.js";import{m as q}from"./p-90332a18.js";import{T as R,b as F}from"./p-49f0006c.js";import"./p-80be55a5.js";import"./p-52a9dec5.js";import"./p-07f12c16.js";import"./p-2d1dac84.js";import"./p-843f0c78.js";import"./p-570a8a46.js";import"./p-541ec65c.js";import"./p-29040467.js";import"./p-0e94eaa4.js";import"./p-795f7c81.js";import"./p-6ffbaa7a.js";import"./p-fc9cd10b.js";import"./p-fdc41b20.js";import"./p-ecc7ed03.js";import"./p-05938a61.js";import"./p-8043ab9b.js";import"./p-faf4e331.js";import"./p-74887bd8.js";import"./p-cd4a8b9a.js";import"./p-cae2235f.js";import"./p-9a4094ba.js";import"./p-9f1a0adc.js";import"./p-1184cc61.js";import"./p-98e621d1.js";import"./p-1b31d781.js";import"./p-f7f8e6f9.js";import"./p-a779e49b.js";import"./p-7572c366.js";import"./p-832f907c.js";import"./p-5abe9c67.js";import"./p-0856fe30.js";import"./p-b88ddb1e.js";import"./p-8dc3148c.js";import"./p-ca5fb53c.js";import"./p-e6a64715.js";import"./p-dc29c329.js";import"./p-d7fc78fa.js";import"./p-a3f0a5f3.js";import"./p-581eca80.js";import"./p-2a2efb66.js";import"./p-1701e549.js";import"./p-07a1e707.js";import"./p-8bc47c76.js";import"./p-c19b935f.js";import"./p-e75aa2b5.js";import"./p-f5f26b1f.js";import"./p-783b6965.js";import"./p-a379c2ce.js";import"./p-ae4c1e05.js";import"./p-a3e88624.js";import"./p-b6ec07fb.js";import"./p-b3dc802f.js";import"./p-db174923.js";import"./p-8eafbd05.js";import"./p-5b0b1d68.js";import"./p-399020b7.js";import"./p-50b034e8.js";import"./p-6bb7b693.js";import"./p-de65627f.js";import"./p-791e5c7c.js";import"./p-015ba93b.js";import"./p-58405edc.js";import"./p-b4b7d6a0.js";import"./p-89e4900b.js";import"./p-8eb5caaf.js";import"./p-c6ce33a2.js";import"./p-fb79aaf0.js";import"./p-5977fcaf.js";import"./p-873e8cec.js";import"./p-38e70926.js";import"./p-21ae9bf7.js";import"./p-2a6d626a.js";import"./p-0357efed.js";import"./p-2f568dc7.js";import"./p-623dbe5e.js";import"./p-33c0f331.js";import"./p-4f76b2d1.js";import"./p-42c332a2.js";import"./p-2def8198.js";import"./p-db9ccfea.js";import"./p-71f41146.js";import"./p-8e3fbd83.js";import"./p-25e77904.js";import"./p-760b97ac.js";class G{constructor(t){if(this._ownsRctx=!1,t)this._ownsRctx=!1,this._rctx=t;else{if(G._instance)return G._instanceRefCount++,G._instance;G._instanceRefCount=1,G._instance=this,this._ownsRctx=!0;const t=document.createElement("canvas").getContext("webgl");t.getExtension("OES_texture_float"),this._rctx=new z(t,{})}const s={applyProjection:!0,bilinear:!1,bicubic:!1},i=A("raster/reproject","raster/reproject",new Map([["a_position",0]]),s);this._program=this._rctx.programCache.acquire(i.shaders.vertexShader,i.shaders.fragmentShader,i.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new V(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(i,e,a=!1){const r=t(i.extent,e),p=new s({x:(i.extent.xmax-i.extent.xmin)/i.texture.descriptor.width,y:(i.extent.ymax-i.extent.ymin)/i.texture.descriptor.height,spatialReference:i.extent.spatialReference}),{x:o,y:h}=M(p,e,i.extent);let n=(o+h)/2;const c=Math.round((r.xmax-r.xmin)/n),m=Math.round((r.ymax-r.ymin)/n);n=(r.width/c+r.height/m)/2;const j=new s({x:n,y:n,spatialReference:r.spatialReference}),f=T({projectedExtent:r,srcBufferExtent:i.extent,pixelSize:j,hasWrapAround:!0,spacing:[16,16]}),d=q(this._rctx,f),b=new F(c,m);b.wrapMode=C.CLAMP_TO_EDGE;const l=new P(this._rctx,b);this._rctx.bindFramebuffer(l),this._rctx.setViewport(0,0,c,m),this._rctx.useProgram(this._program),this._rctx.bindTexture(i.texture,0),this._rctx.bindTexture(d,1),this._quad.bind();const{width:u=0,height:w=0}=i.texture.descriptor;if(this._program.setUniform2f("u_srcImageSize",u,w),this._program.setUniform2fv("u_transformSpacing",f.spacing),this._program.setUniform2fv("u_transformGridSize",f.size),this._program.setUniform2f("u_targetImageSize",c,m),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),d.dispose(),a){const{width:t,height:s}=l,i=new ImageData(t??0,s??0);l.readPixels(0,0,t??0,s??0,E.RGBA,U.UNSIGNED_BYTE,i.data);const e=l.detachColorTexture(B.COLOR_ATTACHMENT0);return l.dispose(),{texture:e,extent:r,imageData:i}}const g=l.detachColorTexture(B.COLOR_ATTACHMENT0);return l.dispose(),{texture:g,extent:r}}reprojectBitmapData(t,s){const i=v(t.bitmapData)?y(t.bitmapData):t.bitmapData,e=new F;e.wrapMode=C.CLAMP_TO_EDGE,e.width=t.bitmapData.width,e.height=t.bitmapData.height;const a=new R(this._rctx,e,i),r=this.reprojectTexture({texture:a,extent:t.extent},s,!0);r.texture.dispose();const p=document.createElement("canvas"),o=r.imageData;p.width=o.width,p.height=o.height;return p.getContext("2d").putImageData(o,0,0),{bitmapData:p,extent:r.extent}}async loadAndReprojectBitmapData(t,s,e){const a=(await i(t,{responseType:"image"})).data,r=document.createElement("canvas");r.width=a.width,r.height=a.height;const p=r.getContext("2d");p.drawImage(a,0,0);const o=p.getImageData(0,0,r.width,r.height);if(s.spatialReference.equals(e))return{bitmapData:o,extent:s};const h=this.reprojectBitmapData({bitmapData:o,extent:s},e);return{bitmapData:h.bitmapData,extent:h.extent}}destroy(){this._ownsRctx?(G._instanceRefCount--,0===G._instanceRefCount&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),G._instance=null)):(this._quad.dispose(),this._program.dispose())}}G._instanceRefCount=0;class K{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let N=class extends(S(D)){constructor(){super(...arguments),this._bitmapIndex=new Map,this._mapImageContainer=new k,this._kmlVisualData=new K,this._fetchController=null,this.allVisiblePoints=new x,this.allVisiblePolylines=new x,this.allVisiblePolygons=new x,this.allVisibleMapImages=new e}async hitTest(t,s){const i=this.layer;return[this._pointsView?.hitTest(t),this._polylinesView?.hitTest(t),this._polygonsView?.hitTest(t)].flat().filter(Boolean).map((s=>(s.layer=i,s.sourceLayer=i,{type:"graphic",graphic:s,layer:i,mapPoint:t})))}update(t){this._polygonsView&&this._polygonsView.processUpdate(t),this._polylinesView&&this._polylinesView.processUpdate(t),this._pointsView&&this._pointsView.processUpdate(t)}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new L({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new I(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new L({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new I(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new L({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new I(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.addAttachHandles([this.allVisibleMapImages.on("change",(t=>{t.added.forEach((t=>this._addMapImage(t))),t.removed.forEach((t=>this._removeMapImage(t)))})),a((()=>this.layer.visibleSublayers),(t=>{for(const[t,s]of this._kmlVisualData.allSublayers)s.visibility=0;for(const s of t){const t=this._kmlVisualData.allSublayers.get(s.id);t&&(t.visibility=1)}this._refreshCollections()}))]),this.updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new G}detach(){this._fetchController=r(this._fetchController),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView=p(this._polygonsView),this._polylinesView=p(this._polylinesView),this._pointsView=p(this._pointsView),this._imageReprojector=p(this._imageReprojector)}moveStart(){}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(t){(this.view.spatialReference?.isWGS84||this.view.spatialReference?.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(t.href,o.fromJSON(t.extent),this.view.spatialReference).then((s=>{const i=new _(s.bitmapData);i.x=s.extent.xmin,i.y=s.extent.ymax,i.resolution=s.extent.width/s.bitmapData.width,i.rotation=t.rotation,this._mapImageContainer.addChild(i),this._bitmapIndex.set(t,i)}))}async _getViewDependentUrl(s,i){const{viewFormat:e,viewBoundScale:a,httpQuery:r}=s;if(null!=e){if(null==i)throw new Error("Loading this network link requires a view state.");let p;if(await h(),null!=a&&1!==a){const t=new o(i.extent);t.expand(a),p=t}else p=i.extent;p=t(p,n.WGS84);const f=t(p,n.WebMercator),d=p.xmin,b=p.xmax,l=p.ymin,u=p.ymax,w=i.size[0]*i.pixelRatio,x=i.size[1]*i.pixelRatio,v=Math.max(f.width,f.height),y={"[bboxWest]":d.toString(),"[bboxEast]":b.toString(),"[bboxSouth]":l.toString(),"[bboxNorth]":u.toString(),"[lookatLon]":p.center.x.toString(),"[lookatLat]":p.center.y.toString(),"[lookatRange]":v.toString(),"[lookatTilt]":"0","[lookatHeading]":i.rotation.toString(),"[lookatTerrainLon]":p.center.x.toString(),"[lookatTerrainLat]":p.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":p.center.x.toString(),"[cameraLat]":p.center.y.toString(),"[cameraAlt]":v.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":w.toString(),"[vertPixels]":x.toString(),"[terrainEnabled]":"0","[clientVersion]":c,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},_=t=>{for(const s in t){let i;for(i in y)t[s]=t[s].replace(i,y[i])}},k=m(e);_(k);let S={};null!=r&&(S=m(r),_(S));const D=g(s.href);D.query={...D.query,...k,...S};return`${D.path}?${j(k)}`}return s.href}async _fetchService(t){const s=new K;await this._loadVisualData(this.layer.url,s,t),this._kmlVisualData=s,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter((t=>this._isSublayerVisible(t.sublayerId))).map((({item:t})=>t))),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter((t=>this._isSublayerVisible(t.sublayerId))).map((({item:t})=>t))),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter((t=>this._isSublayerVisible(t.sublayerId))).map((({item:t})=>t))),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter((t=>this._isSublayerVisible(t.sublayerId))).map((({item:t})=>t)))}_isSublayerVisible(t){const s=this._kmlVisualData.allSublayers.get(t);return!!s?.visibility&&(-1===s.parentFolderId||this._isSublayerVisible(s.parentFolderId))}_loadVisualData(t,s,i){return this._fetchParsedKML(t,i).then((async t=>{for(const e of t.sublayers){s.allSublayers.set(e.id,e);const t=e.points?await l(e.points):[],a=e.polylines?await l(e.polylines):[],r=e.polygons?await l(e.polygons):[],p=e.mapImages||[];if(s.allPoints.push(...t.map((t=>({item:t,sublayerId:e.id})))),s.allPolylines.push(...a.map((t=>({item:t,sublayerId:e.id})))),s.allPolygons.push(...r.map((t=>({item:t,sublayerId:e.id})))),s.allMapImages.push(...p.map((t=>({item:t,sublayerId:e.id})))),e.networkLink){const t=await this._getViewDependentUrl(e.networkLink,this.view.state);await this._loadVisualData(t,s,i)}}}))}_fetchParsedKML(t,s){return u(t,this.layer.spatialReference,this.layer.refreshInterval,s).then((t=>w(t.data)))}_removeMapImage(t){const s=this._bitmapIndex.get(t);s&&(this._mapImageContainer.removeChild(s),this._bitmapIndex.delete(t))}};f([d()],N.prototype,"_pointsView",void 0),f([d()],N.prototype,"_polylinesView",void 0),f([d()],N.prototype,"_polygonsView",void 0),f([d()],N.prototype,"updating",void 0),N=f([b("esri.views.2d.layers.KMLLayerView2D")],N);const W=N;export default W;
//# sourceMappingURL=p-89a2db33.js.map