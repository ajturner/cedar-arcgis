import{L as t,x as n,f2 as e,f3 as i,f4 as r,a_ as s}from"./p-b54724b6.js";class o{constructor(){this.code=null,this.description=null}}class l{constructor(t){this.error=new o,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=t}}function u(t){return new l(t)}class a{constructor(t){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=t}}function c(t){return new a(t)}const f=new Set;function h(t,n,e,s=!1,o){f.clear();for(const l in e){const a=t.get(l);if(!a)continue;const c=e[l],h=p(a,c);if(h!==c&&o&&o.push({name:"invalid-value-type",message:"attribute value was converted to match the field type",details:{field:a,originalValue:c,sanitizedValue:h}}),f.add(a.name),a&&(s||a.editable)){const t=i(a,h);if(t)return u(r(t,a,h));n[a.name]=h}}for(const n of t?.requiredFields??[])if(!f.has(n.name))return u(`missing required field "${n.name}"`);return null}function p(i,r){let s=r;return"string"==typeof r&&t(i)?s=parseFloat(r):null!=r&&n(i)&&"string"!=typeof r&&(s=String(r)),e(s)}let y;function d(t,n){if(!t||!s(n))return t;if("rings"in t||"paths"in t){if(null==y)throw new TypeError("geometry engine not loaded");return y.simplify(n,t)}return t}async function g(){return null==y&&(y=await import("./p-6055feb8.js")),y}async function m(t,n){!s(t)||"esriGeometryPolygon"!==n&&"esriGeometryPolyline"!==n||await g()}export{c,h as d,d as h,u,m as y};
//# sourceMappingURL=p-053e4f44.js.map