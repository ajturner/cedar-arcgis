import{a2 as t,dK as s,b as e,s as i,bM as r,dL as h}from"./p-b54724b6.js";import{y as n}from"./p-a3f0a5f3.js";import{o}from"./p-48f43d72.js";import{t as a}from"./p-8eb5caaf.js";import{a as u,t as l}from"./p-e6a64715.js";import{Z as f}from"./p-d8b2b368.js";const c={getObjectId:t=>t.objectId,getAttributes:t=>t.attributes,getAttribute:(t,s)=>t.attributes[s],cloneWithGeometry:(t,s)=>new u(s,t.attributes,null,t.objectId),getGeometry:t=>t.geometry,getCentroid:(t,s)=>(null==t.centroid&&(t.centroid=a(new l,t.geometry,s.hasZ,s.hasM)),t.centroid)};const d=h();class m{constructor(s){this.geometryInfo=s,this._boundsStore=new o,this._featuresById=new Map,this._markedIds=new Set,this.events=new t,this.featureAdapter=c}get geometryType(){return this.geometryInfo.geometryType}get hasM(){return this.geometryInfo.hasM}get hasZ(){return this.geometryInfo.hasZ}get numFeatures(){return this._featuresById.size}get fullBounds(){return this._boundsStore.fullBounds}get storeStatistics(){let t=0;return this._featuresById.forEach((s=>{null!=s.geometry&&s.geometry.coords&&(t+=s.geometry.coords.length)})),{featureCount:this._featuresById.size,vertexCount:t/(this.hasZ?this.hasM?4:3:this.hasM?3:2)}}getFullExtent(t){if(null==this.fullBounds)return null;const[s,e,i,r]=this.fullBounds;return{xmin:s,ymin:e,xmax:i,ymax:r,spatialReference:f(t)}}add(t){this._add(t),this._emitChanged()}addMany(t){for(const s of t)this._add(s);this._emitChanged()}clear(){this._featuresById.clear(),this._boundsStore.clear(),this._emitChanged()}removeById(t){const s=this._featuresById.get(t);return s?(this._remove(s),this._emitChanged(),s):null}removeManyById(t){this._boundsStore.invalidateIndex();for(const s of t){const t=this._featuresById.get(s);t&&this._remove(t)}this._emitChanged()}forEachBounds(t,e){for(const i of t){const t=this._boundsStore.get(i.objectId);t&&e(s(d,t))}}getFeature(t){return this._featuresById.get(t)}has(t){return this._featuresById.has(t)}forEach(t){this._featuresById.forEach((s=>t(s)))}forEachInBounds(t,s){this._boundsStore.forEachInBounds(t,(t=>{s(this._featuresById.get(t))}))}startMarkingUsedFeatures(){this._boundsStore.invalidateIndex(),this._markedIds.clear()}sweep(){let t=!1;this._featuresById.forEach(((s,e)=>{this._markedIds.has(e)||(t=!0,this._remove(s))})),this._markedIds.clear(),t&&this._emitChanged()}_emitChanged(){this.events.emit("changed",void 0)}_add(t){if(!t)return;const s=t.objectId;if(null==s)return void e.getLogger("esri.layers.graphics.data.FeatureStore").error(new i("featurestore:invalid-feature","feature id is missing",{feature:t}));const h=this._featuresById.get(s);let o;if(this._markedIds.add(s),h?(t.displayId=h.displayId,o=this._boundsStore.get(s),this._boundsStore.delete(s)):null!=this.onFeatureAdd&&this.onFeatureAdd(t),null==t.geometry||!t.geometry.coords||!t.geometry.coords.length)return this._boundsStore.set(s,null),void this._featuresById.set(s,t);o=n(null!=o?o:r(),t.geometry,this.geometryInfo.hasZ,this.geometryInfo.hasM),null!=o&&this._boundsStore.set(s,o),this._featuresById.set(s,t)}_remove(t){null!=this.onFeatureRemove&&this.onFeatureRemove(t);const s=t.objectId;return this._markedIds.delete(s),this._boundsStore.delete(s),this._featuresById.delete(s),t}}export{m};
//# sourceMappingURL=p-ed4e008d.js.map