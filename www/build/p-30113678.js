import{s as e,E as t,dF as i,dr as s,cc as r,c2 as n,dJ as a}from"./p-b54724b6.js";import{e as o,n as l,t as p}from"./p-a3f0a5f3.js";import{t as d,n as u}from"./p-05ec1917.js";import{m as f}from"./p-ed4e008d.js";import{f as c,g as m}from"./p-8eb5caaf.js";import{e as y}from"./p-66b640a7.js";import{i as h,o as j,a as b}from"./p-5525ea5e.js";import{y as g,u as I,d as F,c as T,h as R}from"./p-053e4f44.js";import"./p-e6a64715.js";import"./p-dc29c329.js";import"./p-48f43d72.js";import"./p-fd8dc94a.js";import"./p-9a4094ba.js";import"./p-9f1a0adc.js";import"./p-d8b2b368.js";import"./p-a5e3ec2a.js";import"./p-80be55a5.js";import"./p-c6ce33a2.js";import"./p-b8ded059.js";import"./p-623dbe5e.js";import"./p-1b4a7439.js";import"./p-98e621d1.js";import"./p-1b31d781.js";import"./p-c19b935f.js";const w=a,x={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:a},E={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};function v(e){return n(e)?null!=e.z:!!e.hasZ}function D(e){return n(e)?null!=e.m:!!e.hasM}class S{constructor(){this._queryEngine=null,this._nextObjectId=null}destroy(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=this._fieldsIndex=this._createDefaultAttributes=null}async load(r){const n=[],{features:a}=r,o=this._inferLayerProperties(a,r.fields),l=r.fields||[],p=null!=r.hasM?r.hasM:!!o.hasM,m=null!=r.hasZ?r.hasZ:!!o.hasZ,g=!r.spatialReference&&!o.spatialReference,I=g?w:r.spatialReference||o.spatialReference,F=g?x:null,T=r.geometryType||o.geometryType,R=!T;let v=r.objectIdField||o.objectIdField,D=r.timeInfo;if(!R&&(g&&n.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!T))throw new e("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!v)throw new e("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(o.objectIdField&&v!==o.objectIdField&&(n.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${v}" doesn't match the field name "${o.objectIdField}", found in the provided fields`}),v=o.objectIdField),v&&!o.objectIdField){let e=null;l.some((t=>t.name===v&&(e=t,!0)))?(e.type="esriFieldTypeOID",e.editable=!1,e.nullable=!1):l.unshift({alias:v,name:v,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const i of l){if(null==i.name&&(i.name=i.alias),null==i.alias&&(i.alias=i.name),!i.name)throw new e("feature-layer:invalid-field-name","field name is missing",{field:i});if(i.name===v&&(i.type="esriFieldTypeOID"),!t.jsonValues.includes(i.type))throw new e("feature-layer:invalid-field-type",`invalid type for field "${i.name}"`,{field:i})}const S={};for(const e of l)if("esriFieldTypeOID"!==e.type&&"esriFieldTypeGlobalID"!==e.type){const t=i(e);void 0!==t&&(S[e.name]=t)}if(this._fieldsIndex=new s(l),this._createDefaultAttributes=h(S,v),D){if(D.startTimeField){const e=this._fieldsIndex.get(D.startTimeField);e?(D.startTimeField=e.name,e.type="esriFieldTypeDate"):D.startTimeField=null}if(D.endTimeField){const e=this._fieldsIndex.get(D.endTimeField);e?(D.endTimeField=e.name,e.type="esriFieldTypeDate"):D.endTimeField=null}if(D.trackIdField){const e=this._fieldsIndex.get(D.trackIdField);e?D.trackIdField=e.name:(D.trackIdField=null,n.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:D}}))}D.startTimeField||D.endTimeField||(n.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:D}}),D=null)}const O={warnings:n,featureErrors:[],layerDefinition:{...E,drawingInfo:j(T),templates:b(S),extent:F,geometryType:T,objectIdField:v,fields:l,hasZ:m,hasM:p,timeInfo:D},assignedObjectIds:{}};if(this._queryEngine=new y({fields:l,geometryType:T,hasM:p,hasZ:m,objectIdField:v,spatialReference:I,featureStore:new f({geometryType:T,hasM:p,hasZ:m}),timeInfo:D,cacheSpatialQueries:!0}),!a||!a.length)return this._nextObjectId=d,O;const Q=u(v,a);return this._nextObjectId=Q+1,await c(a,I),this._loadInitialFeatures(O,a)}async applyEdits(e){const{spatialReference:t,geometryType:i}=this._queryEngine;return await Promise.all([g(t,i),c(e.adds,t),c(e.updates,t)]),this._applyEdits(e)}queryFeatures(e,t={}){return this._queryEngine.executeQuery(e,t.signal)}queryFeatureCount(e,t={}){return this._queryEngine.executeQueryForCount(e,t.signal)}queryObjectIds(e,t={}){return this._queryEngine.executeQueryForIds(e,t.signal)}queryExtent(e,t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)}querySnapping(e,t={}){return this._queryEngine.executeQueryForSnapping(e,t.signal)}_inferLayerProperties(e,t){let i,s,n=null,a=null,o=null;for(const t of e){const e=t.geometry;if(null!=e&&(n||(n=r(e)),a||(a=e.spatialReference),null==i&&(i=v(e)),null==s&&(s=D(e)),n&&a&&null!=i&&null!=s))break}if(t&&t.length){let e=null;t.some((t=>{const i="esriFieldTypeOID"===t.type,s=!t.type&&t.name&&"objectid"===t.name.toLowerCase();return e=t,i||s}))&&(o=e.name)}return{geometryType:n,spatialReference:a,objectIdField:o,hasM:s,hasZ:i}}async _loadInitialFeatures(e,t){const{geometryType:i,hasM:s,hasZ:n,objectIdField:a,spatialReference:l,featureStore:p}=this._queryEngine,d=[];for(const s of t){if(null!=s.uid&&(e.assignedObjectIds[s.uid]=-1),s.geometry&&i!==r(s.geometry)){e.featureErrors.push(I("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),n=F(this._fieldsIndex,t,s.attributes,!0,e.warnings);n?e.featureErrors.push(n):(this._assignObjectId(t,s.attributes,!0),s.attributes=t,null!=s.uid&&(e.assignedObjectIds[s.uid]=s.attributes[a]),null!=s.geometry&&(s.geometry=m(s.geometry,s.geometry.spatialReference,l)),d.push(s))}p.addMany(o([],d,i,n,s,a));const{fullExtent:u,timeExtent:f}=await this._queryEngine.fetchRecomputedExtents();if(e.layerDefinition.extent=u,f){const{start:t,end:i}=f;e.layerDefinition.timeInfo.timeExtent=[t,i]}return e}async _applyEdits(e){const{adds:t,updates:i,deletes:s}=e,r={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(r,t),i&&i.length&&this._applyUpdateEdits(r,i),s&&s.length){for(const e of s)r.deleteResults.push(T(e));this._queryEngine.featureStore.removeManyById(s)}const{fullExtent:n,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();return{extent:n,timeExtent:a,featureEditResults:r}}_applyAddEdits(e,t){const{addResults:i}=e,{geometryType:s,hasM:n,hasZ:a,objectIdField:l,spatialReference:p,featureStore:d}=this._queryEngine,u=[];for(const n of t){if(n.geometry&&s!==r(n.geometry)){i.push(I("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),a=F(this._fieldsIndex,t,n.attributes);if(a)i.push(a);else{if(this._assignObjectId(t,n.attributes),n.attributes=t,null!=n.uid){const t=n.attributes[l];e.uidToObjectId[n.uid]=t}if(null!=n.geometry){const e=n.geometry.spatialReference??p;n.geometry=m(R(n.geometry,e),e,p)}u.push(n),i.push(T(n.attributes[l]))}}d.addMany(o([],u,s,a,n,l))}_applyUpdateEdits({updateResults:e},t){const{geometryType:i,hasM:s,hasZ:n,objectIdField:a,spatialReference:o,featureStore:d}=this._queryEngine;for(const u of t){const{attributes:t,geometry:f}=u,c=t&&t[a];if(null==c){e.push(I(`Identifier field ${a} missing`));continue}if(!d.has(c)){e.push(I(`Feature with object id ${c} missing`));continue}const y=l(d.getFeature(c),i,n,s);if(null!=f){if(i!==r(f)){e.push(I("Incorrect geometry type."));continue}const t=f.spatialReference??o;y.geometry=m(R(f,t),t,o)}if(t){const i=F(this._fieldsIndex,y.attributes,t);if(i){e.push(i);continue}}d.add(p(y,i,n,s,a)),e.push(T(c))}}_assignObjectId(e,t,i=!1){const s=this._queryEngine.objectIdField;i&&t&&isFinite(t[s])?e[s]=t[s]:e[s]=this._nextObjectId++}}export default S;
//# sourceMappingURL=p-30113678.js.map