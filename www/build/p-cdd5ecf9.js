import{w as t,bb as e,fW as s,e as n,Q as a,s as r,fS as l,as as h,bU as c,cV as u,e6 as d,b1 as p,h as m,fO as _,bX as v,fR as g,ai as w,bI as b,aj as x,ac as M,af as T,aM as j,ad as P,ae as D,ar as R,fX as C,a9 as z}from"./p-b54724b6.js";import{e as F}from"./p-07f12c16.js";import{c as S}from"./p-399020b7.js";import{s as k,C as I,b as O,e as A,r as E,t as B,a as L,m as W,Y as N,n as q,c as U,d as H}from"./p-c3aa4fdf.js";export{f as LabelManager,y as MapViewNavigation}from"./p-c3aa4fdf.js";import{o as V}from"./p-265ce3d1.js";import{t as X,i as $,o as G,h as Y,a as J}from"./p-843f0c78.js";import{i as Q}from"./p-505c1a4d.js";import{T as K,E as Z,S as tt}from"./p-29040467.js";import{t as it,n as et,a as st,w as nt,b as ot,m as at}from"./p-0fe6a545.js";import{L as rt}from"./p-8a4ae095.js";import{e as lt,a as ht}from"./p-33c0f331.js";import{n as ct}from"./p-2def8198.js";import{u as ut,c as dt,x as pt,i as ft,n as mt}from"./p-1fd43aa6.js";import{R as _t,E as vt,F as gt,O as wt,I as yt,L as bt,C as xt,D as Mt,B as Tt,G as jt,U as Pt,P as Dt}from"./p-13e550f5.js";import{o as Rt,P as Ct}from"./p-c09e2cd9.js";import{z as zt,q as Ft,Q as St,E as kt,F as It,L as Ot,M as At,_ as Et,R as Bt}from"./p-570a8a46.js";import{n as Lt,o as Wt}from"./p-541ec65c.js";import{l as Nt,f as qt,h as Ut,M as Ht}from"./p-52a9dec5.js";import{r as Vt}from"./p-783b6965.js";import{t as Xt}from"./p-795f7c81.js";import{b as $t,T as Gt}from"./p-49f0006c.js";import{n as Yt,w as Jt}from"./p-6ffbaa7a.js";import{e as Qt}from"./p-2b55d8a8.js";export{o as GraphicsView2D}from"./p-8b9c0412.js";export{i as GraphicContainer}from"./p-add7d66d.js";import{t as Kt}from"./p-ca78c285.js";import"./p-50b034e8.js";import"./p-e6a64715.js";import"./p-6bb7b693.js";import"./p-0e94eaa4.js";import"./p-ecc7ed03.js";import"./p-5b0b1d68.js";import"./p-faf4e331.js";import"./p-74887bd8.js";import"./p-cd4a8b9a.js";import"./p-cae2235f.js";import"./p-9a4094ba.js";import"./p-9f1a0adc.js";import"./p-2d1dac84.js";import"./p-de65627f.js";import"./p-98e621d1.js";import"./p-1b31d781.js";import"./p-791e5c7c.js";import"./p-8fce63b9.js";import"./p-ca5fb53c.js";import"./p-fb79aaf0.js";import"./p-db174923.js";import"./p-5977fcaf.js";import"./p-873e8cec.js";import"./p-38e70926.js";import"./p-21ae9bf7.js";import"./p-2a6d626a.js";import"./p-30bab7e4.js";import"./p-760b97ac.js";import"./p-73062657.js";import"./p-0357efed.js";import"./p-a3f0a5f3.js";import"./p-dc29c329.js";import"./p-2f568dc7.js";import"./p-623dbe5e.js";import"./p-8eb5caaf.js";import"./p-c6ce33a2.js";import"./p-b6ec07fb.js";import"./p-b3dc802f.js";import"./p-8eafbd05.js";import"./p-a379c2ce.js";import"./p-015ba93b.js";import"./p-4f76b2d1.js";import"./p-42c332a2.js";import"./p-db9ccfea.js";import"./p-71f41146.js";import"./p-8e3fbd83.js";import"./p-25e77904.js";import"./p-fc9cd10b.js";import"./p-fdc41b20.js";import"./p-05938a61.js";import"./p-8043ab9b.js";import"./p-1184cc61.js";import"./p-f7f8e6f9.js";import"./p-a779e49b.js";import"./p-7572c366.js";import"./p-832f907c.js";import"./p-5abe9c67.js";import"./p-0856fe30.js";import"./p-a5e3ec2a.js";import"./p-80be55a5.js";import"./p-b88ddb1e.js";import"./p-8dc3148c.js";import"./p-d7fc78fa.js";import"./p-581eca80.js";import"./p-2a2efb66.js";import"./p-1701e549.js";import"./p-07a1e707.js";import"./p-8bc47c76.js";import"./p-c19b935f.js";import"./p-c8e3775b.js";import"./p-e75aa2b5.js";import"./p-f5f26b1f.js";import"./p-89e4900b.js";import"./p-ae4c1e05.js";import"./p-a3e88624.js";import"./p-58405edc.js";import"./p-b4b7d6a0.js";async function Zt(i,s){const n=k(i);if(n instanceof Error)throw n;await n.createImages(),t(s);const{frames:o,width:a,height:r}=n,l=document.createElement("canvas");l.width=a,l.height=r;const h=l.getContext("2d",{willReadFrequently:!0}),c=[],u=[];for(const t of o){u.push(e(t.delay||100));const i=t.imageElement;0===t.blendOp?h.globalCompositeOperation="copy":h.globalCompositeOperation="source-over";const s=2===t.disposeOp?h.getImageData(t.left,t.top,t.width,t.height):void 0;h.drawImage(i,t.left,t.top);const n=h.getImageData(0,0,a,r);c.push(n),0===t.disposeOp||(1===t.disposeOp?h.clearRect(t.left,t.top,t.width,t.height):2===t.disposeOp&&h.putImageData(s,t.left,t.top))}return{frameDurations:u,getFrame:t=>c[t],width:a,height:r}}const ti=[137,80,78,71,13,10,26,10];function ii(t){const i=new Uint8Array(t);return!ti.some(((t,e)=>t!==i[e]))}function ei(t){if(!ii(t))return!1;const i=new DataView(t),e=new Uint8Array(t);let s,n=8;do{const t=i.getUint32(n);if(s=String.fromCharCode.apply(String,Array.prototype.slice.call(e.subarray(n+4,n+8))),"acTL"===s)return!0;n+=12+t}while("IEND"!==s&&n<e.length);return!1}async function si(t,i){const s=I(t),n=O(s,!0),{width:o,height:a}=s.lsd,r=document.createElement("canvas");r.width=o,r.height=a;const l=r.getContext("2d",{willReadFrequently:!0}),h=[],c=[];for(const t of n){c.push(e(t.delay||100));const i=new ImageData(t.patch,t.dims.width,t.dims.height),s=V(i),n=3===t.disposalType?l.getImageData(t.dims.left,t.dims.top,t.dims.width,t.dims.height):void 0;l.drawImage(s,t.dims.left,t.dims.top);const r=l.getImageData(0,0,o,a);h.push(r),1===t.disposalType||(2===t.disposalType?l.clearRect(t.dims.left,t.dims.top,t.dims.width,t.dims.height):3===t.disposalType&&l.putImageData(n,t.dims.left,t.dims.top))}return{frameDurations:c,getFrame:t=>h[t],width:o,height:a}}const ni=[71,73,70];function oi(t){const i=new Uint8Array(t);return!ni.some(((t,e)=>t!==i[e]))}function ai(t){if(!oi(t))return!1;const i=new DataView(t),e=i.getUint8(10);let s=13+(128&e?3*2**(1+(7&e)):0),n=0,o=!1;for(;!o;){switch(i.getUint8(s++)){case 33:if(!a())return!1;break;case 44:r();break;case 59:o=!0;break;default:return!1}if(n>1)return!0}function a(){switch(i.getUint8(s++)){case 249:l();break;case 1:h();break;case 254:c();break;case 255:u();break;default:return!1}return!0}function r(){n++,s+=8;const t=i.getUint8(s++);s+=128&t?3*2**(1+(7&t)):0,s++,d()}function l(){s++,s+=4,d()}function h(){n++,s++,s+=12,d()}function c(){d()}function u(){s++,s+=8,s+=3,d()}function d(){let t;for(;t=i.getUint8(s++);)s+=t}return!1}class ri{constructor(){this._resourceMap=new Map,this._inFlightResourceMap=new Map,this.geometryEngine=null,this.geometryEnginePromise=null}destroy(){this._inFlightResourceMap.clear(),this._resourceMap.clear()}getResource(t){return this._resourceMap.get(t)??null}async fetchResource(t,i){const e=this._resourceMap.get(t);if(e)return{width:e.width,height:e.height};let s=this._inFlightResourceMap.get(t);return s?s.then((t=>({width:t.width,height:t.height}))):(s=hi(t,i),this._inFlightResourceMap.set(t,s),s.then((i=>(this._inFlightResourceMap.delete(t),this._resourceMap.set(t,i),{width:i.width,height:i.height})),(()=>({width:0,height:0}))))}deleteResource(t){this._inFlightResourceMap.delete(t),this._resourceMap.delete(t)}loadFont(t){return S(t)}}async function li(t,i){const e=window.URL.createObjectURL(t);try{const{data:t}=await n(e,{...i,responseType:"image"});return t}catch(t){if(!a(t))throw new r("mapview-invalid-resource",`Could not fetch requested resource at ${e}`);throw t}finally{window.URL.revokeObjectURL(e)}}async function hi(t,i){const{arrayBuffer:e,mediaType:s}=await ci(t,i),n="image/png"===s;if("image/gif"===s&&ai(e))return si(e);if(n&&ei(e))return Zt(e,i);return li(new Blob([e],{type:s}),i)}async function ci(t,i){let e;const o=";base64,";if(t.includes(o)){const i=t.indexOf(o),n=t.indexOf(o)+o.length,a=t.substring(n);e={arrayBuffer:s(a),mediaType:t.substring(0,i).replace("data:","")}}else try{const s=await n(t,{responseType:"array-buffer",...i}),o=s.data;e={arrayBuffer:o,mediaType:s.getHeader("Content-Type")}}catch(i){if(!a(i))throw new r("mapview-invalid-resource",`Could not fetch requested resource at ${t}`)}return e}const ui={background:{"background.frag":"#ifdef PATTERN\nuniform lowp float u_opacity;\nuniform lowp sampler2D u_texture;\nvarying mediump vec4 v_tlbr;\nvarying mediump vec2 v_tileTextureCoord;\n#else\nuniform lowp vec4 u_color;\n#endif\n#ifdef ID\nvarying mediump vec4 v_id;\n#endif\nvoid main() {\n#ifdef PATTERN\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\nlowp vec4 color = texture2D(u_texture, samplePos);\ngl_FragColor = u_opacity * color;\n#else\ngl_FragColor = u_color;\n#endif\n#ifdef ID\nif (gl_FragColor.a < 1.0 / 255.0) {\ndiscard;\n}\ngl_FragColor = v_id;\n#endif\n}","background.vert":"precision mediump float;\nattribute vec2 a_pos;\n#ifdef ID\nuniform mediump vec4 u_id;\nvarying mediump vec4 v_id;\n#endif\nuniform highp mat3 u_dvsMat3;\nuniform mediump float u_coord_range;\nuniform mediump float u_depth;\n#ifdef PATTERN\nuniform mediump mat3 u_pattern_matrix;\nvarying mediump vec2 v_tileTextureCoord;\nuniform mediump vec4 u_tlbr;\nuniform mediump vec2 u_mosaicSize;\nvarying mediump vec4 v_tlbr;\n#endif\nvoid main() {\ngl_Position = vec4((u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0)).xy, u_depth, 1.0);\n#ifdef PATTERN\nv_tileTextureCoord = (u_pattern_matrix * vec3(a_pos, 1.0)).xy;\nv_tlbr             = u_tlbr / u_mosaicSize.xyxy;\n#endif\n#ifdef ID\nv_id = u_id / 255.0;\n#endif\n}"},circle:{"circle.frag":"precision lowp float;\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_stroke_color;\nvarying mediump float v_blur;\nvarying mediump float v_stroke_width;\nvarying mediump float v_radius;\nvarying mediump vec2 v_offset;\n#ifdef ID\nvarying mediump vec4 v_id;\n#endif\nvoid main()\n{\nmediump float dist = length(v_offset);\nmediump float alpha = smoothstep(0.0, -v_blur, dist - 1.0);\nlowp float color_mix_ratio = v_stroke_width < 0.01 ? 0.0 : smoothstep(-v_blur, 0.0, dist - v_radius / (v_radius + v_stroke_width));\ngl_FragColor = alpha * mix(v_color, v_stroke_color, color_mix_ratio);\n#ifdef ID\nif (gl_FragColor.a < 1.0 / 255.0) {\ndiscard;\n}\ngl_FragColor = v_id;\n#endif\n}","circle.vert":"precision mediump float;\nattribute vec2 a_pos;\n#pragma header\nvarying lowp vec4 v_color;\nvarying lowp vec4 v_stroke_color;\nvarying mediump float v_blur;\nvarying mediump float v_stroke_width;\nvarying mediump float v_radius;\nvarying mediump vec2 v_offset;\n#ifdef ID\nuniform mediump vec4 u_id;\nvarying mediump vec4 v_id;\n#endif\nuniform highp mat3 u_dvsMat3;\nuniform highp mat3 u_displayMat3;\nuniform mediump vec2 u_circleTranslation;\nuniform mediump float u_depth;\nuniform mediump float u_antialiasingWidth;\nvoid main()\n{\n#pragma main\nv_color = color * opacity;\nv_stroke_color = stroke_color * stroke_opacity;\nv_stroke_width = stroke_width;\nv_radius = radius;\nv_blur = max(blur, u_antialiasingWidth / (radius + stroke_width));\nmediump vec2 offset = vec2(mod(a_pos, 2.0) * 2.0 - 1.0);\nv_offset = offset;\n#ifdef ID\nv_id = u_id / 255.0;\n#endif\nmediump vec3 pos = u_dvsMat3 * vec3(a_pos * 0.5, 1.0) + u_displayMat3 * vec3((v_radius + v_stroke_width) * offset + u_circleTranslation, 0.0);\ngl_Position = vec4(pos.xy, u_depth, 1.0);\n}"},fill:{"fill.frag":"precision lowp float;\n#ifdef PATTERN\nuniform lowp sampler2D u_texture;\nvarying mediump vec2 v_tileTextureCoord;\nvarying mediump vec4 v_tlbr;\n#endif\n#ifdef ID\nvarying mediump vec4 v_id;\n#endif\nvarying lowp vec4 v_color;\nvec4 mixColors(vec4 color1, vec4 color2) {\nfloat compositeAlpha = color2.a + color1.a * (1.0 - color2.a);\nvec3 compositeColor = color2.rgb + color1.rgb * (1.0 - color2.a);\nreturn vec4(compositeColor, compositeAlpha);\n}\nvoid main()\n{\n#ifdef PATTERN\nmediump vec2 normalizedTextureCoord = fract(v_tileTextureCoord);\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\nlowp vec4 color = texture2D(u_texture, samplePos);\ngl_FragColor = v_color[3] * color;\n#else\ngl_FragColor = v_color;\n#endif\n#ifdef ID\nif (gl_FragColor.a < 1.0 / 255.0) {\ndiscard;\n}\ngl_FragColor = v_id;\n#endif\n}","fill.vert":"precision mediump float;\nattribute vec2 a_pos;\n#pragma header\nuniform highp mat3 u_dvsMat3;\nuniform highp mat3 u_displayMat3;\nuniform mediump float u_depth;\nuniform mediump vec2 u_fillTranslation;\n#ifdef PATTERN\n#include <util/util.glsl>\nuniform mediump vec2 u_mosaicSize;\nuniform mediump float u_patternFactor;\nvarying mediump vec2 v_tileTextureCoord;\nvarying mediump vec4 v_tlbr;\n#endif\n#ifdef ID\nuniform mediump vec4 u_id;\nvarying mediump vec4 v_id;\n#endif\nvarying lowp vec4 v_color;\nvoid main()\n{\n#pragma main\nv_color = color * opacity;\n#ifdef ID\nv_id = u_id / 255.0;\n#endif\n#ifdef PATTERN\nfloat patternWidth = nextPOT(tlbr.z - tlbr.x);\nfloat patternHeight = nextPOT(tlbr.w - tlbr.y);\nfloat scaleX = 1.0 / (patternWidth * u_patternFactor);\nfloat scaleY = 1.0 / (patternHeight * u_patternFactor);\nmat3 patterMat = mat3(scaleX, 0.0,    0.0,\n0.0,    -scaleY, 0.0,\n0.0,    0.0,    1.0);\nv_tileTextureCoord = (patterMat * vec3(a_pos, 1.0)).xy;\nv_tlbr             = tlbr / u_mosaicSize.xyxy;\n#endif\nvec3 pos = u_dvsMat3 * vec3(a_pos, 1.0) + u_displayMat3 * vec3(u_fillTranslation, 0.0);\ngl_Position = vec4(pos.xy, u_depth, 1.0);\n}"},icon:{"icon.frag":"precision mediump float;\nuniform lowp sampler2D u_texture;\n#ifdef SDF\nuniform lowp vec4 u_color;\nuniform lowp vec4 u_outlineColor;\n#endif\nvarying mediump vec2 v_tex;\nvarying lowp float v_opacity;\nvarying mediump vec2 v_size;\nvarying lowp vec4 v_color;\n#ifdef SDF\nvarying mediump flaot v_halo_width;\n#endif\n#ifdef ID\nvarying mediump vec4 v_id;\n#endif\n#include <util/encoding.glsl>\nvec4 mixColors(vec4 color1, vec4 color2) {\nfloat compositeAlpha = color2.a + color1.a * (1.0 - color2.a);\nvec3 compositeColor = color2.rgb + color1.rgb * (1.0 - color2.a);\nreturn vec4(compositeColor, compositeAlpha);\n}\nvoid main()\n{\n#ifdef SDF\nlowp vec4 fillPixelColor = v_color;\nfloat d = rgba2float(texture2D(u_texture, v_tex)) - 0.5;\nconst float softEdgeRatio = 0.248062016;\nfloat size = max(v_size.x, v_size.y);\nfloat dist = d * softEdgeRatio * size;\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\nif (v_halo_width > 0.25) {\nlowp vec4 outlinePixelColor = u_outlineColor;\nconst float outlineLimitRatio = (16.0 / 86.0);\nfloat clampedOutlineSize = softEdgeRatio * min(v_halo_width, outlineLimitRatio * max(v_size.x, v_size.y));\noutlinePixelColor *= clamp(0.5 - (abs(dist) - clampedOutlineSize), 0.0, 1.0);\ngl_FragColor = v_opacity * mixColors(fillPixelColor, outlinePixelColor);\n}\nelse {\ngl_FragColor = v_opacity * fillPixelColor;\n}\n#else\nlowp vec4 texColor = texture2D(u_texture, v_tex);\ngl_FragColor = v_opacity * texColor;\n#endif\n#ifdef ID\nif (gl_FragColor.a < 1.0 / 255.0) {\ndiscard;\n}\ngl_FragColor = v_id;\n#endif\n}","icon.vert":"attribute vec2 a_pos;\nattribute vec2 a_vertexOffset;\nattribute vec4 a_texAngleRange;\nattribute vec4 a_levelInfo;\nattribute float a_opacityInfo;\n#pragma header\n#ifdef ID\nuniform mediump vec4 u_id;\nvarying mediump vec4 v_id;\n#endif\nvarying lowp vec4 v_color;\n#ifdef SDF\nvarying mediump float v_halo_width;\n#endif\nuniform highp mat3 u_dvsMat3;\nuniform highp mat3 u_displayMat3;\nuniform highp mat3 u_displayViewMat3;\nuniform mediump vec2 u_iconTranslation;\nuniform vec2 u_mosaicSize;\nuniform mediump float u_depth;\nuniform mediump float u_mapRotation;\nuniform mediump float u_level;\nuniform lowp float u_keepUpright;\nuniform mediump float u_fadeDuration;\nvarying mediump vec2 v_tex;\nvarying lowp float v_opacity;\nvarying mediump vec2 v_size;\nconst float C_OFFSET_PRECISION = 1.0 / 8.0;\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\nconst float C_DEG_TO_RAD = 3.14159265359 / 180.0;\nconst float tileCoordRatio = 1.0 / 8.0;\nuniform highp float u_time;\nvoid main()\n{\n#pragma main\nv_color = color;\nv_opacity = opacity;\n#ifdef SDF\nv_halo_width = halo_width;\n#endif\nfloat modded = mod(a_opacityInfo, 128.0);\nfloat targetOpacity = (a_opacityInfo - modded) / 128.0;\nfloat startOpacity = modded / 127.0;\nfloat interpolatedOpacity = clamp(startOpacity + 2.0 * (targetOpacity - 0.5) * u_time / u_fadeDuration, 0.0, 1.0);\nv_opacity *= interpolatedOpacity;\nmediump float a_angle         = a_levelInfo[1];\nmediump float a_minLevel      = a_levelInfo[2];\nmediump float a_maxLevel      = a_levelInfo[3];\nmediump vec2 a_tex            = a_texAngleRange.xy;\nmediump float delta_z = 0.0;\nmediump float rotated = mod(a_angle + u_mapRotation, 256.0);\ndelta_z += (1.0 - step(u_keepUpright, 0.0)) * step(64.0, rotated) * (1.0 - step(192.0, rotated));\ndelta_z += 1.0 - step(a_minLevel, u_level);\ndelta_z += step(a_maxLevel, u_level);\ndelta_z += step(v_opacity, 0.0);\nvec2 offset = C_OFFSET_PRECISION * a_vertexOffset;\nv_size = abs(offset);\n#ifdef SDF\noffset = (120.0 / 86.0) * offset;\n#endif\nmediump vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0) + u_displayViewMat3 * vec3(size * offset, 0.0) + u_displayMat3 * vec3(u_iconTranslation, 0.0);\ngl_Position = vec4(pos.xy, u_depth + delta_z, 1.0);\n#ifdef ID\nv_id = u_id / 255.0;\n#endif\nv_tex = a_tex.xy / u_mosaicSize;\n}"},line:{"line.frag":"precision lowp float;\nvarying mediump vec2 v_normal;\nvarying highp float v_accumulatedDistance;\nvarying mediump float v_lineHalfWidth;\nvarying lowp vec4 v_color;\nvarying mediump float v_blur;\n#if defined (PATTERN) || defined(SDF)\nvarying mediump vec4 v_tlbr;\nvarying mediump vec2 v_patternSize;\nvarying mediump float v_widthRatio;\nuniform sampler2D u_texture;\nuniform mediump float u_antialiasing;\n#endif\n#ifdef SDF\n#include <util/encoding.glsl>\n#endif\n#ifdef ID\nvarying mediump vec4 v_id;\n#endif\nvoid main()\n{\nmediump float fragDist = length(v_normal) * v_lineHalfWidth;\nlowp float alpha = clamp((v_lineHalfWidth - fragDist) / v_blur, 0.0, 1.0);\n#ifdef PATTERN\nmediump float relativeTexX = fract(v_accumulatedDistance / (v_patternSize.x * v_widthRatio));\nmediump float relativeTexY = 0.5 + v_normal.y * v_lineHalfWidth / (v_patternSize.y * v_widthRatio);\nmediump vec2 texCoord = mix(v_tlbr.xy, v_tlbr.zw, vec2(relativeTexX, relativeTexY));\nlowp vec4 color = texture2D(u_texture, texCoord);\ngl_FragColor = alpha * v_color[3] * color;\n#elif defined(SDF)\nmediump float relativeTexX = fract((v_accumulatedDistance * 0.5) / (v_patternSize.x * v_widthRatio));\nmediump float relativeTexY =  0.5 + 0.25 * v_normal.y;\nmediump vec2 texCoord = mix(v_tlbr.xy, v_tlbr.zw, vec2(relativeTexX, relativeTexY));\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\nfloat dist = d * (v_lineHalfWidth + u_antialiasing / 2.0);\ngl_FragColor = alpha * clamp(0.5 - dist, 0.0, 1.0) * v_color;\n#else\ngl_FragColor = alpha * v_color;\n#endif\n#ifdef ID\nif (gl_FragColor.a < 1.0 / 255.0) {\ndiscard;\n}\ngl_FragColor = v_id;\n#endif\n}","line.vert":"precision mediump float;\nattribute vec2 a_pos;\nattribute vec4 a_extrude_offset;\nattribute vec4 a_dir_normal;\nattribute vec2 a_accumulatedDistance;\n#pragma header\nuniform highp mat3 u_dvsMat3;\nuniform highp mat3 u_displayMat3;\nuniform highp mat3 u_displayViewMat3;\nuniform mediump float u_zoomFactor;\nuniform mediump vec2 u_lineTranslation;\nuniform mediump float u_antialiasing;\nuniform mediump float u_depth;\nvarying mediump vec2 v_normal;\nvarying highp float v_accumulatedDistance;\nconst float scale = 1.0 / 31.0;\nconst mediump float tileCoordRatio = 8.0;\n#if defined (SDF)\nconst mediump float sdfPatternHalfWidth = 15.5;\n#endif\n#if defined (PATTERN) || defined(SDF)\nuniform mediump vec2 u_mosaicSize;\nvarying mediump vec4 v_tlbr;\nvarying mediump vec2 v_patternSize;\nvarying mediump float v_widthRatio;\n#endif\n#ifdef ID\nuniform mediump vec4 u_id;\nvarying mediump vec4 v_id;\n#endif\nvarying lowp vec4 v_color;\nvarying mediump float v_lineHalfWidth;\nvarying mediump float v_blur;\nvoid main()\n{\n#pragma main\nv_color = color * opacity;\nv_blur = blur + u_antialiasing;\nv_normal = a_dir_normal.zw * scale;\n#if defined (PATTERN) || defined(SDF)\nv_tlbr          = tlbr / u_mosaicSize.xyxy;\nv_patternSize   = vec2(tlbr.z - tlbr.x, tlbr.y - tlbr.w);\n#if defined (PATTERN)\nv_widthRatio = width / v_patternSize.y;\n#else\nv_widthRatio = width / sdfPatternHalfWidth / 2.0;\n#endif\n#endif\nv_lineHalfWidth = (width + u_antialiasing) * 0.5;\nmediump vec2 dir = a_dir_normal.xy * scale;\nmediump vec2 offset_ = a_extrude_offset.zw * scale * offset;\nmediump vec2 dist = v_lineHalfWidth * scale * a_extrude_offset.xy;\nmediump vec3 pos = u_dvsMat3 * vec3(a_pos + offset_ * tileCoordRatio / u_zoomFactor, 1.0) + u_displayViewMat3 * vec3(dist, 0.0) + u_displayMat3 * vec3(u_lineTranslation, 0.0);\ngl_Position = vec4(pos.xy, u_depth, 1.0);\n#if defined (PATTERN) || defined(SDF)\nv_accumulatedDistance = a_accumulatedDistance.x * u_zoomFactor / tileCoordRatio + dot(dir, dist + offset_);\n#endif\n#ifdef ID\nv_id = u_id / 255.0;\n#endif\n}"},outline:{"outline.frag":"varying lowp vec4 v_color;\nvarying mediump vec2 v_normal;\n#ifdef ID\nvarying mediump vec4 v_id;\n#endif\nvoid main()\n{\nlowp float dist = abs(v_normal.y);\nlowp float alpha = smoothstep(1.0, 0.0, dist);\ngl_FragColor = alpha * v_color;\n#ifdef ID\nif (gl_FragColor.a < 1.0 / 255.0) {\ndiscard;\n}\ngl_FragColor = v_id;\n#endif\n}","outline.vert":"attribute vec2 a_pos;\nattribute vec2 a_offset;\nattribute vec2 a_xnormal;\n#pragma header\nvarying lowp vec4 v_color;\n#ifdef ID\nuniform mediump vec4 u_id;\nvarying mediump vec4 v_id;\n#endif\nuniform highp mat3 u_dvsMat3;\nuniform highp mat3 u_displayMat3;\nuniform mediump vec2 u_fillTranslation;\nuniform mediump float u_depth;\nuniform mediump float u_outline_width;\nvarying lowp vec2 v_normal;\nconst float scale = 1.0 / 15.0;\nvoid main()\n{\n#pragma main\nv_color = color * opacity;\n#ifdef ID\nv_id = u_id / 255.0;\n#endif\nv_normal = a_xnormal;\nmediump vec2 dist = u_outline_width * scale * a_offset;\nmediump vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0) + u_displayMat3 * vec3(dist + u_fillTranslation, 0.0);\ngl_Position = vec4(pos.xy, u_depth, 1.0);\n}"},text:{"text.frag":"uniform lowp sampler2D u_texture;\nvarying lowp vec2 v_tex;\nvarying lowp vec4 v_color;\nvarying mediump float v_edgeWidth;\nvarying mediump float v_edgeDistance;\n#ifdef ID\nvarying mediump vec4 v_id;\n#endif\nvoid main()\n{\nlowp float dist = texture2D(u_texture, v_tex).a;\nmediump float alpha = smoothstep(v_edgeDistance - v_edgeWidth, v_edgeDistance + v_edgeWidth, dist);\ngl_FragColor = alpha * v_color;\n#ifdef ID\nif (gl_FragColor.a < 1.0 / 255.0) {\ndiscard;\n}\ngl_FragColor = v_id;\n#endif\n}","text.vert":"attribute vec2 a_pos;\nattribute vec2 a_vertexOffset;\nattribute vec4 a_texAngleRange;\nattribute vec4 a_levelInfo;\nattribute float a_opacityInfo;\n#pragma header\nvarying lowp vec4 v_color;\n#ifdef ID\nuniform mediump vec4 u_id;\nvarying mediump vec4 v_id;\n#endif\nuniform highp mat3 u_dvsMat3;\nuniform highp mat3 u_displayMat3;\nuniform highp mat3 u_displayViewMat3;\nuniform mediump vec2 u_textTranslation;\nuniform vec2 u_mosaicSize;\nuniform mediump float u_depth;\nuniform mediump float u_mapRotation;\nuniform mediump float u_level;\nuniform lowp float u_keepUpright;\nuniform mediump float u_fadeDuration;\nvarying lowp vec2 v_tex;\nconst float offsetPrecision = 1.0 / 8.0;\nconst mediump float edgePos = 0.75;\nuniform mediump float u_antialiasingWidth;\nvarying mediump float v_edgeDistance;\nvarying mediump float v_edgeWidth;\nuniform lowp float u_halo;\nconst float sdfFontScale = 1.0 / 24.0;\nconst float sdfPixel = 3.0;\nuniform highp float u_time;\nvoid main()\n{\n#pragma main\nif (u_halo > 0.5)\n{\nv_color = halo_color * opacity;\nhalo_width *= sdfPixel;\nhalo_blur *= sdfPixel;\n}\nelse\n{\nv_color = color * opacity;\nhalo_width = 0.0;\nhalo_blur = 0.0;\n}\nfloat modded = mod(a_opacityInfo, 128.0);\nfloat targetOpacity = (a_opacityInfo - modded) / 128.0;\nfloat startOpacity = modded / 127.0;\nfloat interpolatedOpacity = clamp(startOpacity + 2.0 * (targetOpacity - 0.5) * u_time / u_fadeDuration, 0.0, 1.0);\nv_color *= interpolatedOpacity;\nmediump float a_angle       = a_levelInfo[1];\nmediump float a_minLevel    = a_levelInfo[2];\nmediump float a_maxLevel    = a_levelInfo[3];\nmediump vec2 a_tex          = a_texAngleRange.xy;\nmediump float a_visMinAngle    = a_texAngleRange.z;\nmediump float a_visMaxAngle    = a_texAngleRange.w;\nmediump float delta_z = 0.0;\nmediump float angle = mod(a_angle + u_mapRotation, 256.0);\nif (a_visMinAngle < a_visMaxAngle)\n{\ndelta_z += (1.0 - step(u_keepUpright, 0.0)) * (step(a_visMaxAngle, angle) + (1.0 - step(a_visMinAngle, angle)));\n}\nelse\n{\ndelta_z += (1.0 - step(u_keepUpright, 0.0)) * (step(a_visMaxAngle, angle) * (1.0 - step(a_visMinAngle, angle)));\n}\ndelta_z += 1.0 - step(a_minLevel, u_level);\ndelta_z += step(a_maxLevel, u_level);\ndelta_z += step(v_color[3], 0.0);\nv_tex = a_tex.xy / u_mosaicSize;\n#ifdef ID\nv_id = u_id / 255.0;\n#endif\nv_edgeDistance = edgePos - halo_width / size;\nv_edgeWidth = (u_antialiasingWidth + halo_blur) / size;\nmediump vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0) + sdfFontScale * u_displayViewMat3 * vec3(offsetPrecision * size * a_vertexOffset, 0.0) + u_displayMat3 * vec3(u_textTranslation, 0.0);\ngl_Position = vec4(pos.xy, u_depth + delta_z, 1.0);\n}"},util:{"encoding.glsl":"const vec4 rgba2float_factors = vec4(\n255.0 / (256.0),\n255.0 / (256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n);\nfloat rgba2float(vec4 rgba) {\nreturn dot(rgba, rgba2float_factors);\n}","util.glsl":"float nextPOT(in float x) {\nreturn pow(2.0, ceil(log2(abs(x))));\n}"}};function di(t){let i=ui;return t.split("/").forEach((t=>{i&&(i=i[t])})),i}const pi=new lt(di);function fi(t){return pi.resolveIncludes(t)}const mi=t=>ct({ID:t.id,PATTERN:t.pattern}),_i={shaders:t=>({vertexShader:mi(t)+fi("background/background.vert"),fragmentShader:mi(t)+fi("background/background.frag")})},vi=t=>ct({ID:t.id}),gi={shaders:t=>({vertexShader:vi(t)+fi("circle/circle.vert"),fragmentShader:vi(t)+fi("circle/circle.frag")})},wi=t=>ct({ID:t.id,PATTERN:t.pattern}),yi={shaders:t=>({vertexShader:wi(t)+fi("fill/fill.vert"),fragmentShader:wi(t)+fi("fill/fill.frag")})},bi=t=>ct({ID:t.id}),xi={shaders:t=>({vertexShader:bi(t)+fi("outline/outline.vert"),fragmentShader:bi(t)+fi("outline/outline.frag")})},Mi=t=>ct({ID:t.id,SDF:t.sdf}),Ti={shaders:t=>({vertexShader:Mi(t)+fi("icon/icon.vert"),fragmentShader:Mi(t)+fi("icon/icon.frag")})},ji=t=>ct({ID:t.id,PATTERN:t.pattern,SDF:t.sdf}),Pi={shaders:t=>({vertexShader:ji(t)+fi("line/line.vert"),fragmentShader:ji(t)+fi("line/line.frag")})},Di=t=>ct({ID:t.id}),Ri={shaders:t=>({vertexShader:Di(t)+fi("text/text.vert"),fragmentShader:Di(t)+fi("text/text.frag")})};class Ci{constructor(){this._programByKey=new Map}dispose(){this._programByKey.forEach((t=>t.dispose())),this._programByKey.clear()}getMaterialProgram(t,i,e){const s=i.key<<3|this._getMaterialOptionsValue(i.type,e);if(this._programByKey.has(s))return this._programByKey.get(s);const n=this._getProgramTemplate(i.type),{shaders:o}=n,{vertexShader:a,fragmentShader:r}=o(e),l=i.getShaderHeader(),h=i.getShaderMain(),c=a.replace("#pragma header",l).replace("#pragma main",h),u=t.programCache.acquire(c,r,i.getAttributeLocations());return this._programByKey.set(s,u),u}_getMaterialOptionsValue(t,i){switch(t){case rt.BACKGROUND:{const t=i;return(t.pattern?1:0)<<1|(t.id?1:0)}case rt.FILL:{const t=i;return(t.pattern?1:0)<<1|(t.id?1:0)}case rt.OUTLINE:return i.id?1:0;case rt.LINE:{const t=i;return(t.sdf?1:0)<<2|(t.pattern?1:0)<<1|(t.id?1:0)}case rt.ICON:{const t=i;return(t.sdf?1:0)<<1|(t.id?1:0)}case rt.CIRCLE:return i.id?1:0;case rt.TEXT:return i.id?1:0;default:return 0}}_getProgramTemplate(t){switch(t){case rt.BACKGROUND:return _i;case rt.CIRCLE:return gi;case rt.FILL:return yi;case rt.ICON:return Ti;case rt.LINE:return Pi;case rt.OUTLINE:return xi;case rt.TEXT:return Ri;default:return null}}}class zi{constructor(){this._initialized=!1}dispose(){this._program=l(this._program),this._vertexArrayObject=l(this._vertexArrayObject)}render(t,i,e,s){t&&(this._initialized||this._initialize(t),t.setBlendFunctionSeparate(_t.ONE,_t.ONE_MINUS_SRC_ALPHA,_t.ONE,_t.ONE_MINUS_SRC_ALPHA),t.bindVAO(this._vertexArrayObject),t.useProgram(this._program),i.setSamplingMode(e),t.bindTexture(i,0),this._program.setUniform1i("u_tex",0),this._program.setUniform1f("u_opacity",s),t.drawArrays(vt.TRIANGLE_STRIP,0,4),t.bindTexture(null,0),t.bindVAO())}_initialize(t){if(this._initialized)return!0;const i=ht(t,A);if(!i)return!1;const e=new Int8Array(16);e[0]=-1,e[1]=-1,e[2]=0,e[3]=0,e[4]=1,e[5]=-1,e[6]=1,e[7]=0,e[8]=-1,e[9]=1,e[10]=0,e[11]=1,e[12]=1,e[13]=1,e[14]=1,e[15]=1;const s=A.attributes,n=new ut(t,s,it,{geometry:dt.createVertex(t,gt.STATIC_DRAW,e)});return this._program=i,this._vertexArrayObject=n,this._initialized=!0,!0}}const Fi=t=>t===K.HITTEST||t===K.LABEL_ALPHA,Si=t=>(Fi(t)?1:0)|(t===K.HIGHLIGHT?2:0),ki=({rendererInfo:t,drawPhase:i},e,s)=>`${e.getVariationHash()}-${Si(i)}-${t.getVariationHash()}-${null!=s&&s.join(".")}`,Ii=(t,i,e,s={})=>{if(s={...s,...i.getVariation(),...t.rendererInfo.getVariation(),highlight:t.drawPhase===K.HIGHLIGHT,id:Fi(t.drawPhase)},null!=e)for(const t of e)s[t]=!0;return s};class Oi{constructor(t){this._rctx=t,this._programByKey=new Map}dispose(){this._programByKey.forEach((t=>t.dispose())),this._programByKey.clear()}getProgram(t,i=[]){const e=t.vsPath+"."+t.fsPath+JSON.stringify(i);if(this._programByKey.has(e))return this._programByKey.get(e);const s={...i.map((t=>"string"==typeof t?{name:t,value:!0}:t)).reduce(((t,i)=>({...t,[i.name]:i.value})),{})},{vsPath:n,fsPath:o,attributes:a}=t,r=Rt(n,o,a,s),l=this._rctx.programCache.acquire(r.shaders.vertexShader,r.shaders.fragmentShader,r.attributes);if(!l)throw new Error("Unable to get program for key: ${key}");return this._programByKey.set(e,l),l}getMaterialProgram(t,i,e,s,n){const o=ki(t,i,n);if(this._programByKey.has(o))return this._programByKey.get(o);const a=Ii(t,i,n,{ignoresSamplerPrecision:t.context.driverTest.ignoresSamplerPrecision.result}),r=Rt(e,e,s,a),l=this._rctx.programCache.acquire(r.shaders.vertexShader,r.shaders.fragmentShader,r.attributes);if(!l)throw new Error("Unable to get program for key: ${key}");return this._programByKey.set(o,l),l}}class Ai{constructor(t,i){this._queue=[],this._context=t,this._refreshable=i}destroy(){this._queue=[]}enqueueTextureUpdate(i,e){const s=h(),n=i,o=Ft,a=Math.ceil(n.height/o);if(t(e),this._context.type===Lt.WEBGL1)this._queue.push({type:"no-chunk",request:i,resolver:s,options:e});else for(let t=0;t<a;t++){const r=t*o,l=t===a-1,h=l?n.height-o*t:o;this._queue.push({type:"chunk",request:i,resolver:s,chunk:t,chunkOffset:r,destHeight:h,chunkIsLast:l,options:e})}return c(e,(t=>s.reject(t))),s.promise}upload(){let t=0;for(;this._queue.length;){const i=performance.now(),e=this._queue.shift();if(e){if(null!=e.options.signal&&e.options.signal.aborted)continue;switch(e.type){case"chunk":this._uploadChunk(e);break;case"no-chunk":this._uploadNoChunk(e)}const s=performance.now()-i;if(t+=s,t+s>=zt)break}}this._queue.length&&this._refreshable.requestRender()}_uploadChunk(t){const{request:i,resolver:e,chunkOffset:s,chunkIsLast:n,destHeight:o}=t,{data:a,texture:r,width:l}=i;null!=a&&(r.updateData(0,0,s,l,o,a,s),n&&e.resolve())}_uploadNoChunk(t){const{request:i,resolver:e}=t,{data:s,texture:n}=i;n.setData(s),e.resolve()}}const Ei=Vt(-.5,-.5);class Bi{constructor(){this._centerNdc=u(),this._pxToNdc=u(),this._worldDimensionsPx=u(),this._mat3=F(),this._initialized=!1}dispose(){this._program=l(this._program),this._quad=l(this._quad)}render(t,i){const{context:e}=t;return!!this._updateGeometry(t,i)&&(this._initialized||this._initialize(e),e.setDepthWriteEnabled(!1),e.setDepthTestEnabled(!1),e.setColorMask(!1,!1,!1,!1),e.setBlendingEnabled(!1),e.setStencilOp(wt.KEEP,wt.KEEP,wt.REPLACE),e.setStencilFunction(yt.ALWAYS,1,255),e.setStencilTestEnabled(!0),e.useProgram(this._program),this._program.setUniformMatrix3fv("u_worldExtent",this._mat3),this._quad.draw(),this._quad.unbind(),!0)}_initialize(t){if(this._initialized)return;const i=ht(t,E);i&&(this._program=i,this._quad=new et(t,[0,0,1,0,0,1,1,1]),this._initialized=!0)}_updateGeometry(t,i){const{state:e,pixelRatio:s}=t,{size:n,rotation:o}=e,a=Math.round(n[0]*s),r=Math.round(n[1]*s);if(!e.spatialReference.isWrappable)return!1;const l=p(o),h=Math.abs(Math.cos(l)),c=Math.abs(Math.sin(l)),u=Math.round(a*h+r*c),f=Math.round(e.worldScreenWidth);if(u<=f)return!1;const m=a*c+r*h,_=f*s,v=(i.left-i.right)*s/a,g=(i.bottom-i.top)*s/r;d(this._worldDimensionsPx,_,m,1),d(this._pxToNdc,2/a,-2/r,1),d(this._centerNdc,v,g,1);const w=this._mat3;return Nt(w,this._centerNdc),qt(w,w,this._pxToNdc),0!==o&&Ut(w,w,l),qt(w,w,this._worldDimensionsPx),Ht(w,w,Ei),!0}}class Li extends st{constructor(){super(...arguments),this.defines=[],this._desc={vsPath:"fx/integrate",fsPath:"fx/integrate",attributes:new Map([["a_position",0]])}}dispose(){this._quad&&this._quad.dispose()}bind(){}unbind(){}draw(t,i){if(!i?.size)return;const{context:e,renderingOptions:s}=t;this._quad||(this._quad=new et(e,[0,0,1,0,0,1,1,1]));const n=e.getBoundFramebufferObject(),{x:o,y:a,width:r,height:l}=e.getViewport();i.bindTextures(e);const h=i.getBlock(St);if(null==h)return;const c=h.getFBO(e),u=h.getFBO(e,1);e.setViewport(0,0,i.size,i.size),this._computeDelta(t,u,s.labelsAnimationTime),this._updateAnimationState(t,u,c),e.bindFramebuffer(n),e.setViewport(o,a,r,l)}_computeDelta(t,i,e){const{context:s,painter:n,displayLevel:o}=t,a=n.materialManager.getProgram(this._desc,["delta"]);s.bindFramebuffer(i),s.setClearColor(0,0,0,0),s.clear(s.gl.COLOR_BUFFER_BIT),s.useProgram(a);const r=m("featurelayer-animation-enabled")?e:1;a.setUniform1i("u_maskTexture",kt),a.setUniform1i("u_sourceTexture",It),a.setUniform1f("u_timeDelta",t.deltaTime),a.setUniform1f("u_animationTime",r),a.setUniform1f("u_zoomLevel",Math.round(10*o)),this._quad.draw()}_updateAnimationState(t,i,e){const{context:s,painter:n}=t,o=n.materialManager.getProgram(this._desc,["update"]);s.bindTexture(i.colorTexture,1),s.useProgram(o),o.setUniform1i("u_sourceTexture",1),s.bindFramebuffer(e),s.setClearColor(0,0,0,0),s.clear(s.gl.COLOR_BUFFER_BIT),this._quad.draw()}}class Wi extends st{constructor(t){super(),this.name=this.constructor.name,this.defines=[t]}dispose(){}bind({context:t,painter:i}){this._prev=t.getBoundFramebufferObject();const{width:e,height:s}=t.getViewport(),n=i.getFbos(e,s).effect0;t.bindFramebuffer(n),t.setColorMask(!0,!0,!0,!0),t.setClearColor(0,0,0,0),t.clear(t.gl.COLOR_BUFFER_BIT)}unbind(){}draw(t,i){const{context:e,painter:s}=t,n=s.getPostProcessingEffects(i),o=e.getBoundFramebufferObject();for(const{postProcessingEffect:i,effect:e}of n)i.draw(t,o,e);e.bindFramebuffer(this._prev),e.setStencilTestEnabled(!1),s.blitTexture(e,o.colorTexture,bt.NEAREST),e.setStencilTestEnabled(!0)}}class Ni{constructor(){this._width=void 0,this._height=void 0,this._resources=null}dispose(){this._resources&&(this._resources.quadGeometry.dispose(),this._resources.quadVAO.dispose(),this._resources.highlightProgram.dispose(),this._resources.blurProgram.dispose(),this._resources=null)}preBlur(t,i){t.bindTexture(i,Ot),t.useProgram(this._resources.blurProgram),this._resources.blurProgram.setUniform4fv("u_direction",[1,0,1/this._width,0]),this._resources.blurProgram.setUniformMatrix4fv("u_channelSelector",X),t.bindVAO(this._resources.quadVAO),t.drawArrays(vt.TRIANGLE_STRIP,0,4),t.bindVAO()}finalBlur(t,i){t.bindTexture(i,Ot),t.useProgram(this._resources.blurProgram),this._resources.blurProgram.setUniform4fv("u_direction",[0,1,0,1/this._height]),this._resources.blurProgram.setUniformMatrix4fv("u_channelSelector",$),t.bindVAO(this._resources.quadVAO),t.drawArrays(vt.TRIANGLE_STRIP,0,4),t.bindVAO()}renderHighlight(t,i,e){t.bindTexture(i,Ot),t.useProgram(this._resources.highlightProgram),e.applyHighlightOptions(t,this._resources.highlightProgram),t.bindVAO(this._resources.quadVAO),t.setBlendingEnabled(!0),t.setBlendFunction(_t.ONE,_t.ONE_MINUS_SRC_ALPHA),t.drawArrays(vt.TRIANGLE_STRIP,0,4),t.bindVAO()}_initialize(t,i,e){this._width=i,this._height=e;const s=dt.createVertex(t,gt.STATIC_DRAW,new Int8Array([-1,-1,0,0,1,-1,1,0,-1,1,0,1,1,1,1,1]).buffer),n=new ut(t,new Map([["a_position",0],["a_texcoord",1]]),{geometry:[new Xt("a_position",2,xt.BYTE,0,4),new Xt("a_texcoord",2,xt.UNSIGNED_BYTE,2,4)]},{geometry:s}),o=ht(t,B),a=ht(t,L);t.useProgram(o),o.setUniform1i("u_texture",Ot),o.setUniform1i("u_shade",At),o.setUniform1f("u_sigma",G),t.useProgram(a),a.setUniform1i("u_texture",Ot),a.setUniform1f("u_sigma",G),this._resources={quadGeometry:s,quadVAO:n,highlightProgram:o,blurProgram:a}}setup(t,i,e){this._resources?(this._width=i,this._height=e):this._initialize(t,i,e)}}function qi(t,i,e){const s=new $t(i,e);return s.wrapMode=Mt.CLAMP_TO_EDGE,new pt(t,s,new ft(Tt.STENCIL_INDEX8,i,e))}class Ui{constructor(){this._width=void 0,this._height=void 0,this._resources=null}dispose(){this._resources&&(this._resources.sharedBlur1Fbo.dispose(),this._resources.sharedBlur2Fbo.dispose(),this._resources=_())}_initialize(t,i,e){this._width=i,this._height=e;const s=qi(t,i,e),n=qi(t,i,e);this._resources={sharedBlur1Fbo:s,sharedBlur2Fbo:n}}setup(t,i,e){!this._resources||this._width===i&&this._height===e||this.dispose(),this._resources||this._initialize(t,i,e)}get sharedBlur1Tex(){return this._resources.sharedBlur1Fbo.colorTexture}get sharedBlur1Fbo(){return this._resources.sharedBlur1Fbo}get sharedBlur2Tex(){return this._resources.sharedBlur2Fbo.colorTexture}get sharedBlur2Fbo(){return this._resources.sharedBlur2Fbo}}const Hi=4,Vi=4/Hi;class Xi extends st{constructor(){super(...arguments),this.defines=["highlight"],this._hlRenderer=new Ni,this._width=void 0,this._height=void 0,this._boundFBO=null,this._hlSurfaces=new Ui,this._adjustedWidth=void 0,this._adjustedHeight=void 0,this._blitRenderer=new zi}dispose(){this._hlSurfaces?.dispose(),this._hlRenderer?.dispose(),this._boundFBO=null}bind(t){const{context:i,painter:e}=t,{width:s,height:n}=i.getViewport(),o=e.getFbos(s,n).effect0;this.setup(t,s,n),i.bindFramebuffer(o),i.setColorMask(!0,!0,!0,!0),i.setClearColor(0,0,0,0),i.clear(i.gl.COLOR_BUFFER_BIT)}unbind(){}setup({context:t},i,e){this._width=i,this._height=e;const s=i%Hi,n=e%Hi;i+=s<Hi/2?-s:Hi-s,e+=n<Hi/2?-n:Hi-n,this._adjustedWidth=i,this._adjustedHeight=e,this._boundFBO=t.getBoundFramebufferObject();const o=Math.round(i*Vi),a=Math.round(e*Vi);this._hlRenderer.setup(t,o,a),this._hlSurfaces.setup(t,o,a)}draw(t){const{context:i,highlightGradient:e}=t;if(!e)return;const s=i.getBoundFramebufferObject();i.setViewport(0,0,this._adjustedWidth*Vi,this._adjustedHeight*Vi),i.bindFramebuffer(this._hlSurfaces.sharedBlur1Fbo),i.setStencilTestEnabled(!1),i.setClearColor(0,0,0,0),i.clear(i.gl.COLOR_BUFFER_BIT),this._blitRenderer.render(i,s.colorTexture,bt.NEAREST,1),i.setStencilTestEnabled(!1),i.setBlendingEnabled(!1),i.setColorMask(!1,!1,!1,!0),i.bindFramebuffer(this._hlSurfaces.sharedBlur2Fbo),i.setClearColor(0,0,0,0),i.clear(i.gl.COLOR_BUFFER_BIT),this._hlRenderer.preBlur(i,this._hlSurfaces.sharedBlur1Tex),i.bindFramebuffer(this._hlSurfaces.sharedBlur1Fbo),i.setClearColor(0,0,0,0),i.clear(i.gl.COLOR_BUFFER_BIT),this._hlRenderer.finalBlur(i,this._hlSurfaces.sharedBlur2Tex),i.bindFramebuffer(this._boundFBO),i.setBlendingEnabled(!0),i.setColorMask(!0,!0,!0,!0),i.setViewport(0,0,this._width,this._height),this._hlRenderer.renderHighlight(i,this._hlSurfaces.sharedBlur1Tex,e),this._boundFBO=null}}class $i extends st{constructor(){super(...arguments),this.name=this.constructor.name,this.defines=["hittest"]}dispose(){null!=this._fbo&&this._fbo.dispose()}createOptions({pixelRatio:t},i,e=Et){if(!i.length)return null;const s=i.shift(),n=s.x,o=s.y;return this._outstanding=s,{type:"hittest",distance:e*t,position:[n,o]}}bind(t){const{context:i,attributeView:e}=t;if(!e.size)return;const s=e.getBlock(Bt);if(null==s)return;const n=s.getFBO(i);i.setViewport(0,0,e.size,e.size),i.bindFramebuffer(n),i.setColorMask(!0,!0,!0,!0),i.setClearColor(0,0,0,0),i.clear(i.gl.COLOR_BUFFER_BIT|i.gl.DEPTH_BUFFER_BIT)}unbind(t){}draw(t){if(null==this._outstanding)return;const i=this._outstanding;this._outstanding=null,this._resolve(t,i.resolvers)}async _resolve(t,i){const{context:e,attributeView:s}=t,n=s.getBlock(Bt);if(null==n)return void i.forEach((t=>t.resolve([])));const o=n.getFBO(e),a=new Uint8Array(o.width*o.height*4);try{await o.readPixelsAsync(0,0,o.width,o.height,jt.RGBA,Pt.UNSIGNED_BYTE,a)}catch(t){return void i.forEach((t=>t.resolve([])))}const r=[];for(let t=0;t<a.length;t+=4){const i=a[t],e=a[t+3];i&&r.push({id:t/4,directHits:e})}r.sort(((t,i)=>i.directHits===t.directHits?i.id-t.id:i.directHits-t.directHits));const l=r.map((t=>t.id));i.forEach((t=>t.resolve(l)))}}class Gi extends st{constructor(){super(...arguments),this.name=this.constructor.name,this.defines=["id"],this._lastSize=0,this._boundFBO=null}dispose(){null!=this._fbo&&this._fbo.dispose()}bind({context:t,painter:i}){const{width:e,height:s}=t.getViewport();this._boundFBO=t.getBoundFramebufferObject();const n=i.getFbos(e,s).effect0;t.bindFramebuffer(n),t.setColorMask(!0,!0,!0,!0),t.setClearColor(0,0,0,0),t.clear(t.gl.COLOR_BUFFER_BIT)}unbind({context:t}){t.bindFramebuffer(this._boundFBO),this._boundFBO=null}draw(t,i,e=2*Et){this._resolve(t,i,e)}async _resolve({context:t,state:i,pixelRatio:e},s,n){const o=t.getBoundFramebufferObject(),a=i.size[1]*e,r=Math.round(n*e),l=r/2,h=r/2;this._ensureBuffer(r),s.forEach((async(t,i)=>{const n=new Map,c=Math.floor(i.x*e-r/2),u=Math.floor(a-i.y*e-r/2);await o.readPixelsAsync(c,u,r,r,jt.RGBA,Pt.UNSIGNED_BYTE,this._buf);for(let t=0;t<this._buf32.length;t++){const i=this._buf32[t];if(4294967295!==i&&0!==i){const e=t%r,s=r-Math.floor(t/r),o=(l-e)*(l-e)+(h-s)*(h-s),a=n.has(i)?n.get(i):4294967295;n.set(i,Math.min(o,a))}}const d=Array.from(n).sort(((t,i)=>t[1]-i[1])).map((t=>t[0]));t.resolve(d),s.delete(i)}))}_ensureBuffer(t){this._lastSize!==t&&(this._lastSize=t,this._buf=new Uint8Array(4*t*t),this._buf32=new Uint32Array(this._buf.buffer))}}const Yi=5,Ji=[1,0],Qi=[0,1],Ki=[1,.8,.6,.4,.2],Zi=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];class te{constructor(){this._intensityFBO=null,this._compositeFBO=null,this._mipsFBOs=new Array(Yi),this._nMips=Yi,this._kernelSizeArray=[3,5,7,9,11],this._size=[0,0],this._programDesc={luminosityHighPass:{vsPath:"post-processing/pp",fsPath:"post-processing/bloom/luminosityHighPass",attributes:new Map([["a_position",0]])},gaussianBlur:{vsPath:"post-processing/pp",fsPath:"post-processing/bloom/gaussianBlur",attributes:new Map([["a_position",0]])},composite:{vsPath:"post-processing/pp",fsPath:"post-processing/bloom/composite",attributes:new Map([["a_position",0]])},blit:{vsPath:"post-processing/pp",fsPath:"post-processing/blit",attributes:new Map([["a_position",0]])}}}dispose(){if(this._quad=l(this._quad),this._intensityFBO=l(this._intensityFBO),this._compositeFBO=l(this._compositeFBO),this._mipsFBOs){for(let t=0;t<this._nMips;t++)this._mipsFBOs[t]&&(this._mipsFBOs[t].horizontal.dispose(),this._mipsFBOs[t].vertical.dispose());this._mipsFBOs=null}}draw(t,i,e){const{width:s,height:n}=i,{context:o,painter:a}=t,{materialManager:r}=a,l=o.gl,h=this._programDesc,{strength:c,radius:u,threshold:d}=e;this._quad||(this._quad=new et(o,[-1,-1,1,-1,-1,1,1,1])),this._createOrResizeResources(t,s,n),o.setStencilTestEnabled(!1),o.setBlendingEnabled(!0),o.setBlendFunction(_t.ONE,_t.ONE_MINUS_SRC_ALPHA),o.setStencilWriteMask(0);const p=this._quad;p.bind(),o.bindFramebuffer(this._intensityFBO);const f=r.getProgram(h.luminosityHighPass);o.useProgram(f),o.bindTexture(i.colorTexture,0),f.setUniform1i("u_texture",0),f.setUniform3fv("u_defaultColor",[0,0,0]),f.setUniform1f("u_defaultOpacity",0),f.setUniform1f("u_luminosityThreshold",d),f.setUniform1f("u_smoothWidth",.01);const m=[Math.round(s/2),Math.round(n/2)];o.setViewport(0,0,m[0],m[1]),o.setClearColor(0,0,0,0),o.clear(l.COLOR_BUFFER_BIT),p.draw(),o.setBlendingEnabled(!1);let _=this._intensityFBO.colorTexture;for(let t=0;t<this._nMips;t++){const i=r.getProgram(h.gaussianBlur,[{name:"radius",value:this._kernelSizeArray[t]}]);o.useProgram(i),o.bindTexture(_,t+1),i.setUniform1i("u_colorTexture",t+1),i.setUniform2fv("u_texSize",m),i.setUniform2fv("u_direction",Ji),o.setViewport(0,0,m[0],m[1]);const e=this._mipsFBOs[t];o.bindFramebuffer(e.horizontal),p.draw(),_=e.horizontal.colorTexture,o.bindFramebuffer(e.vertical),o.bindTexture(_,t+1),i.setUniform2fv("u_direction",Qi),p.draw(),_=e.vertical.colorTexture,m[0]=Math.round(m[0]/2),m[1]=Math.round(m[1]/2)}o.setViewport(0,0,s,n);const v=r.getProgram(h.composite,[{name:"nummips",value:Yi}]);o.bindFramebuffer(this._compositeFBO),o.useProgram(v),v.setUniform1f("u_bloomStrength",c),v.setUniform1f("u_bloomRadius",u),v.setUniform1fv("u_bloomFactors",Ki),v.setUniform3fv("u_bloomTintColors",Zi),o.bindTexture(this._mipsFBOs[0].vertical.colorTexture,1),v.setUniform1i("u_blurTexture1",1),o.bindTexture(this._mipsFBOs[1].vertical.colorTexture,2),v.setUniform1i("u_blurTexture2",2),o.bindTexture(this._mipsFBOs[2].vertical.colorTexture,3),v.setUniform1i("u_blurTexture3",3),o.bindTexture(this._mipsFBOs[3].vertical.colorTexture,4),v.setUniform1i("u_blurTexture4",4),o.bindTexture(this._mipsFBOs[4].vertical.colorTexture,5),v.setUniform1i("u_blurTexture5",5),p.draw(),o.bindFramebuffer(i),o.setBlendingEnabled(!0);const g=r.getProgram(h.blit);o.useProgram(g),o.bindTexture(this._compositeFBO.colorTexture,6),g.setUniform1i("u_texture",6),o.setBlendFunction(_t.ONE,_t.ONE),p.draw(),p.unbind(),o.setBlendFunction(_t.ONE,_t.ONE_MINUS_SRC_ALPHA),o.setStencilTestEnabled(!0)}_createOrResizeResources(t,i,e){const{context:s}=t;if(this._compositeFBO&&this._size[0]===i&&this._size[1]===e)return;this._size[0]=i,this._size[1]=e;const n=[Math.round(i/2),Math.round(e/2)];if(this._compositeFBO)this._compositeFBO.resize(i,e);else{const t=new $t(i,e);t.internalFormat=jt.RGBA,t.wrapMode=Mt.CLAMP_TO_EDGE,this._compositeFBO=new pt(s,t)}if(this._intensityFBO)this._intensityFBO.resize(n[0],n[1]);else{const t=new $t(n[0],n[1]);t.internalFormat=jt.RGBA,t.wrapMode=Mt.CLAMP_TO_EDGE,this._intensityFBO=new pt(s,t)}for(let t=0;t<this._nMips;t++){if(this._mipsFBOs[t])this._mipsFBOs[t].horizontal.resize(n[0],n[1]),this._mipsFBOs[t].vertical.resize(n[0],n[1]);else{const i=new $t(n[0],n[1]);i.internalFormat=jt.RGBA,i.wrapMode=Mt.CLAMP_TO_EDGE,this._mipsFBOs[t]={horizontal:new pt(s,i),vertical:new pt(s,i)}}n[0]=Math.round(n[0]/2),n[1]=Math.round(n[1]/2)}}}const ie=[1,0],ee=[0,1];class se{constructor(){this._blurFBO=null,this._size=[0,0],this._programDesc={gaussianBlur:{vsPath:"post-processing/pp",fsPath:"post-processing/blur/gaussianBlur",attributes:new Map([["a_position",0]])},radialBlur:{vsPath:"post-processing/pp",fsPath:"post-processing/blur/radial-blur",attributes:new Map([["a_position",0]])},blit:{vsPath:"post-processing/pp",fsPath:"post-processing/blit",attributes:new Map([["a_position",0]])}}}dispose(){this._blurFBO&&(this._blurFBO.dispose(),this._blurFBO=null)}draw(t,i,e){const{context:s}=t,{type:n,radius:o}=e;if(0===o)return;this._createOrResizeResources(t),this._quad||(this._quad=new et(s,[-1,-1,1,-1,-1,1,1,1]));const a=this._quad;a.bind(),"blur"===n?this._gaussianBlur(t,i,o):this._radialBlur(t,i),a.unbind()}_gaussianBlur(t,i,e){const{context:s,state:n,painter:o,pixelRatio:a}=t,{size:r}=n,{materialManager:l}=o,h=this._programDesc,c=this._quad,u=[Math.round(a*r[0]),Math.round(a*r[1])],d=this._blurFBO,p=l.getProgram(h.gaussianBlur,[{name:"radius",value:Math.ceil(e)}]);s.useProgram(p),s.setBlendingEnabled(!1),s.bindFramebuffer(d),s.bindTexture(i.colorTexture,4),p.setUniform1i("u_colorTexture",4),p.setUniform2fv("u_texSize",u),p.setUniform2fv("u_direction",ie),p.setUniform1f("u_sigma",e),c.draw(),s.bindFramebuffer(i),s.setStencilWriteMask(0),s.setStencilTestEnabled(!1),s.setDepthWriteEnabled(!1),s.setDepthTestEnabled(!1),s.bindTexture(d?.colorTexture,5),p.setUniform1i("u_colorTexture",5),p.setUniform2fv("u_direction",ee),c.draw(),s.setBlendingEnabled(!0),s.setBlendFunction(_t.ONE,_t.ONE_MINUS_SRC_ALPHA),s.setStencilTestEnabled(!0)}_radialBlur(t,i){const{context:e,painter:s}=t,{materialManager:n}=s,o=this._programDesc,a=this._quad,r=this._blurFBO;e.bindFramebuffer(r);const l=n.getProgram(o.radialBlur);e.useProgram(l),e.setBlendingEnabled(!1),e.bindTexture(i.colorTexture,4),l.setUniform1i("u_colorTexture",4),a.draw(),e.bindFramebuffer(i),e.setStencilWriteMask(0),e.setStencilTestEnabled(!1),e.setDepthWriteEnabled(!1),e.setDepthTestEnabled(!1),e.setBlendingEnabled(!0);const h=n.getProgram(o.blit);e.useProgram(h),e.bindTexture(r?.colorTexture,5),h.setUniform1i("u_texture",5),e.setBlendFunction(_t.ONE,_t.ONE_MINUS_SRC_ALPHA),a.draw()}_createOrResizeResources(t){const{context:i,state:e,pixelRatio:s}=t,{size:n}=e,o=Math.round(s*n[0]),a=Math.round(s*n[1]);if(!this._blurFBO||this._size[0]!==o||this._size[1]!==a)if(this._size[0]=o,this._size[1]=a,this._blurFBO)this._blurFBO.resize(o,a);else{const t=new $t(o,a);t.internalFormat=jt.RGBA,t.wrapMode=Mt.CLAMP_TO_EDGE,this._blurFBO=new pt(i,t)}}}class ne{constructor(){this._layerFBOTexture=null,this._size=[0,0],this._programDesc={vsPath:"post-processing/pp",fsPath:"post-processing/filterEffect",attributes:new Map([["a_position",0]])}}dispose(){this._layerFBOTexture=l(this._layerFBOTexture)}draw(t,i,e){const{width:s,height:n}=i;this._createOrResizeResources(t,s,n);const{context:o,painter:a}=t,{materialManager:r}=a,l=this._programDesc,h=this._quad,c=e.colorMatrix;h.bind();const u=this._layerFBOTexture;o.bindFramebuffer(i),i.copyToTexture(0,0,s,n,0,0,u),o.setBlendingEnabled(!1),o.setStencilTestEnabled(!1);const d=r.getProgram(l);o.useProgram(d),o.bindTexture(u,2),d.setUniformMatrix4fv("u_coefficients",c),d.setUniform1i("u_colorTexture",2),h.draw(),o.setBlendingEnabled(!0),o.setBlendFunction(_t.ONE,_t.ONE_MINUS_SRC_ALPHA),o.setStencilTestEnabled(!0),h.unbind()}_createOrResizeResources(t,i,e){const{context:s}=t;if(!this._layerFBOTexture||this._size[0]!==i||this._size[1]!==e){if(this._size[0]=i,this._size[1]=e,this._layerFBOTexture)this._layerFBOTexture.resize(i,e);else{const t=new $t;t.internalFormat=jt.RGBA,t.wrapMode=Mt.CLAMP_TO_EDGE,t.width=i,t.height=e,this._layerFBOTexture=new Gt(s,t)}this._quad||(this._quad=new et(s,[-1,-1,1,-1,-1,1,1,1]))}}}const oe=[1,0],ae=[0,1];class re{constructor(){this._layerFBOTexture=null,this._horizontalBlurFBO=null,this._verticalBlurFBO=null,this._size=[0,0],this._quad=null,this._programDesc={blur:{vsPath:"post-processing/pp",fsPath:"post-processing/blur/gaussianBlur",attributes:new Map([["a_position",0]])},composite:{vsPath:"post-processing/pp",fsPath:"post-processing/drop-shadow/composite",attributes:new Map([["a_position",0]])},blit:{vsPath:"post-processing/pp",fsPath:"post-processing/blit",attributes:new Map([["a_position",0]])}}}dispose(){this._layerFBOTexture=l(this._layerFBOTexture),this._horizontalBlurFBO=l(this._horizontalBlurFBO),this._verticalBlurFBO=l(this._verticalBlurFBO)}draw(t,i,e){const{context:s,state:n,painter:o}=t,{materialManager:a}=o,r=this._programDesc,l=i.width,h=i.height,c=[Math.round(l),Math.round(h)],{blurRadius:u,offsetX:d,offsetY:p,color:f}=e,m=[v(d),v(p)];this._createOrResizeResources(t,l,h,c);const _=this._horizontalBlurFBO,g=this._verticalBlurFBO;s.setStencilWriteMask(0),s.setStencilTestEnabled(!1),s.setDepthWriteEnabled(!1),s.setDepthTestEnabled(!1);const w=this._layerFBOTexture;i.copyToTexture(0,0,l,h,0,0,w),this._quad||(this._quad=new et(s,[-1,-1,1,-1,-1,1,1,1])),s.setViewport(0,0,c[0],c[1]);const y=this._quad;y.bind(),s.setBlendingEnabled(!1);const b=a.getProgram(r.blur,[{name:"radius",value:Math.ceil(u)}]);s.useProgram(b),s.bindFramebuffer(_),s.bindTexture(i.colorTexture,4),b.setUniform1i("u_colorTexture",4),b.setUniform2fv("u_texSize",c),b.setUniform2fv("u_direction",oe),b.setUniform1f("u_sigma",u),y.draw(),s.bindFramebuffer(g),s.bindTexture(_?.colorTexture,5),b.setUniform1i("u_colorTexture",5),b.setUniform2fv("u_direction",ae),y.draw(),s.bindFramebuffer(i),s.setViewport(0,0,l,h);const x=a.getProgram(r.composite);s.useProgram(x),s.bindTexture(g?.colorTexture,2),x.setUniform1i("u_blurTexture",2),s.bindTexture(w,3),x.setUniform1i("u_layerFBOTexture",3),x.setUniform4fv("u_shadowColor",[f[3]*(f[0]/255),f[3]*(f[1]/255),f[3]*(f[2]/255),f[3]]),x.setUniformMatrix3fv("u_displayViewMat3",n.displayMat3),x.setUniform2fv("u_shadowOffset",m),y.draw(),s.setBlendingEnabled(!0),s.setStencilTestEnabled(!0),s.setBlendFunction(_t.ONE,_t.ONE_MINUS_SRC_ALPHA),y.unbind()}_createOrResizeResources(t,i,e,s){const{context:n}=t;if(!this._horizontalBlurFBO||this._size[0]!==i||this._size[1]!==e){if(this._size[0]=i,this._size[1]=e,this._horizontalBlurFBO)this._horizontalBlurFBO.resize(s[0],s[1]);else{const t=new $t(s[0],s[1]);t.internalFormat=jt.RGBA,t.wrapMode=Mt.CLAMP_TO_EDGE,this._horizontalBlurFBO=new pt(n,t)}if(this._verticalBlurFBO)this._verticalBlurFBO.resize(s[0],s[1]);else{const t=new $t(s[0],s[1]);t.internalFormat=jt.RGBA,t.wrapMode=Mt.CLAMP_TO_EDGE,this._verticalBlurFBO=new pt(n,t)}if(this._layerFBOTexture)this._layerFBOTexture.resize(i,e);else{const t=new $t;t.internalFormat=jt.RGBA,t.wrapMode=Mt.CLAMP_TO_EDGE,t.width=i,t.height=e,this._layerFBOTexture=new Gt(n,t)}}}}class le{constructor(){this._size=[0,0],this._layerFBOTexture=null}dispose(){this._layerFBOTexture=l(this._layerFBOTexture)}draw(t,i,e){const{width:s,height:n}=i;this._createOrResizeResources(t,s,n);const{context:o,painter:a}=t,{amount:r}=e,l=o.gl,h=this._layerFBOTexture;o.bindFramebuffer(i),i.copyToTexture(0,0,s,n,0,0,h),o.setBlendingEnabled(!0),o.setStencilTestEnabled(!1),o.setDepthTestEnabled(!1),o.setClearColor(0,0,0,0),o.clear(l.COLOR_BUFFER_BIT),a.blitTexture(o,h,bt.NEAREST,r)}_createOrResizeResources(t,i,e){const{context:s}=t;if(!this._layerFBOTexture||this._size[0]!==i||this._size[1]!==e)if(this._size[0]=i,this._size[1]=e,this._layerFBOTexture)this._layerFBOTexture.resize(i,e);else{const t=new $t;t.internalFormat=jt.RGBA,t.wrapMode=Mt.CLAMP_TO_EDGE,t.samplingMode=bt.NEAREST,t.width=i,t.height=e,this._layerFBOTexture=new Gt(s,t)}}}function he(t){switch(t){case"bloom":case"blur":case"opacity":case"drop-shadow":return t;default:return"colorize"}}const ce={colorize:()=>new ne,blur:()=>new se,bloom:()=>new te,opacity:()=>new le,"drop-shadow":()=>new re};class ue{constructor(){this._effectMap=new Map}dispose(){this._effectMap.forEach((t=>t.dispose())),this._effectMap.clear()}getPostProcessingEffects(t){if(!t||0===t.length)return[];const i=[];for(const e of t){const t=he(e.type);let s=this._effectMap.get(t);s||(s=ce[t](),this._effectMap.set(t,s)),i.push({postProcessingEffect:s,effect:e})}return i}}class de{constructor(t,i){this.brushes=t,this.name=i.name,this.drawPhase=i.drawPhase||K.MAP,this._targetFn=i.target,this.effects=i.effects||[],this.enableDefaultDraw=i.enableDefaultDraw??(()=>!0),this.forceDrawByDisplayOrder=!!i.forceDrawByDisplayOrder}render(t){const{context:i,profiler:e}=t,s=this._targetFn(),n=this.drawPhase&t.drawPhase;if(e.recordPassStart(this.name),n){this.enableDefaultDraw()&&this._doRender(t,s),e.recordPassEnd();for(const e of this.effects){if(!e.enable())continue;const n=e.apply,o=e.args&&e.args(),a=i.getViewport(),r=i.getBoundFramebufferObject(),l=t.passOptions;this._bindEffect(t,n,o),this._doRender(t,s,n.defines),this._drawAndUnbindEffect(t,n,a,r,l,o)}}}_doRender(t,i,e){if(null==i)return;const{profiler:s,context:n}=t;if(this.forceDrawByDisplayOrder){for(const o of this.brushes){if(s.recordBrushStart(o.name),null!=o.brushEffect){const s=n.getViewport(),a=n.getBoundFramebufferObject(),r=t.passOptions;this._bindEffect(t,o.brushEffect),this._drawWithBrush(o,t,i,e),this._drawAndUnbindEffect(t,o.brushEffect,s,a,r)}else this._drawWithBrush(o,t,i,e);s.recordBrushEnd()}const o=i,a=t;a.attributeView.bindTextures(t.context);for(const t of o){if(!t.visible)continue;t.commit(a),a.context.setStencilFunction(yt.EQUAL,t.stencilRef,255);const i=t.getGeometry(Z.MARKER),s=t.getGeometry(Z.TEXT);if(null!=i&&i.records&&null!=s&&s.records){const n=new Map,o=i.records.getCursor();for(;o.next();)n.set(o.id,[o.getDrawInfo(i,Z.MARKER)]);const r=s.records.getCursor();for(;r.next();){const t=n.get(r.id),i=r.getDrawInfo(s,Z.TEXT);t?t.push(i):n.set(r.id,[i])}const l=Array.from(n.entries()).sort((([t,i],[e,s])=>e-t));for(const[i,s]of l)for(const i of s){const s=a.painter.getBrush(i.geometryType,tt.DEFAULT);s.prepareState(a,e),s.drawGeometry(a,t,i,e)}}else if(i){const s=a.painter.getBrush(Z.MARKER,tt.DEFAULT);s.prepareState(a,e),i.forEachCommand((i=>{s.drawGeometry(a,t,i,e)}))}else if(s){const i=a.painter.getBrush(Z.TEXT,tt.DEFAULT);i.prepareState(a,e),s.forEachCommand((s=>{i.drawGeometry(a,t,s,e)}))}}}else for(const o of this.brushes){if(s.recordBrushStart(o.name),null!=o.brushEffect){const s=n.getViewport(),a=n.getBoundFramebufferObject(),r=t.passOptions;this._bindEffect(t,o.brushEffect),this._drawWithBrush(o,t,i,e),this._drawAndUnbindEffect(t,o.brushEffect,s,a,r)}else this._drawWithBrush(o,t,i,e);s.recordBrushEnd()}}_drawWithBrush(t,i,e,s){g(e)?(t.prepareState(i,s),t.drawMany(i,e,s)):e.visible&&(t.prepareState(i,s),t.draw(i,e,s))}_bindEffect(t,i,e){const{profiler:s}=t;s.recordPassStart(this.name+"."+i.name),i.bind(t,e);const n=i.createOptions(t,e);t.passOptions=n}_drawAndUnbindEffect(t,i,e,s,n,o){const{profiler:a,context:r}=t;t.passOptions=n,a.recordBrushStart(i.name),i.draw(t,o),i.unbind(t,o),r.bindFramebuffer(s);const{x:l,y:h,width:c,height:u}=e;r.setViewport(l,h,c,u),a.recordBrushEnd(),a.recordPassEnd()}}function pe(t,i){switch(t){case Z.LINE:return nt.line;case Z.TEXT:return nt.text;case Z.LABEL:return nt.label;case Z.FILL:return i===tt.DOT_DENSITY?nt.dotDensity:nt.fill;case Z.MARKER:switch(i){case tt.HEATMAP:return nt.heatmap;case tt.PIE_CHART:return nt.pieChart;default:return nt.marker}}}class fe{constructor(t,i,e){this.context=t,this._blitRenderer=new zi,this._worldExtentClipRenderer=new Bi,this._isClippedToWorldExtent=!1,this._brushCache=new Map,this._lastWidth=null,this._lastHeight=null,this._prevFBO=null,this._vtlMaterialManager=new Ci,this._blendEffect=new W,this._stencilBuf=null,this._fbos=null,this._fboPool=[],this._renderTarget=null,this.effects={highlight:new Xi,hittest:new $i,hittestVTL:new Gi,integrate:new Li,insideEffect:new Wi("inside"),outsideEffect:new Wi("outside")},this.materialManager=new Oi(t),this.textureManager=new N(i,e,t.type===Lt.WEBGL2),this.textureUploadManager=new Ai(t,i),this._effectsManager=new ue}get vectorTilesMaterialManager(){return this._vtlMaterialManager}getRenderTarget(){return this._renderTarget}setRenderTarget(t){this._renderTarget=t}getFbos(t,i){if(t!==this._lastWidth||i!==this._lastHeight){if(this._lastWidth=t,this._lastHeight=i,this._fbos){let e;for(e in this._fbos)this._fbos[e].resize(t,i);return this._fbos}const e=new $t(t,i);e.samplingMode=bt.NEAREST,e.wrapMode=Mt.CLAMP_TO_EDGE;const s=new ft(Tt.DEPTH_STENCIL,t,i);this._stencilBuf=new mt(this.context,s),this._fbos={output:new pt(this.context,e,this._stencilBuf),blend:new pt(this.context,e,this._stencilBuf),effect0:new pt(this.context,e,this._stencilBuf)}}return this._fbos}acquireFbo(t,i){let e;if(this._fboPool.length>0)e=this._fboPool.pop();else{const s=new $t(t,i);s.samplingMode=bt.NEAREST,s.wrapMode=Mt.CLAMP_TO_EDGE,e=new pt(this.context,s,this._stencilBuf)}return e.width===t&&e.height===i||e.resize(t,i),e}releaseFbo(t){this._fboPool.push(t)}getSharedStencilBuffer(){return this._stencilBuf}beforeRenderLayers(t,i=null){const{width:e,height:s}=t.getViewport();this._prevFBO=t.getBoundFramebufferObject();const n=this.getFbos(e,s);if(t.bindFramebuffer(n?.output),t.setColorMask(!0,!0,!0,!0),null!=i){const{r:e,g:s,b:n,a:o}=i;t.setClearColor(o*e/255,o*s/255,o*n/255,o)}else t.setClearColor(0,0,0,0);t.setDepthWriteEnabled(!0),t.setClearDepth(1),t.clear(t.gl.COLOR_BUFFER_BIT|t.gl.DEPTH_BUFFER_BIT),t.setDepthWriteEnabled(!1)}beforeRenderLayer(t,i,e){const{context:s,blendMode:n,effects:o,requireFBO:a,drawPhase:r}=t;if(a||me(r,n,o,e))s.bindFramebuffer(this._fbos?.blend),s.setColorMask(!0,!0,!0,!0),s.setClearColor(0,0,0,0),s.setDepthWriteEnabled(!0),s.setClearDepth(1),s.clear(s.gl.COLOR_BUFFER_BIT|s.gl.DEPTH_BUFFER_BIT),s.setDepthWriteEnabled(!1);else{const t=this._getOutputFBO();s.bindFramebuffer(t)}s.setDepthWriteEnabled(!1),s.setDepthTestEnabled(!1),s.setStencilTestEnabled(!0),s.setClearStencil(i),s.setStencilWriteMask(255),s.clear(s.gl.STENCIL_BUFFER_BIT)}compositeLayer(t,i){const{context:e,blendMode:s,effects:n,requireFBO:o,drawPhase:a}=t;if(o||me(a,s,n,i)){null!=n&&n.length>0&&a===K.MAP&&this._applyEffects(t,n);const o=this._getOutputFBO();e.bindFramebuffer(o),e.setStencilTestEnabled(!1),e.setStencilWriteMask(0),e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(_t.ONE,_t.ONE_MINUS_SRC_ALPHA,_t.ONE,_t.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0);const r=null==s||a===K.HIGHLIGHT?"normal":s,l=this._fbos;l?.blend.colorTexture&&this._blendEffect.draw(t,l.blend.colorTexture,bt.NEAREST,r,i)}}renderLayers(t){t.bindFramebuffer(this._prevFBO);const i=this._getOutputFBO();i&&(t.setDepthTestEnabled(!1),t.setStencilWriteMask(0),this._isClippedToWorldExtent?(t.setStencilTestEnabled(!0),t.setStencilFunction(yt.EQUAL,1,255)):t.setStencilTestEnabled(!1),this.blitTexture(t,i.colorTexture,bt.NEAREST))}prepareDisplay(t,i,e){const{context:s}=t;if(s.bindFramebuffer(this._prevFBO),s.setColorMask(!0,!0,!0,!0),null!=i){const{r:t,g:e,b:n,a:o}=i;s.setClearColor(o*t/255,o*e/255,o*n/255,o)}else s.setClearColor(0,0,0,0);s.setStencilWriteMask(255),s.setClearStencil(0),s.clear(s.gl.COLOR_BUFFER_BIT|s.gl.STENCIL_BUFFER_BIT),this._isClippedToWorldExtent=this._worldExtentClipRenderer.render(t,e)}dispose(){if(this.materialManager.dispose(),this.textureManager.dispose(),this.textureUploadManager.destroy(),this._blitRenderer=l(this._blitRenderer),this._worldExtentClipRenderer=l(this._worldExtentClipRenderer),this._brushCache&&(this._brushCache.forEach((t=>t.dispose())),this._brushCache.clear(),this._brushCache=null),this._fbos){let t;for(t in this._fbos)this._fbos[t]&&this._fbos[t].dispose()}for(const t of this._fboPool)t.dispose();if(this._fboPool.length=0,this.effects){let t;for(t in this.effects)this.effects[t]&&this.effects[t].dispose()}this._effectsManager.dispose(),this._vtlMaterialManager=l(this._vtlMaterialManager),this._prevFBO=null}getBrush(t,i){const e=pe(t,i);let s=this._brushCache.get(e);return void 0===s&&(s=new e,this._brushCache.set(e,s)),s}renderObject(t,i,e,s){const n=nt[e];if(!n)return;let o=this._brushCache.get(n);void 0===o&&(o=new n,this._brushCache.set(n,o)),o.prepareState(t,s),o.draw(t,i,s)}renderObjects(t,i,e,s){const n=nt[e];if(!n)return;let o=this._brushCache.get(n);void 0===o&&(o=new n,this._brushCache.set(n,o)),o.drawMany(t,i,s)}registerRenderPass(t){const i=t.brushes.map((t=>(this._brushCache.has(t)||this._brushCache.set(t,new t),this._brushCache.get(t))));return new de(i,t)}blitTexture(t,i,e,s=1){t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(_t.ONE,_t.ONE_MINUS_SRC_ALPHA,_t.ONE,_t.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),this._blitRenderer.render(t,i,e,s)}getPostProcessingEffects(t){return this._effectsManager.getPostProcessingEffects(t)}_getOutputFBO(){return null!=this._renderTarget?this._renderTarget:this._fbos?.output??null}_applyEffects(t,i){const e=this._fbos?.blend;if(!e)return;const{context:s}=t,n=this._effectsManager.getPostProcessingEffects(i);for(const{postProcessingEffect:i,effect:o}of n)s.bindFramebuffer(e),i.draw(t,e,o)}}function me(t,i,e,s){return t!==K.HIGHLIGHT&&(1!==s||null!=i&&"normal"!==i||null!=e&&e.length>0)}const _e=2e3;class ve extends Y{constructor(t,i){super(),this._trash=new Set,this._renderRemainingTime=0,this._lastFrameRenderTime=0,this.renderRequested=!1,this.stage=this,this._stationary=!0;const{canvas:e=document.createElement("canvas"),alpha:s=!0,stencil:n=!0,contextOptions:o={}}=i;this._canvas=e;const a=Wt("2d",e,{alpha:s,antialias:!1,depth:!0,stencil:n});this.context=new Ct(a??null,o),this.resourceManager=new ri,this.painter=new fe(this.context,this,this.resourceManager),m("esri-2d-profiler")&&(this._debugOutput=document.createElement("div"),this._debugOutput.setAttribute("style","margin: 24px 64px; position: absolute; color: red;"),t.appendChild(this._debugOutput));const l=()=>this._highlightGradient;this._renderParameters={drawPhase:0,state:this.state,pixelRatio:window.devicePixelRatio,stationary:!1,globalOpacity:1,blendMode:null,deltaTime:-1,time:0,inFadeTransition:!1,effects:null,context:this.context,painter:this.painter,timeline:i.timeline||new Yt,renderingOptions:i.renderingOptions,requestRender:()=>this.requestRender(),allowDelayedRender:!1,requireFBO:!1,profiler:new q(this.context,this._debugOutput),dataUploadCounter:0,get highlightGradient(){return l()}},this._taskHandle=w({render:t=>this.renderFrame(t)}),this._taskHandle.pause(),this._lostWebGLContextHandle=b(e,"webglcontextlost",(t=>{this.emit("webgl-error",{error:new r("webgl-context-lost",t.statusMessage)})})),this._bufferPool=new Q,e.setAttribute("style","width: 100%; height:100%; display:block;"),t.appendChild(e)}destroy(){this.removeAllChildren(),this._emptyTrash(),this._taskHandle=x(this._taskHandle),this._lostWebGLContextHandle=x(this._lostWebGLContextHandle),this._canvas.parentNode?.removeChild(this._canvas),this._debugOutput?.parentNode?.removeChild(this._debugOutput),this._bufferPool.destroy(),this.resourceManager.destroy(),this.painter.dispose(),this.context.dispose(),this._canvas=null}get backgroundColor(){return this._backgroundColor}set backgroundColor(t){this._backgroundColor=t,this.requestRender()}get bufferPool(){return this._bufferPool}get renderingOptions(){return this._renderingOptions}set renderingOptions(t){this._renderingOptions=t,this.requestRender()}get state(){return this._state}set state(t){this._state=t,this.requestRender()}get stationary(){return this._stationary}set stationary(t){this._stationary!==t&&(this._stationary=t,this.requestRender())}trashDisplayObject(t){this._trash.add(t),this.requestRender()}untrashDisplayObject(t){return this._trash.delete(t)}requestRender(){this._renderRemainingTime=_e,this.renderRequested||(this.renderRequested=!0,this.emit("will-render"),this._taskHandle.resume())}renderFrame(t){const i=this._lastFrameRenderTime?t.time-this._lastFrameRenderTime:0;this._renderRemainingTime-=i,this._renderRemainingTime<=0&&this._taskHandle.pause(),this._lastFrameRenderTime=t.time,this.renderRequested=!1,this._renderParameters.state=this._state,this._renderParameters.stationary=this.stationary,this._renderParameters.pixelRatio=window.devicePixelRatio,this._renderParameters.globalOpacity=1,this._renderParameters.time=t.time,this._renderParameters.deltaTime=t.deltaTime,this._renderParameters.effects=null,this.processRender(this._renderParameters),this._emptyTrash(),this.emit("post-render")}_createTransforms(){return{dvs:F()}}renderChildren(t){for(const i of this.children)i.beforeRender(t);this._renderChildren(this.children,t);for(const i of this.children)i.afterRender(t)}_renderChildren(t,i){const e=this.context;this.painter.textureUploadManager.upload(),e.resetInfo(),i.profiler.recordStart("drawLayers"),i.dataUploadCounter=0,i.drawPhase=K.MAP,this.painter.beforeRenderLayers(e,this.backgroundColor);for(const e of t)e.processRender(i);this.painter.prepareDisplay(i,this.backgroundColor,this.state.padding),this.painter.renderLayers(e),i.drawPhase=K.HIGHLIGHT,this.painter.beforeRenderLayers(e);for(const e of t)e.processRender(i);this.painter.renderLayers(e);if(this._isLabelDrawPhaseRequired(t)){i.drawPhase=K.LABEL,this.painter.beforeRenderLayers(e);for(const e of t)e.processRender(i);this.painter.renderLayers(e)}if(m("esri-tiles-debug")){i.drawPhase=K.DEBUG,this.painter.beforeRenderLayers(e);for(const e of t)e.processRender(i);this.painter.renderLayers(e)}i.profiler.recordEnd("drawLayers"),e.logInfo()}doRender(t){const i=this.context,{state:e,pixelRatio:s}=t;this._resizeCanvas(t),i.setViewport(0,0,s*e.size[0],s*e.size[1]),i.setDepthWriteEnabled(!0),i.setStencilWriteMask(255),super.doRender(t)}async takeScreenshot(t){const i=Math.round(this.state.size[0]*t.resolutionScale),e=Math.round(this.state.size[1]*t.resolutionScale),s=t.resolutionScale,n=this.context,o=this._state.clone();if(null!=t.rotation){const i=o.viewpoint;o.viewpoint.rotation=t.rotation,o.viewpoint=i}const a={...this._renderParameters,drawPhase:null,globalOpacity:1,stationary:!0,state:o,pixelRatio:s,time:performance.now(),deltaTime:0,blendMode:null,effects:null,inFadeTransition:!1},r=ot(n.gl),l=new $t(i,e);l.wrapMode=Mt.CLAMP_TO_EDGE,l.internalFormat=r?Dt.RGBA8:jt.RGBA,l.isImmutable=r;const h=new pt(n,l,new ft(Tt.DEPTH_STENCIL,i,e)),c=n.getBoundFramebufferObject(),u=n.getViewport();n.bindFramebuffer(h),n.setViewport(0,0,i,e),this._renderChildren(t.children,a);const d=this._readbackScreenshot(h,{...t.cropArea,y:e-(t.cropArea.y+t.cropArea.height)});n.bindFramebuffer(c),n.setViewport(u.x,u.y,u.width,u.height),this.requestRender();const p=await d;let f;return 1===t.outputScale?f=p:(f=new ImageData(Math.round(p.width*t.outputScale),Math.round(p.height*t.outputScale)),Jt(p,f,!0)),h.dispose(),f}async _readbackScreenshot(t,i){const e=Qt(i.width,i.height,document.createElement("canvas"));return await t.readPixelsAsync(i.x,i.y,i.width,i.height,jt.RGBA,Pt.UNSIGNED_BYTE,new Uint8Array(e.data.buffer)),e}_resizeCanvas(t){const i=this._canvas,e=i.style,{state:{size:s},pixelRatio:n}=t,o=s[0],a=s[1],r=Math.round(o*n),l=Math.round(a*n);i.width===r&&i.height===l||(i.width=r,i.height=l),e.width=o+"px",e.height=a+"px"}_emptyTrash(){for(;this._trash.size>0;){const t=Array.from(this._trash);this._trash.clear();for(const i of t)i.processDetach()}}_isLabelDrawPhaseRequired(t){let i=!1;for(const e of t){if(!(e instanceof Y)){i=i||!1;break}if("hasLabels"in e&&e.hasLabels)return!0;i=i||this._isLabelDrawPhaseRequired(e.children)}return i}}async function ge(i){const e=import("./p-67f2b758.js"),s=import("./p-4a90c4b6.js"),n=Kt((await e).default,{signal:i}),o=Kt((await s).default,{signal:i}),a={mask:await n,overlay:await o};return t(i),a}class we extends J{constructor(){super(),this._handles=new M,this._resourcePixelRatio=1,this.visible=!1}destroy(){this._handles=T(this._handles),this._disposeRenderResources(),this._resourcesTask=j(this._resourcesTask)}get backgroundColor(){return this._backgroundColor}set backgroundColor(t){this._backgroundColor=t,this.requestRender()}get magnifier(){return this._magnifier}set magnifier(t){this._magnifier=t,this._handles.removeAll(),this._handles.add([P((()=>t.version),(()=>{this.visible=t.visible&&null!=t.position&&t.size>0,this.requestRender()}),D),P((()=>[t.maskUrl,t.overlayUrl]),(()=>this._reloadResources())),P((()=>t.size),(()=>{this._disposeRenderResources(),this.requestRender()}))])}_createTransforms(){return{dvs:F()}}doRender(t){const i=t.context;if(!this._resourcesTask)return void this._reloadResources();if(t.drawPhase!==K.MAP||!this._canRender())return;this._updateResources(t);const e=this._magnifier;if(null==e.position)return;const s=t.pixelRatio,n=e.size*s,o=1/e.factor,a=Math.ceil(o*n);this._readbackTexture.resize(a,a);const{size:r}=t.state,l=s*r[0],h=s*r[1],c=.5*a,u=.5*a,d=z(s*e.position.x,c,l-c-1),p=z(h-s*e.position.y,u,h-u-1);i.setBlendingEnabled(!0);const f=d-c,m=p-u,_=this._readbackTexture;i.bindTexture(_,0),i.gl.copyTexImage2D(_.descriptor.target,0,_.descriptor.pixelFormat,f,m,a,a,0);const v=this.backgroundColor,g=v?[v.a*v.r/255,v.a*v.g/255,v.a*v.b/255,v.a]:[1,1,1,1],w=(d+e.offset.x*s)/l*2-1,y=(p-e.offset.y*s)/h*2-1,b=n/l*2,x=n/h*2,M=this._program;i.bindVAO(this._vertexArrayObject),i.bindTexture(this._overlayTexture,6),i.bindTexture(this._maskTexture,7),i.useProgram(M),M.setUniform4fv("u_background",g),M.setUniform1i("u_readbackTexture",0),M.setUniform1i("u_overlayTexture",6),M.setUniform1i("u_maskTexture",7),M.setUniform4f("u_drawPos",w,y,b,x),M.setUniform1i("u_maskEnabled",e.maskEnabled?1:0),M.setUniform1i("u_overlayEnabled",e.overlayEnabled?1:0),i.setStencilTestEnabled(!1),i.setColorMask(!0,!0,!0,!0),i.drawArrays(vt.TRIANGLE_STRIP,0,4),i.bindVAO()}_canRender(){return this.mask&&this.overlay&&null!=this._magnifier}_reloadResources(){this._resourcesTask&&this._resourcesTask.abort();const t=null!=this._magnifier?this._magnifier.maskUrl:null,i=null!=this._magnifier?this._magnifier.overlayUrl:null;this._resourcesTask=R((async e=>{const s=null==t||null==i?ge(e):null,o=null!=t?n(t,{responseType:"image",signal:e}).then((t=>t.data)):s.then((t=>t.mask)),a=null!=i?n(i,{responseType:"image",signal:e}).then((t=>t.data)):s.then((t=>t.overlay)),[r,l]=await Promise.all([o,a]);this.mask=r,this.overlay=l,this._disposeRenderResources(),this.requestRender()}))}_disposeRenderResources(){this._readbackTexture=l(this._readbackTexture),this._overlayTexture=l(this._overlayTexture),this._maskTexture=l(this._maskTexture),this._vertexArrayObject=l(this._vertexArrayObject),this._program=l(this._program)}_updateResources(t){if(t.pixelRatio!==this._resourcePixelRatio&&this._disposeRenderResources(),this._readbackTexture)return;const i=t.context;this._resourcePixelRatio=t.pixelRatio;const e=Math.ceil(this._magnifier.size*t.pixelRatio);this._program=U(i);const s=new Uint16Array([0,1,0,0,1,1,1,0]),n=H.attributes;this._vertexArrayObject=new ut(i,n,at,{geometry:dt.createVertex(i,gt.STATIC_DRAW,s)}),this.overlay.width=e,this.overlay.height=e;const o=new $t;o.internalFormat=jt.RGBA,o.wrapMode=Mt.CLAMP_TO_EDGE,o.samplingMode=bt.NEAREST,o.flipped=!0,o.preMultiplyAlpha=!C(this.overlay.src)||!t.context.driverTest.svgPremultipliesAlpha.result,this._overlayTexture=new Gt(i,o,this.overlay),this.mask.width=e,this.mask.height=e,o.pixelFormat=o.internalFormat=jt.ALPHA,this._maskTexture=new Gt(i,o,this.mask);const a=1/this._magnifier.factor;o.pixelFormat=o.internalFormat=jt.RGBA,o.width=o.height=Math.ceil(a*e),o.samplingMode=bt.LINEAR,o.flipped=!1,this._readbackTexture=new Gt(i,o)}}export{we as MagnifierView2D,ve as Stage};
//# sourceMappingURL=p-cdd5ecf9.js.map