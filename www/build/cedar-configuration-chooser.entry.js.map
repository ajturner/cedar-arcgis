{"file":"cedar-configuration-chooser.entry.esm.js","mappings":";;AAAA,MAAM,4BAA4B,GAAG,sBAAsB;;MCQ9C,yBAAyB;;;;0BAEsC,EAAE;;EAG5E,MAAM,uBAAuB,CAAC,MAAM;IAClC,OAAO,CAAC,KAAK,CAAC,oDAAoD,EAAE;MAClE,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa;KACxC,CAAC,CAAA;IACF,OAAO,CAAC,KAAK,CAAC,oDAAoD,EAAE;MAElE,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG;KAClD,CAAC,CAAA;IAEF,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC;IAEzD,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAE,GAAG,CAAE,CAAC;IACpC,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;IAErC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;GACxC;EAKD,iBAAiB;IACf,IAAI,CAAC,cAAc,GAAG;MACpB;QACE,GAAG,EAAE,sBAAsB;QAC3B,IAAI,EAAE,aAAa;QACnB,IAAI,EAAE,SAAS;QACf,EAAE,EAAE,WAAW;QACf,MAAM,EAAE,OAAO;OAChB;MACD;QACE,GAAG,EAAE,gBAAgB;QACrB,IAAI,EAAE,KAAK;QACX,IAAI,EAAE,SAAS;QACf,EAAE,EAAE,KAAK;QACT,MAAM,EAAE,OAAO;OAChB,EAAC;QACA,GAAG,EAAE,iBAAiB;QACtB,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,SAAS;QACf,EAAE,EAAE,MAAM;QACV,MAAM,EAAE,OAAO;OAChB,EAAC;QACA,GAAG,EAAE,uBAAuB;QAC5B,IAAI,EAAE,eAAe;QACrB,IAAI,EAAE,SAAS;QACf,EAAE,EAAE,YAAY;QAChB,MAAM,EAAE,OAAO;OAChB;KACF,CAAA;GACF;EAID,MAAM;IACJ,QACE,EAAC,IAAI,QACH,eAAa,EACb,wBAAkB,GAAG,EAAE,CAAC,EAAE,OAAM,IAAI,CAAC,UAAU,GAAG,EAAE,CAAA,EAAC,EAAE,KAAK,EAAC,GAAG,sCAC5D,sBAAgB,IAAI,EAAC,SAAS,EAAC,KAAK,EAAC,GAAG,EAAC,IAAI,EAAC,SAAS,EAAC,UAAU,EAAC,cAAc,gBAAY,iBAAiB,oBAE7F,EACjB,gDAAuC,QAAQ,iBAAa,OAAO,IAClE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,MAAM;MAC9B,QAAQ,wCAAgC,MAAM,CAAC,EAAE,cAAY,MAAM,CAAC,GAAG,IAAG,MAAM,CAAC,IAAI,CAAyB,EAAC;KAChH,CAAC,CACuB,CACV,CACd,EACP;GACH;;;;;;","names":[],"sources":["./src/components/cedar-configuration-chooser/cedar-configuration-chooser.css?tag=cedar-configuration-chooser&encapsulation=shadow","./src/components/cedar-configuration-chooser/cedar-configuration-chooser.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n","import { Component, Event, EventEmitter, Host, Listen, Prop, h } from '@stencil/core';\nimport { ICedarFile } from '../../util/types';\n\n@Component({\n  tag: 'cedar-configuration-chooser',\n  styleUrl: 'cedar-configuration-chooser.css',\n  shadow: true,\n})\nexport class CedarConfigurationChooser {\n\n  @Prop({mutable: true, reflect: true}) configurations: Array<ICedarFile> = [];\n\n  @Listen('calciteDropdownSelect')\n  async calciteDropdownSelected(_event) {\n    console.debug(\"cedar-configuration-chooser: configurationSelected\", {\n      selected: this.dropdownEl.selectedItems\n    })\n    console.debug(\"cedar-configuration-chooser: configurationSelected\", {\n\n      url: this.dropdownEl.selectedItems[0].dataset.url\n    })\n\n    const url = this.dropdownEl.selectedItems[0].dataset.url;\n\n    const response = await fetch( url );\n    const config = await response.json();\n\n    this.configurationSelected.emit(config)\n  }\n\n  @Event() configurationSelected: EventEmitter<ICedarFile>;\n\n\n  componentWillLoad() {\n    this.configurations = [\n      {\n        url: \"/data/311_cedar.json\",\n        name: \"311 Dataset\",\n        type: \"dataset\",\n        id: \"311_cedar\",\n        format: \"cedar\"\n      },\n      {\n        url: \"/data/bar.json\",\n        name: \"Bar\",\n        type: \"dataset\",\n        id: \"Bar\",\n        format: \"cedar\"\n      },{\n        url: \"/data/line.json\",\n        name: \"Line\",\n        type: \"dataset\",\n        id: \"line\",\n        format: \"cedar\"\n      },{\n        url: \"/data/tree_cedar.json\",\n        name: \"Trees Dataset\",\n        type: \"dataset\",\n        id: \"tree_cedar\",\n        format: \"cedar\"\n      }\n    ]\n  }\n\n  private dropdownEl;\n\n  render() {\n    return (\n      <Host>\n        <slot></slot>\n        <calcite-dropdown ref={(el) => {this.dropdownEl = el}} width=\"m\" close-on-select-disabled>\n            <calcite-button slot=\"trigger\" scale=\"l\" kind=\"inverse\" appearance=\"outline-fill\" icon-start=\"classify-pixels\">\n                Chart Options\n            </calcite-button>\n            <calcite-dropdown-group selection-mode=\"single\" group-title=\"Basic\">\n            {this.configurations.map((config) => {\n              return (<calcite-dropdown-item data-id={config.id} data-url={config.url}>{config.name}</calcite-dropdown-item>)\n            })}\n            </calcite-dropdown-group>\n        </calcite-dropdown>\n      </Host>\n    );\n  }\n\n}\n"],"version":3}