import{c as t,b as i}from"./p-0fe6a545.js";import{n as s,e}from"./p-2def8198.js";import{h as n,fS as h,cW as r,b as o,bb as l,aX as a}from"./p-b54724b6.js";import{b as u,T as c,a as f,d as _}from"./p-49f0006c.js";import{R as d,T as p,N as v,S as g,I as A,O as m,V as b,F as E,A as x,E as w,C as R,D as B,L as S,G as F,U as T,P as C,Y as O,_ as M,n as y,i as G,e as P,X as D,M as I}from"./p-13e550f5.js";import{n as U}from"./p-541ec65c.js";import{t as L,W as X,s as N,M as W}from"./p-71f41146.js";import{o as H}from"./p-8e3fbd83.js";import{c as j,x as $,u as k}from"./p-1fd43aa6.js";import{t as V,f as z,T as q}from"./p-760b97ac.js";import{r as K}from"./p-791e5c7c.js";import{t as Q}from"./p-795f7c81.js";const Y=t=>{let i="";i+=t[0].toUpperCase();for(let s=1;s<t.length;s++){const e=t[s];e===e.toUpperCase()?(i+="_",i+=e):i+=e.toUpperCase()}return i},Z=t=>{const i={};for(const s in t){i[Y(s)]=t[s]}return s(i)},J=(i,s,e,n)=>{const h=i+i.substring(i.lastIndexOf("/")),r=s+s.substring(s.lastIndexOf("/")),o=Z(n);return{attributes:e,shaders:{vertexShader:o+t(`${h}.vert`),fragmentShader:o+t(`${r}.frag`)}}};class tt{constructor(){this.blend=!1,this.blendColor={r:0,g:0,b:0,a:0},this.blendFunction={srcRGB:d.ONE,dstRGB:d.ZERO,srcAlpha:d.ONE,dstAlpha:d.ZERO},this.blendEquation={mode:p.ADD,modeAlpha:p.ADD},this.colorMask={r:!0,g:!0,b:!0,a:!0},this.faceCulling=!1,this.cullFace=v.BACK,this.frontFace=g.CCW,this.scissorTest=!1,this.scissorRect={x:0,y:0,width:0,height:0},this.depthTest=!1,this.depthFunction=A.LESS,this.clearDepth=1,this.depthWrite=!0,this.depthRange={zNear:0,zFar:1},this.viewport=null,this.stencilTest=!1,this.polygonOffsetFill=!1,this.polygonOffset=[0,0],this.stencilFunction={face:v.FRONT_AND_BACK,func:A.ALWAYS,ref:0,mask:1},this.clearStencil=0,this.stencilWriteMask=1,this.stencilOperation={face:v.FRONT_AND_BACK,fail:m.KEEP,zFail:m.KEEP,zPass:m.KEEP},this.clearColor={r:0,g:0,b:0,a:0},this.program=null,this.vertexBuffer=null,this.indexBuffer=null,this.uniformBuffer=null,this.pixelPackBuffer=null,this.pixelUnpackBuffer=null,this.copyReadBuffer=null,this.copyWriteBuffer=null,this.uniformBufferBindingPoints=new Array,this.readFramebuffer=null,this.drawFramebuffer=null,this.renderbuffer=null,this.activeTexture=0,this.textureUnitMap=new Array,this.vertexArrayObject=null}}class it{constructor(t){this._allocations=new Map,t?Error.stackTraceLimit=1/0:(this.add=()=>{},this.remove=()=>{})}add(t){this._allocations.set(t,(new Error).stack)}remove(t){this._allocations.delete(t)}get information(){let t="";if(this._allocations.size>0){t+=`${this._allocations.size} live object allocations:\n`;const i=new Map;this._allocations.forEach((t=>{i.set(t,(i.get(t)??0)+1)})),i.forEach(((i,s)=>{const e=s.split("\n");e.shift(),e.shift(),t+=`${i}: ${e.shift()}\n`,e.forEach((i=>t+=`   ${i}\n`))}))}return t}}const st={RECORD_ALLOCATIONS:!1};class et{constructor(){for(this._current=new Array,this._max=new Array,this._allocations=new it(st.RECORD_ALLOCATIONS);this._current.length<b.COUNT;)this._current.push(0),this._max.push(0)}resetMax(){for(this._max.length=0;this._max.length<this._current.length;)this._max.push(0)}increment(t,i){const s=++this._current[t];this._max[t]=Math.max(s,this._max[t]),this._allocations.add(i)}decrement(t,i){--this._current[t],this._allocations.remove(i)}get max(){return this._max}get current(){return this._current}get total(){return this.current.reduce(((t,i)=>t+i),0)}get resourceInformation(){let t="";if(this.total>0){t+="Live objects:\n";for(let i=0;i<b.COUNT;++i){const s=this._current[i];s>0&&(t+=`${b[i]}: ${s}\n`)}}return t+=this._allocations.information,t}}class nt{constructor(t,s,e){const n=s.textureFilterAnisotropic,h=e.maxAnisotropy??1/0;this.versionString=t.getParameter(t.VERSION),this.maxVertexTextureImageUnits=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxVertexAttributes=t.getParameter(t.MAX_VERTEX_ATTRIBS),this.maxMaxAnisotropy=n?Math.min(t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY),h):1,this.maxTextureImageUnits=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=t.getParameter(t.MAX_TEXTURE_SIZE),this.maxRenderbufferSize=t.getParameter(t.MAX_RENDERBUFFER_SIZE),this.maxViewportDims=t.getParameter(t.MAX_VIEWPORT_DIMS),i(t)?(this.maxUniformBufferBindings=t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS),this.maxVertexUniformBlocks=t.getParameter(t.MAX_VERTEX_UNIFORM_BLOCKS),this.maxFragmentUniformBlocks=t.getParameter(t.MAX_FRAGMENT_UNIFORM_BLOCKS),this.maxUniformBlockSize=t.getParameter(t.MAX_UNIFORM_BLOCK_SIZE),this.uniformBufferOffsetAlignment=t.getParameter(t.UNIFORM_BUFFER_OFFSET_ALIGNMENT),this.maxArrayTextureLayers=t.getParameter(t.MAX_ARRAY_TEXTURE_LAYERS),this.maxSamples=t.getParameter(t.MAX_SAMPLES)):(this.maxUniformBufferBindings=0,this.maxVertexUniformBlocks=0,this.maxFragmentUniformBlocks=0,this.maxUniformBlockSize=0,this.uniformBufferOffsetAlignment=1,this.maxArrayTextureLayers=1,this.maxSamples=1)}}class ht{constructor(t){this._rctx=t,this._indexBuffer=this._createIndexbuffer(),this._program=this._createHelperProgram()}static getShaderSources(){return{vertex:"#version 300 es\n    precision highp float;\n\n    void main(void) {\n      gl_Position = vec4(0.0, 0.0, float(gl_VertexID)-2.0, 1.0);\n    }",fragment:"#version 300 es\n    precision highp float;\n\n    out vec4 fragColor;\n\n    void main(void) {\n      fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }"}}_createHelperProgram(){const t=ht.getShaderSources();return this._rctx.programCache.acquire(t.vertex,t.fragment,new Map([]))}_createIndexbuffer(){return j.createIndex(this._rctx,E.STATIC_DRAW,new Uint32Array([0]))}resetIndicesType(){this._program.compiled&&this._indexBuffer&&(this._rctx.bindVAO(null),this._rctx.useProgram(this._program),this._rctx.bindBuffer(this._indexBuffer,x.ELEMENT_ARRAY_BUFFER),this._rctx.drawElements(w.POINTS,1,R.UNSIGNED_INT,0))}dispose(){this._program.dispose(),this._indexBuffer.dispose()}}class rt extends V{constructor(t){super(),this._rctx=t,this._helperProgram=null,this._rctx.type===U.WEBGL2&&n("mac")&&n("chrome")&&(this._program=this._prepareProgram(),this._helperProgram=this._prepareHelperProgram())}dispose(){super.dispose(),this._helperProgram?.dispose(),this._helperProgram=null}_test(t){const i=this._rctx;i.resetState();const s=new u(1);s.wrapMode=B.CLAMP_TO_EDGE,s.samplingMode=S.NEAREST;const e=new $(i,s),n=j.createIndex(this._rctx,E.STATIC_DRAW,new Uint8Array([0]));i.bindFramebuffer(e),i.setViewport(0,0,1,1),i.useProgram(this._helperProgram),i.bindBuffer(n,x.ELEMENT_ARRAY_BUFFER),i.drawElements(w.POINTS,1,R.UNSIGNED_BYTE,0),i.useProgram(t),i.bindVAO(null),i.drawArrays(w.TRIANGLES,0,258);const h=new Uint8Array(4);return e.readPixels(0,0,1,1,F.RGBA,T.UNSIGNED_BYTE,h),e.dispose(),n.dispose(),255===h[0]}_prepareProgram(){const t=85,i=`#version 300 es\n    precision highp float;\n\n    out float triangleId;\n\n    const vec3 triangleVertices[3] = vec3[3](vec3(-0.5, -0.5, 0.0), vec3(0.5, -0.5, 0.0), vec3(0.0, 0.5, 0.0));\n\n    void main(void) {\n      triangleId = floor(float(gl_VertexID)/3.0);\n\n      vec3 position = triangleVertices[gl_VertexID % 3];\n      float offset = triangleId / ${H.float(t)};\n      position.z = 0.5 - offset;\n\n      gl_Position = vec4(position, 1.0);\n    }\n    `,s=`#version 300 es\n    precision highp float;\n\n    in float triangleId;\n\n    out vec4 fragColor;\n\n    void main(void) {\n      fragColor = triangleId == ${H.float(t)} ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);\n    }\n    `;return this._rctx.programCache.acquire(i,s,new Map([]))}_prepareHelperProgram(){const t=ht.getShaderSources();return this._rctx.programCache.acquire(t.vertex,t.fragment,new Map([]))}}class ot extends V{constructor(t){super(),this._rctx=t,this._program=lt(this._rctx,!1),this._obfuscated=lt(this._rctx,!0)}dispose(){super.dispose(),this._obfuscated=h(this._obfuscated)}_test(t){if(n("force-double-precision-obfuscation"))return!0;if(null==this._obfuscated)return!1;const i=this._runProgram(t),s=this._runProgram(this._obfuscated);return 0!==i&&(0===s||i/s>5)}_runProgram(t){const i=this._rctx;i.resetState();const s=new u(1);s.wrapMode=B.CLAMP_TO_EDGE,s.samplingMode=S.NEAREST;const e=new $(i,s),n=j.createVertex(i,E.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),h=new k(i,new Map([["position",0]]),{geometry:[new Q("position",2,R.UNSIGNED_SHORT,0,4)]},{geometry:n}),o=r(5633261.287538229,2626832.878767164,1434988.0495278358),l=r(5633271.46742708,2626873.6381334523,1434963.231608387),a=new Float32Array(6);L(o,a,3);const c=new Float32Array(6);L(l,c,3),i.useProgram(t),t.setUniform3f("u_highA",a[0],a[2],a[4]),t.setUniform3f("u_lowA",a[1],a[3],a[5]),t.setUniform3f("u_highB",c[0],c[2],c[4]),t.setUniform3f("u_lowB",c[1],c[3],c[5]),i.bindFramebuffer(e),i.setViewport(0,0,1,1),i.bindVAO(h),i.drawArrays(w.TRIANGLE_STRIP,0,4);const f=new Uint8Array(4);e.readPixels(0,0,1,1,F.RGBA,T.UNSIGNED_BYTE,f),h.dispose(),e.dispose();const _=(o[2]-l[2])/25,d=K(f);return Math.abs(_-d)}}function lt(t,i){const s=`\n\n  precision highp float;\n\n  attribute vec2 position;\n\n  uniform vec3 u_highA;\n  uniform vec3 u_lowA;\n  uniform vec3 u_highB;\n  uniform vec3 u_lowB;\n\n  varying vec4 v_color;\n\n  ${i?"#define DOUBLE_PRECISION_REQUIRES_OBFUSCATION":""}\n\n  #ifdef DOUBLE_PRECISION_REQUIRES_OBFUSCATION\n\n  vec3 dpPlusFrc(vec3 a, vec3 b) {\n    return mix(a, a + b, vec3(notEqual(b, vec3(0))));\n  }\n\n  vec3 dpMinusFrc(vec3 a, vec3 b) {\n    return mix(vec3(0), a - b, vec3(notEqual(a, b)));\n  }\n\n  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\n    vec3 t1 = dpPlusFrc(hiA, hiB);\n    vec3 e = dpMinusFrc(t1, hiA);\n    vec3 t2 = dpMinusFrc(hiB, e) + dpMinusFrc(hiA, dpMinusFrc(t1, e)) + loA + loB;\n    return t1 + t2;\n  }\n\n  #else\n\n  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\n    vec3 t1 = hiA + hiB;\n    vec3 e = t1 - hiA;\n    vec3 t2 = ((hiB - e) + (hiA - (t1 - e))) + loA + loB;\n    return t1 + t2;\n  }\n\n  #endif\n\n  const float MAX_RGBA_FLOAT =\n    255.0 / 256.0 +\n    255.0 / 256.0 / 256.0 +\n    255.0 / 256.0 / 256.0 / 256.0 +\n    255.0 / 256.0 / 256.0 / 256.0 / 256.0;\n\n  const vec4 FIXED_POINT_FACTORS = vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0);\n\n  vec4 float2rgba(const float value) {\n    // Make sure value is in the domain we can represent\n    float valueInValidDomain = clamp(value, 0.0, MAX_RGBA_FLOAT);\n\n    // Decompose value in 32bit fixed point parts represented as\n    // uint8 rgba components. Decomposition uses the fractional part after multiplying\n    // by a power of 256 (this removes the bits that are represented in the previous\n    // component) and then converts the fractional part to 8bits.\n    vec4 fixedPointU8 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS) * 256.0);\n\n    // Convert uint8 values (from 0 to 255) to floating point representation for\n    // the shader\n    const float toU8AsFloat = 1.0 / 255.0;\n\n    return fixedPointU8 * toU8AsFloat;\n  }\n\n  void main() {\n    vec3 val = dpAdd(u_highA, u_lowA, -u_highB, -u_lowB);\n\n    v_color = float2rgba(val.z / 25.0);\n\n    gl_Position = vec4(position * 2.0 - 1.0, 0.0, 1.0);\n  }\n  `,e="\n  precision highp float;\n\n  varying vec4 v_color;\n\n  void main() {\n    gl_FragColor = v_color;\n  }\n  ";return t.programCache.acquire(s,e,new Map([["position",0]]))}class at extends V{constructor(t){if(super(),this._rctx=t,!t.gl)return;if(t.type===U.WEBGL1)return void(this._result=!(!t.capabilities.textureFloat?.textureFloat||!t.capabilities.colorBufferFloat?.textureFloat));if(!(t.capabilities.textureFloat?.textureFloat&&t.capabilities.colorBufferFloat?.textureFloat&&t.capabilities.colorBufferFloat?.floatBlend))return;const i="\n    precision highp float;\n    attribute vec2 a_pos;\n\n    void main() {\n      gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n    }\n    ",s="\n     precision highp float;\n\n     void main() {\n      gl_FragColor = vec4(0.5, 0.5, 0.5, 0.5);\n     }\n    ";this._program=t.programCache.acquire(i,s,new Map([["a_pos",0]]))}_test(t){const i=this._rctx,s=new u(1);s.wrapMode=B.CLAMP_TO_EDGE,s.dataType=T.FLOAT,s.internalFormat=C.RGBA32F,s.samplingMode=S.NEAREST;const e=new $(i,s),n=j.createVertex(i,E.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),h=new k(i,new Map([["a_pos",0]]),{geometry:[new Q("a_pos",2,R.UNSIGNED_SHORT,0,4)]},{geometry:n});i.useProgram(t);const r=i.getBoundFramebufferObject(),{x:o,y:l,width:a,height:c}=i.getViewport();i.bindFramebuffer(e),i.setViewport(0,0,1,1),i.bindVAO(h),i.drawArrays(w.TRIANGLE_STRIP,0,4);const f=X({blending:N});i.setPipelineState(f),i.drawArrays(w.TRIANGLE_STRIP,0,4);const _=i.gl.getError();return i.setViewport(o,l,a,c),i.bindFramebuffer(r),h.dispose(),e.dispose(),1282!==_||(console.warn("Device claims support for WebGL extension EXT_float_blend but does not support it. Using fall back."),!1)}}class ut extends V{constructor(t){super(),this._rctx=t;const i="\n      precision highp float;\n      attribute vec2 a_pos;\n      uniform highp sampler2D u_texture;\n      varying vec4 v_color;\n\n      float getBit(in float bitset, in int bitIndex) {\n        float offset = pow(2.0, float(bitIndex));\n        return mod(floor(bitset / offset), 2.0);\n      }\n\n      void main() {\n        vec4 value = texture2D(u_texture, vec2(0.0));\n        float bit = getBit(value.x * 255.0, 1);\n\n        v_color = bit * vec4(1.0);\n        gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n      }\n      ",s="\n      precision highp float;\n      varying vec4 v_color;\n\n      void main() {\n        gl_FragColor = v_color;\n      }\n      ";this._program=t.programCache.acquire(i,s,new Map([["a_pos",0]]))}_test(t){const i=this._rctx,s=new u(1);s.wrapMode=B.CLAMP_TO_EDGE,s.samplingMode=S.NEAREST;const e=new $(i,s),n=new Uint8Array(4),h=j.createVertex(i,E.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),r=new k(i,new Map([["a_position",0]]),{geometry:[new Q("a_position",2,R.SHORT,0,4)]},{geometry:h});i.useProgram(t);const l=new c(i,s,new Uint8Array([2,255,0,0]));t.setUniform1i("u_texture",0),i.bindTexture(l,0);const a=i.getBoundFramebufferObject();i.bindFramebuffer(e),i.useProgram(t);const{x:f,y:_,width:d,height:p}=i.getViewport();i.setViewport(0,0,1,1),i.bindVAO(r),i.drawArrays(w.TRIANGLE_STRIP,0,4),i.setViewport(f,_,d,p),e.readPixels(0,0,1,1,F.RGBA,T.UNSIGNED_BYTE,n),r.dispose(),e.dispose();const v=255!==n[0]||255!==n[1]||255!==n[2]||255!==n[3];return v&&o.getLogger("esri.views.webgl.testSamplerPrecision").warn(`A problem was detected with your graphics driver. Your driver does not appear to honor sampler precision specifiers, which may result in rendering issues due to numerical instability. We recommend ensuring that your drivers have been updated to the latest version. Applying lowp sampler workaround. [${n[0]}.${n[1]}.${n[2]}.${n[3]}]`),i.bindFramebuffer(a),v}}class ct{constructor(t){this.rctx=t,this.floatBufferBlend=new at(t),this.svgPremultipliesAlpha=new z(t),this.doublePrecisionRequiresObfuscation=new ot(t),this.ignoresSamplerPrecision=new ut(t),this.drawArraysRequiresIndicesTypeReset=new rt(t)}dispose(){this.ignoresSamplerPrecision.dispose(),this.doublePrecisionRequiresObfuscation.dispose(),this.svgPremultipliesAlpha.dispose(),this.floatBufferBlend.dispose(),this.drawArraysRequiresIndicesTypeReset.dispose()}}function ft(t,s){if(s.disjointTimerQuery)return null;if(i(t))return{drawBuffers:t.drawBuffers.bind(t),MAX_DRAW_BUFFERS:t.MAX_DRAW_BUFFERS,MAX_COLOR_ATTACHMENTS:t.MAX_COLOR_ATTACHMENTS};if(s.drawBuffers)return null;const e=t.getExtension("WEBGL_draw_buffers");return e?{drawBuffers:e.drawBuffersWEBGL.bind(e),MAX_DRAW_BUFFERS:e.MAX_DRAW_BUFFERS_WEBGL,MAX_COLOR_ATTACHMENTS:e.MAX_COLOR_ATTACHMENTS_WEBGL}:null}function _t(t){if(i(t))return t;const s=t.getExtension("ANGLE_instanced_arrays");return s?{drawArraysInstanced:s.drawArraysInstancedANGLE.bind(s),drawElementsInstanced:s.drawElementsInstancedANGLE.bind(s),vertexAttribDivisor:s.vertexAttribDivisorANGLE.bind(s)}:null}function dt(t,i){if(i.compressedTextureETC)return null;const s=t.getExtension("WEBGL_compressed_texture_etc");return s?{COMPRESSED_R11_EAC:s.COMPRESSED_R11_EAC,COMPRESSED_SIGNED_R11_EAC:s.COMPRESSED_SIGNED_R11_EAC,COMPRESSED_RG11_EAC:s.COMPRESSED_RG11_EAC,COMPRESSED_SIGNED_RG11_EAC:s.COMPRESSED_SIGNED_RG11_EAC,COMPRESSED_RGB8_ETC2:s.COMPRESSED_RGB8_ETC2,COMPRESSED_SRGB8_ETC2:s.COMPRESSED_SRGB8_ETC2,COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:s.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:s.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_RGBA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC,COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC}:null}function pt(t,i){if(i.compressedTextureS3TC)return null;const s=t.getExtension("WEBGL_compressed_texture_s3tc");return s?{COMPRESSED_RGB_S3TC_DXT1:s.COMPRESSED_RGB_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT1:s.COMPRESSED_RGBA_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT3:s.COMPRESSED_RGBA_S3TC_DXT3_EXT,COMPRESSED_RGBA_S3TC_DXT5:s.COMPRESSED_RGBA_S3TC_DXT5_EXT}:null}function vt(t,s){if(i(t))return{MIN:t.MIN,MAX:t.MAX};if(s.blendMinMax)return null;{const i=t.getExtension("EXT_blend_minmax");return i?{MIN:i.MIN_EXT,MAX:i.MAX_EXT}:null}}function gt(t,i){if(i.textureFilterAnisotropic)return null;const s=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");return s?{MAX_TEXTURE_MAX_ANISOTROPY:s.MAX_TEXTURE_MAX_ANISOTROPY_EXT,TEXTURE_MAX_ANISOTROPY:s.TEXTURE_MAX_ANISOTROPY_EXT}:null}function At(t,s){if(i(t))return{textureFloat:!0,textureFloatLinear:!s.textureFloatLinear&&!!t.getExtension("OES_texture_float_linear"),textureHalfFloat:!0,textureHalfFloatLinear:!0,HALF_FLOAT:t.HALF_FLOAT,R16F:t.R16F,RG16F:t.RG16F,RGBA16F:t.RGBA16F,R32F:t.R32F,RG32F:t.RG32F,RGBA32F:t.RGBA32F,R11F_G11F_B10F:t.R11F_G11F_B10F,RGB16F:t.RGB16F};if(t instanceof WebGLRenderingContext){const i=!s.textureHalfFloat&&t.getExtension("OES_texture_half_float");return{textureFloat:!s.textureFloat&&!!t.getExtension("OES_texture_float"),textureFloatLinear:!s.textureFloatLinear&&!!t.getExtension("OES_texture_float_linear"),textureHalfFloat:!!i,textureHalfFloatLinear:!s.textureHalfFloatLinear&&!!t.getExtension("OES_texture_half_float_linear"),HALF_FLOAT:i?i.HALF_FLOAT_OES:void 0}}return null}function mt(t,s){if(i(t)){const i=!s.colorBufferHalfFloat&&t.getExtension("EXT_color_buffer_half_float")||!s.colorBufferFloat&&t.getExtension("EXT_color_buffer_float"),e=!s.colorBufferFloat&&t.getExtension("EXT_color_buffer_float"),n=!s.floatBlend&&!s.colorBufferFloat&&t.getExtension("EXT_float_blend");return i||e||n?{textureFloat:!!e,textureHalfFloat:!!i,floatBlend:!!n,R16F:t.R16F,RG16F:t.RG16F,RGBA16F:t.RGBA16F,R32F:t.R32F,RG32F:t.RG32F,RGBA32F:t.RGBA32F,R11F_G11F_B10F:t.R11F_G11F_B10F,RGB16F:t.RGB16F}:null}if(t instanceof WebGLRenderingContext){const i=!s.colorBufferHalfFloat&&t.getExtension("EXT_color_buffer_half_float"),e=!s.colorBufferFloat&&t.getExtension("WEBGL_color_buffer_float"),n=!s.floatBlend&&!s.colorBufferFloat&&t.getExtension("EXT_float_blend");return i||e||n?{textureFloat:!!e,textureHalfFloat:!!i,floatBlend:!!n,RGBA16F:i?i.RGBA16F_EXT:void 0,RGB16F:i?i.RGB16F_EXT:void 0,RGBA32F:e?e.RGBA32F_EXT:void 0}:null}return null}function bt(t,s,e,n,h){if(n&&i(t))return!0;if(s[e])return!1;for(const i of h)if(t.getExtension(i))return!0;return!1}function Et(t,s){if(!i(t))return null;if(s.textureNorm16)return null;const e=t.getExtension("EXT_texture_norm16");return e?{R16:e.R16_EXT,RG16:e.RG16_EXT,RGB16:e.RGB16_EXT,RGBA16:e.RGBA16_EXT,R16_SNORM:e.R16_SNORM_EXT,RG16_SNORM:e.RG16_SNORM_EXT,RGB16_SNORM:e.RGB16_SNORM_EXT,RGBA16_SNORM:e.RGBA16_SNORM_EXT}:null}function xt(t,i){const s=i.loseContext&&t.getExtension("WEBGL_lose_context");return s?{loseRenderingContext:()=>s.loseContext()}:null}function wt(t,s){if(i(t))return{createVertexArray:t.createVertexArray.bind(t),deleteVertexArray:t.deleteVertexArray.bind(t),bindVertexArray:t.bindVertexArray.bind(t)};if(s.vao)return null;const e=t.getExtension("OES_vertex_array_object")||t.getExtension("MOZ_OES_vertex_array_object")||t.getExtension("WEBKIT_OES_vertex_array_object");return e?{createVertexArray:e.createVertexArrayOES.bind(e),deleteVertexArray:e.deleteVertexArrayOES.bind(e),bindVertexArray:e.bindVertexArrayOES.bind(e)}:null}class Rt{constructor(t,i){this._gl=t,this._instancing=null,this._vertexArrayObject=null,this._compressedTextureETC=null,this._compressedTextureS3TC=null,this._textureFilterAnisotropic=null,this._textureFloat=null,this._colorBufferFloat=null,this._minMaxBlending=null,this._loseContext=null,this._drawBuffers=null,this._textureNorm16=null,this._depthTexture=null,this._textureFloatLinear=null,this._disabledExtensions=i.disabledExtensions||{},this._debugWebGLExtensions=i.debugWebGLExtensions||{}}get drawBuffers(){return this._drawBuffers||(this._drawBuffers=ft(this._gl,this._disabledExtensions)),this._drawBuffers}get instancing(){return this._instancing||(this._instancing=_t(this._gl)),this._instancing}get vao(){return this._vertexArrayObject||(this._vertexArrayObject=wt(this._gl,this._disabledExtensions)),this._vertexArrayObject}get compressedTextureETC(){return this._compressedTextureETC||(this._compressedTextureETC=dt(this._gl,this._disabledExtensions)),this._compressedTextureETC}get compressedTextureS3TC(){return this._compressedTextureS3TC||(this._compressedTextureS3TC=pt(this._gl,this._disabledExtensions)),this._compressedTextureS3TC}get textureFilterAnisotropic(){return this._textureFilterAnisotropic||(this._textureFilterAnisotropic=gt(this._gl,this._disabledExtensions)),this._textureFilterAnisotropic}get disjointTimerQuery(){return this._disjointTimerQuery||(this._disjointTimerQuery=q(this._gl,this._disabledExtensions)),this._disjointTimerQuery}get textureFloat(){return this._textureFloat||(this._textureFloat=At(this._gl,this._disabledExtensions)),this._textureFloat}get colorBufferFloat(){return this._colorBufferFloat||(this._colorBufferFloat=mt(this._gl,this._disabledExtensions)),this._colorBufferFloat}get blendMinMax(){return this._minMaxBlending||(this._minMaxBlending=vt(this._gl,this._disabledExtensions)),this._minMaxBlending}get depthTexture(){return null===this._depthTexture&&(this._depthTexture=bt(this._gl,this._disabledExtensions,"depthTexture",!0,["WEBGL_depth_texture","MOZ_WEBGL_depth_texture","WEBKIT_WEBGL_depth_texture"])),this._depthTexture}get loseContext(){return this._loseContext||(this._loseContext=xt(this._gl,this._debugWebGLExtensions)),this._loseContext}get textureNorm16(){return this._textureNorm16||(this._textureNorm16=Et(this._gl,this._disabledExtensions)),this._textureNorm16}get textureFloatLinear(){return null===this._textureFloatLinear&&(this._textureFloatLinear=bt(this._gl,this._disabledExtensions,"textureFloatLinear",!1,["OES_texture_float_linear"])),this._textureFloatLinear}enable(t){return this[t]}}let Bt=class{constructor(t,s){this.gl=t,this.instanceCounter=new et,this.programCache=new e(this),this._state=new tt,this._numOfDrawCalls=0,this._numOfTriangles=0,this.type=i(t)?U.WEBGL2:U.WEBGL1,this._loadExtensions(),this.configure(s)}get gl2(){return this.type===U.WEBGL1?null:this.gl}configure(t){this._capabilities=new Rt(this.gl,t),this._parameters=new nt(this.gl,this._capabilities,t),c.TEXTURE_UNIT_FOR_UPDATES=this._parameters.maxTextureImageUnits-1;const i=this.gl.getParameter(this.gl.VIEWPORT);this._state=new tt,this._state.viewport={x:i[0],y:i[1],width:i[2],height:i[3]},this._stateTracker=new W({setBlending:t=>{if(t){this.setBlendingEnabled(!0),this.setBlendEquationSeparate(t.opRgb,t.opAlpha),this.setBlendFunctionSeparate(t.srcRgb,t.dstRgb,t.srcAlpha,t.dstAlpha);const i=t.color;this.setBlendColor(i.r,i.g,i.b,i.a)}else this.setBlendingEnabled(!1)},setCulling:t=>{t?(this.setFaceCullingEnabled(!0),this.setCullFace(t.face),this.setFrontFace(t.mode)):this.setFaceCullingEnabled(!1)},setPolygonOffset:t=>{t?(this.setPolygonOffsetFillEnabled(!0),this.setPolygonOffset(t.factor,t.units)):this.setPolygonOffsetFillEnabled(!1)},setDepthTest:t=>{t?(this.setDepthTestEnabled(!0),this.setDepthFunction(t.func)):this.setDepthTestEnabled(!1)},setStencilTest:t=>{if(t){this.setStencilTestEnabled(!0);const i=t.function;this.setStencilFunction(i.func,i.ref,i.mask);const s=t.operation;this.setStencilOp(s.fail,s.zFail,s.zPass)}else this.setStencilTestEnabled(!1)},setDepthWrite:t=>{t?(this.setDepthWriteEnabled(!0),this.setDepthRange(t.zNear,t.zFar)):this.setDepthWriteEnabled(!1)},setColorWrite:t=>{t?this.setColorMask(t.r,t.g,t.b,t.a):this.setColorMask(!1,!1,!1,!1)},setStencilWrite:t=>{t?this.setStencilWriteMask(t.mask):this.setStencilWriteMask(0)}}),this.enforceState(),h(this._driverTest),this._driverTest=new ct(this)}dispose(){h(this._driverTest),this.programCache.dispose(),this.bindVAO(null),this.unbindBuffer(x.ARRAY_BUFFER),this.unbindBuffer(x.ELEMENT_ARRAY_BUFFER),this.type===U.WEBGL2&&(this.unbindBuffer(x.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(x.PIXEL_PACK_BUFFER),this.unbindBuffer(x.PIXEL_UNPACK_BUFFER),this.unbindBuffer(x.COPY_READ_BUFFER),this.unbindBuffer(x.COPY_WRITE_BUFFER)),this._state.textureUnitMap.length=0,f()&&console.log(this.instanceCounter.resourceInformation)}get driverTest(){return this._driverTest}get contextAttributes(){return this.gl.getContextAttributes()}get parameters(){return this._parameters}setPipelineState(t){this._stateTracker.setPipeline(t)}setBlendingEnabled(t){this._state.blend!==t&&(!0===t?this.gl.enable(this.gl.BLEND):this.gl.disable(this.gl.BLEND),this._state.blend=t,this._stateTracker.invalidateBlending())}externalProgramUpdate(){this._state.program?.stop(),this._state.program=null}externalTextureUnitUpdate(t,i){for(let i=0;i<t.length;++i)this._state.textureUnitMap[t[i]]=null;i>=0&&(this._state.activeTexture=i)}externalVertexArrayObjectUpdate(){const t=this.capabilities.vao;t&&(t.bindVertexArray(null),this._state.vertexArrayObject=null),this._state.vertexBuffer=null,this._state.indexBuffer=null}externalVertexBufferUpdate(){this._state.vertexBuffer=null}externalIndexBufferUpdate(){this._state.indexBuffer=null}setBlendColor(t,i,s,e){t===this._state.blendColor.r&&i===this._state.blendColor.g&&s===this._state.blendColor.b&&e===this._state.blendColor.a||(this.gl.blendColor(t,i,s,e),this._state.blendColor.r=t,this._state.blendColor.g=i,this._state.blendColor.b=s,this._state.blendColor.a=e,this._stateTracker.invalidateBlending())}setBlendFunction(t,i){t===this._state.blendFunction.srcRGB&&i===this._state.blendFunction.dstRGB||(this.gl.blendFunc(t,i),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=t,this._state.blendFunction.dstRGB=i,this._state.blendFunction.dstAlpha=i,this._stateTracker.invalidateBlending())}setBlendFunctionSeparate(t,i,s,e){this._state.blendFunction.srcRGB===t&&this._state.blendFunction.srcAlpha===s&&this._state.blendFunction.dstRGB===i&&this._state.blendFunction.dstAlpha===e||(this.gl.blendFuncSeparate(t,i,s,e),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=s,this._state.blendFunction.dstRGB=i,this._state.blendFunction.dstAlpha=e,this._stateTracker.invalidateBlending())}setBlendEquation(t){this._state.blendEquation.mode!==t&&(this.gl.blendEquation(t),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=t,this._stateTracker.invalidateBlending())}setBlendEquationSeparate(t,i){this._state.blendEquation.mode===t&&this._state.blendEquation.modeAlpha===i||(this.gl.blendEquationSeparate(t,i),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=i,this._stateTracker.invalidateBlending())}setColorMask(t,i,s,e){this._state.colorMask.r===t&&this._state.colorMask.g===i&&this._state.colorMask.b===s&&this._state.colorMask.a===e||(this.gl.colorMask(t,i,s,e),this._state.colorMask.r=t,this._state.colorMask.g=i,this._state.colorMask.b=s,this._state.colorMask.a=e,this._stateTracker.invalidateColorWrite())}setClearColor(t,i,s,e){this._state.clearColor.r===t&&this._state.clearColor.g===i&&this._state.clearColor.b===s&&this._state.clearColor.a===e||(this.gl.clearColor(t,i,s,e),this._state.clearColor.r=t,this._state.clearColor.g=i,this._state.clearColor.b=s,this._state.clearColor.a=e)}setFaceCullingEnabled(t){this._state.faceCulling!==t&&(!0===t?this.gl.enable(this.gl.CULL_FACE):this.gl.disable(this.gl.CULL_FACE),this._state.faceCulling=t,this._stateTracker.invalidateCulling())}setPolygonOffsetFillEnabled(t){this._state.polygonOffsetFill!==t&&(!0===t?this.gl.enable(this.gl.POLYGON_OFFSET_FILL):this.gl.disable(this.gl.POLYGON_OFFSET_FILL),this._state.polygonOffsetFill=t,this._stateTracker.invalidatePolygonOffset())}setPolygonOffset(t,i){this._state.polygonOffset[0]===t&&this._state.polygonOffset[1]===i||(this._state.polygonOffset[0]=t,this._state.polygonOffset[1]=i,this.gl.polygonOffset(t,i),this._stateTracker.invalidatePolygonOffset())}setCullFace(t){this._state.cullFace!==t&&(this.gl.cullFace(t),this._state.cullFace=t,this._stateTracker.invalidateCulling())}setFrontFace(t){this._state.frontFace!==t&&(this.gl.frontFace(t),this._state.frontFace=t,this._stateTracker.invalidateCulling())}setScissorTestEnabled(t){this._state.scissorTest!==t&&(!0===t?this.gl.enable(this.gl.SCISSOR_TEST):this.gl.disable(this.gl.SCISSOR_TEST),this._state.scissorTest=t)}setScissorRect(t,i,s,e){this._state.scissorRect.x===t&&this._state.scissorRect.y===i&&this._state.scissorRect.width===s&&this._state.scissorRect.height===e||(this.gl.scissor(t,i,s,e),this._state.scissorRect.x=t,this._state.scissorRect.y=i,this._state.scissorRect.width=s,this._state.scissorRect.height=e)}setDepthTestEnabled(t){this._state.depthTest!==t&&(!0===t?this.gl.enable(this.gl.DEPTH_TEST):this.gl.disable(this.gl.DEPTH_TEST),this._state.depthTest=t,this._stateTracker.invalidateDepthTest())}setClearDepth(t){this._state.clearDepth!==t&&(this.gl.clearDepth(t),this._state.clearDepth=t)}setDepthFunction(t){this._state.depthFunction!==t&&(this.gl.depthFunc(t),this._state.depthFunction=t,this._stateTracker.invalidateDepthTest())}setDepthWriteEnabled(t){this._state.depthWrite!==t&&(this.gl.depthMask(t),this._state.depthWrite=t,this._stateTracker.invalidateDepthWrite())}setDepthRange(t,i){this._state.depthRange.zNear===t&&this._state.depthRange.zFar===i||(this.gl.depthRange(t,i),this._state.depthRange.zNear=t,this._state.depthRange.zFar=i,this._stateTracker.invalidateDepthWrite())}setStencilTestEnabled(t){this._state.stencilTest!==t&&(!0===t?this.gl.enable(this.gl.STENCIL_TEST):this.gl.disable(this.gl.STENCIL_TEST),this._state.stencilTest=t,this._stateTracker.invalidateStencilTest())}setClearStencil(t){t!==this._state.clearStencil&&(this.gl.clearStencil(t),this._state.clearStencil=t)}setStencilFunction(t,i,s){this._state.stencilFunction.func===t&&this._state.stencilFunction.ref===i&&this._state.stencilFunction.mask===s||(this.gl.stencilFunc(t,i,s),this._state.stencilFunction.face=v.FRONT_AND_BACK,this._state.stencilFunction.func=t,this._state.stencilFunction.ref=i,this._state.stencilFunction.mask=s,this._stateTracker.invalidateStencilTest())}setStencilFunctionSeparate(t,i,s,e){this._state.stencilFunction.face===t&&this._state.stencilFunction.func===i&&this._state.stencilFunction.ref===s&&this._state.stencilFunction.mask===e||(this.gl.stencilFuncSeparate(t,i,s,e),this._state.stencilFunction.face=t,this._state.stencilFunction.func=i,this._state.stencilFunction.ref=s,this._state.stencilFunction.mask=e,this._stateTracker.invalidateStencilTest())}setStencilWriteMask(t){this._state.stencilWriteMask!==t&&(this.gl.stencilMask(t),this._state.stencilWriteMask=t,this._stateTracker.invalidateStencilWrite())}setStencilOp(t,i,s){this._state.stencilOperation.face===v.FRONT_AND_BACK&&this._state.stencilOperation.fail===t&&this._state.stencilOperation.zFail===i&&this._state.stencilOperation.zPass===s||(this.gl.stencilOp(t,i,s),this._state.stencilOperation.face=v.FRONT_AND_BACK,this._state.stencilOperation.fail=t,this._state.stencilOperation.zFail=i,this._state.stencilOperation.zPass=s,this._stateTracker.invalidateStencilTest())}setStencilOpSeparate(t,i,s,e){this._state.stencilOperation.face===t&&this._state.stencilOperation.fail===i&&this._state.stencilOperation.zFail===s&&this._state.stencilOperation.zPass===e||(this.gl.stencilOpSeparate(t,i,s,e),this._state.stencilOperation.face=t,this._state.stencilOperation.fail=i,this._state.stencilOperation.zFail=s,this._state.stencilOperation.zPass=e,this._stateTracker.invalidateStencilTest())}setActiveTexture(t,i=!1){const s=this._state.activeTexture;return t>=0&&(i||t!==this._state.activeTexture)&&(this.gl.activeTexture(O+t),this._state.activeTexture=t),s}clear(t){t&&this.gl.clear(t)}clearSafe(t,i=255){t&&(t&M.COLOR_BUFFER_BIT&&this.setColorMask(!0,!0,!0,!0),t&M.DEPTH_BUFFER_BIT&&this.setDepthWriteEnabled(!0),t&M.STENCIL_BUFFER_BIT&&this.setStencilWriteMask(i),this.gl.clear(t))}drawArrays(t,i,s){if(f()&&(this._numOfDrawCalls++,this._numOfTriangles+=Ft(t,s)),this.gl.drawArrays(t,i,s),f()){const t=_(this);t&&console.error("drawArrays:",t)}}drawElements(t,i,s,e){if(f()&&(this._numOfDrawCalls++,this._numOfTriangles+=Ft(t,i)),this.gl.drawElements(t,i,s,e),f()){const n=_(this);if(n){const h=this.getBoundVAO(),r=h?.indexBuffer,o=h?.vertexBuffers,l={indexBuffer:r,vertexBuffers:o},a={mode:t,count:i,type:s,offset:e},u=r?.size??0,c=e+i,f=u<c?`. Buffer is too small. Attempted to draw index ${c} of ${u}`:"";console.error(`drawElements: ${n}${f}`,{args:a,vao:l})}}}logInfo(){f()&&console.log(`DrawCalls: ${this._numOfDrawCalls}, Triangles: ${this._numOfTriangles}`)}resetInfo(){f()&&(this._numOfDrawCalls=0,this._numOfTriangles=0)}get capabilities(){return this._capabilities}setViewport(t,i,s,e){s=Math.max(Math.round(s),1),e=Math.max(Math.round(e),1);const n=this._state.viewport;n.x===t&&n.y===i&&n.width===s&&n.height===e||(n.x=t,n.y=i,n.width=s,n.height=e,this.gl.viewport(t,i,s,e))}getViewport(){const t=this._state.viewport;return{x:t.x,y:t.y,width:t.width,height:t.height}}useProgram(t){this._state.program!==t&&(this._state.program?.stop(),this._state.program=t,this.gl.useProgram(t?.glName??null))}bindTexture(t,i,s=!1){(i>=this.parameters.maxTextureImageUnits||i<0)&&console.error("Input texture unit is out of range of available units!");const e=this._state.textureUnitMap[i];return null==t||null==t.glName?(null!=e&&(this.setActiveTexture(i,s),this.gl.bindTexture(e.descriptor.target,null)),this._state.textureUnitMap[i]=null,e):s||e!==t?(this.setActiveTexture(i,s),this.gl.bindTexture(t.descriptor.target,t.glName),t.applyChanges(),this._state.textureUnitMap[i]=t,e):(t.isDirty&&(this.setActiveTexture(i,s),t.applyChanges()),e)}unbindTexture(t){if(null!=t)for(let i=0;i<this.parameters.maxTextureImageUnits;i++)this._state.textureUnitMap[i]===t&&(this.bindTexture(null,i),this._state.textureUnitMap[i]=null)}bindFramebuffer(t,i=!1){if(i||this._state.readFramebuffer!==t||this._state.drawFramebuffer!==t){if(null==t)return this.gl.bindFramebuffer(y.FRAMEBUFFER,null),this._state.readFramebuffer=null,void(this._state.drawFramebuffer=null);t.initializeAndBind(y.FRAMEBUFFER),this._state.readFramebuffer=t,this._state.drawFramebuffer=t}}bindFramebufferSeparate(t,i,s=!1){const e=i===y.READ_FRAMEBUFFER,n=e?this._state.readFramebuffer:this._state.drawFramebuffer;(s||n!==t)&&(null==t?this.gl.bindFramebuffer(i,null):t.initializeAndBind(i),e?this._state.readFramebuffer=t??null:this._state.drawFramebuffer=t??null)}blitFramebuffer(t,i,s=0,e=0,n=t.width,h=t.height,r=0,o=0,l=i.width,a=i.height,u=M.COLOR_BUFFER_BIT,c=S.NEAREST){this.bindFramebufferSeparate(t,y.READ_FRAMEBUFFER),this.bindFramebufferSeparate(i,y.DRAW_FRAMEBUFFER);this.gl.blitFramebuffer(s,e,n,h,r,o,l,a,u,c)}bindBuffer(t,i){if(t)switch(i??=t.bufferType,i){case x.ARRAY_BUFFER:this._state.vertexBuffer=St(this.gl,t,i,this._state.vertexBuffer);break;case x.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=St(this.gl,t,i,this._state.indexBuffer);break;case x.UNIFORM_BUFFER:this._state.uniformBuffer=St(this.gl,t,i,this._state.uniformBuffer);break;case x.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=St(this.gl,t,i,this._state.pixelPackBuffer);break;case x.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=St(this.gl,t,i,this._state.pixelUnpackBuffer);break;case x.COPY_READ_BUFFER:this._state.copyReadBuffer=St(this.gl,t,i,this._state.copyReadBuffer);break;case x.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=St(this.gl,t,i,this._state.copyWriteBuffer)}}bindRenderbuffer(t){const i=this.gl;t||(i.bindRenderbuffer(i.RENDERBUFFER,null),this._state.renderbuffer=null),this._state.renderbuffer!==t&&(i.bindRenderbuffer(i.RENDERBUFFER,t.glName),this._state.renderbuffer=t)}_getBufferBinding(t,i){if(i>=this.parameters.maxUniformBufferBindings||i<0)return console.error("Uniform buffer binding point is out of range!"),null;const s=this._state.uniformBufferBindingPoints;let e=s[i];return null==e&&(e={buffer:null,offset:0,size:0},s[i]=e),e}bindBufferBase(t,i,s){const e=this._getBufferBinding(t,i);if(null==e)return;if(e.buffer===s&&0===e.offset&&0===e.size)return;this.gl.bindBufferBase(t,i,s?s.glName:null),e.buffer=s,e.offset=0,e.size=0}bindBufferRange(t,i,s,e,n){const h=this._getBufferBinding(t,i);if(null==h)return;if(h.buffer===s&&h.offset===e&&h.size===n)return;if(e%this._parameters.uniformBufferOffsetAlignment!=0)return void console.error("Uniform buffer binding offset is not a multiple of the context offset alignment");this.gl.bindBufferRange(t,i,s.glName,e,n),h.buffer=s,h.offset=e,h.size=n}bindUBO(t,i,s,e){null!=i?(f()&&(e??i.byteLength)>this._parameters.maxUniformBlockSize&&console.error("Attempting to bind more data than the maximum uniform block size"),i.initialize(),void 0!==s&&void 0!==e?this.bindBufferRange(x.UNIFORM_BUFFER,t,i.buffer,s,e):this.bindBufferBase(x.UNIFORM_BUFFER,t,i.buffer)):this.bindBufferBase(x.UNIFORM_BUFFER,t,null)}unbindUBO(t){for(let i=0,s=this._state.uniformBufferBindingPoints.length;i<s;i++){const s=this._state.uniformBufferBindingPoints[i];null!=s&&s.buffer===t.buffer&&this.bindBufferBase(x.UNIFORM_BUFFER,i,null)}}unbindBuffer(t){switch(t){case x.ARRAY_BUFFER:this._state.vertexBuffer=St(this.gl,null,t,this._state.vertexBuffer);break;case x.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=St(this.gl,null,t,this._state.indexBuffer);break;case x.UNIFORM_BUFFER:this._state.uniformBuffer=St(this.gl,null,t,this._state.uniformBuffer);break;case x.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=St(this.gl,null,t,this._state.pixelPackBuffer);break;case x.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=St(this.gl,null,t,this._state.pixelUnpackBuffer);break;case x.COPY_READ_BUFFER:this._state.copyReadBuffer=St(this.gl,null,t,this._state.copyReadBuffer);break;case x.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=St(this.gl,null,t,this._state.copyWriteBuffer)}}bindVAO(t=null){null!=t?this._state.vertexArrayObject!==t&&(t.bind(),this._state.vertexArrayObject=t):this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null)}async clientWaitAsync(t=l(10)){const i=this.gl,s=i.fenceSync(G.SYNC_GPU_COMMANDS_COMPLETE,0);if(!s)throw new Error("Client wait failed, could not create sync object");let e;this.instanceCounter.increment(b.Sync,s),i.flush();do{await a(t),e=i.clientWaitSync(s,0,0)}while(e===P.TIMEOUT_EXPIRED);if(this.instanceCounter.decrement(b.Sync,s),i.deleteSync(s),e===P.WAIT_FAILED)throw new Error("Client wait failed")}getBoundFramebufferObject(t=y.FRAMEBUFFER){return t===y.READ_FRAMEBUFFER?this._state.readFramebuffer:this._state.drawFramebuffer}getBoundVAO(){return this._state.vertexArrayObject}resetState(){this.useProgram(null),this.bindVAO(null),this.bindFramebuffer(null,!0),this.unbindBuffer(x.ARRAY_BUFFER),this.unbindBuffer(x.ELEMENT_ARRAY_BUFFER),this.type===U.WEBGL2&&(this.unbindBuffer(x.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(x.PIXEL_PACK_BUFFER),this.unbindBuffer(x.PIXEL_UNPACK_BUFFER),this.unbindBuffer(x.COPY_READ_BUFFER),this.unbindBuffer(x.COPY_WRITE_BUFFER));for(let t=0;t<this.parameters.maxTextureImageUnits;++t)this.bindTexture(null,t);this.setBlendingEnabled(!1),this.setBlendFunction(d.ONE,d.ZERO),this.setBlendEquation(p.ADD),this.setBlendColor(0,0,0,0),this.setFaceCullingEnabled(!1),this.setCullFace(v.BACK),this.setFrontFace(g.CCW),this.setPolygonOffsetFillEnabled(!1),this.setPolygonOffset(0,0),this.setScissorTestEnabled(!1),this.setScissorRect(0,0,this.gl.canvas.width,this.gl.canvas.height),this.setDepthTestEnabled(!1),this.setDepthFunction(A.LESS),this.setDepthRange(0,1),this.setStencilTestEnabled(!1),this.setStencilFunction(A.ALWAYS,0,0),this.setStencilOp(m.KEEP,m.KEEP,m.KEEP),this.setClearColor(0,0,0,0),this.setClearDepth(1),this.setClearStencil(0),this.setColorMask(!0,!0,!0,!0),this.setStencilWriteMask(4294967295),this.setDepthWriteEnabled(!0),this.setViewport(0,0,this.gl.canvas.width,this.gl.canvas.height)}enforceState(){const t=this.capabilities.vao;t&&t.bindVertexArray(null);const{gl:i,gl2:s}=this;for(let t=0;t<this.parameters.maxVertexAttributes;t++)i.disableVertexAttribArray(t);if(this._state.vertexBuffer?i.bindBuffer(this._state.vertexBuffer.bufferType,this._state.vertexBuffer.glName):i.bindBuffer(x.ARRAY_BUFFER,null),this._state.indexBuffer?i.bindBuffer(this._state.indexBuffer.bufferType,this._state.indexBuffer.glName):i.bindBuffer(x.ELEMENT_ARRAY_BUFFER,null),null!=s){this._state.uniformBuffer?s.bindBuffer(this._state.uniformBuffer.bufferType,this._state.uniformBuffer.glName):s.bindBuffer(x.UNIFORM_BUFFER,null);for(let t=0;t<this._parameters.maxUniformBufferBindings;t++){const i=this._state.uniformBufferBindingPoints[t];if(null!=i){const{buffer:e,offset:n,size:h}=i;null!==e?0===n&&0===h?s.bindBufferBase(x.UNIFORM_BUFFER,t,e.glName):s.bindBufferRange(x.UNIFORM_BUFFER,t,e.glName,n,h):s.bindBufferBase(x.UNIFORM_BUFFER,t,null)}}this._state.pixelPackBuffer?s.bindBuffer(this._state.pixelPackBuffer.bufferType,this._state.pixelPackBuffer.glName):s.bindBuffer(x.PIXEL_PACK_BUFFER,null),this._state.pixelUnpackBuffer?s.bindBuffer(this._state.pixelUnpackBuffer.bufferType,this._state.pixelUnpackBuffer.glName):s.bindBuffer(x.PIXEL_UNPACK_BUFFER,null),this._state.copyReadBuffer?s.bindBuffer(this._state.copyReadBuffer.bufferType,this._state.copyReadBuffer.glName):s.bindBuffer(x.COPY_READ_BUFFER,null),this._state.copyWriteBuffer?s.bindBuffer(this._state.copyWriteBuffer.bufferType,this._state.copyWriteBuffer.glName):s.bindBuffer(x.COPY_WRITE_BUFFER,null),s.bindFramebuffer(y.READ_FRAMEBUFFER,null),s.readBuffer(s.BACK),this._state.readFramebuffer&&(s.bindFramebuffer(y.READ_FRAMEBUFFER,this._state.readFramebuffer.glName),s.readBuffer(D.COLOR_ATTACHMENT0)),s.bindFramebuffer(y.DRAW_FRAMEBUFFER,this._state.drawFramebuffer?.glName??null)}else this._state.readFramebuffer=this._state.drawFramebuffer,i.bindFramebuffer(y.FRAMEBUFFER,this._state.drawFramebuffer?.glName??null);if(t&&this._state.vertexArrayObject){const t=this._state.vertexArrayObject;this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null),this.bindVAO(t)}i.useProgram(this._state.program?.glName??null),i.blendColor(this._state.blendColor.r,this._state.blendColor.g,this._state.blendColor.b,this._state.blendColor.a),i.bindRenderbuffer(i.RENDERBUFFER,this._state.renderbuffer?this._state.renderbuffer.glName:null),!0===this._state.blend?i.enable(this.gl.BLEND):i.disable(this.gl.BLEND),i.blendEquationSeparate(this._state.blendEquation.mode,this._state.blendEquation.modeAlpha),i.blendFuncSeparate(this._state.blendFunction.srcRGB,this._state.blendFunction.dstRGB,this._state.blendFunction.srcAlpha,this._state.blendFunction.dstAlpha),i.clearColor(this._state.clearColor.r,this._state.clearColor.g,this._state.clearColor.b,this._state.clearColor.a),i.clearDepth(this._state.clearDepth),i.clearStencil(this._state.clearStencil),i.colorMask(this._state.colorMask.r,this._state.colorMask.g,this._state.colorMask.b,this._state.colorMask.a),i.cullFace(this._state.cullFace),i.depthFunc(this._state.depthFunction),i.depthRange(this._state.depthRange.zNear,this._state.depthRange.zFar),!0===this._state.depthTest?i.enable(i.DEPTH_TEST):i.disable(i.DEPTH_TEST),i.depthMask(this._state.depthWrite),i.frontFace(this._state.frontFace),i.lineWidth(1),!0===this._state.faceCulling?i.enable(i.CULL_FACE):i.disable(i.CULL_FACE),i.polygonOffset(this._state.polygonOffset[0],this._state.polygonOffset[1]),!0===this._state.polygonOffsetFill?i.enable(i.POLYGON_OFFSET_FILL):i.disable(i.POLYGON_OFFSET_FILL),i.scissor(this._state.scissorRect.x,this._state.scissorRect.y,this._state.scissorRect.width,this._state.scissorRect.height),!0===this._state.scissorTest?i.enable(i.SCISSOR_TEST):i.disable(i.SCISSOR_TEST),i.stencilFunc(this._state.stencilFunction.func,this._state.stencilFunction.ref,this._state.stencilFunction.mask),i.stencilOpSeparate(this._state.stencilOperation.face,this._state.stencilOperation.fail,this._state.stencilOperation.zFail,this._state.stencilOperation.zPass),!0===this._state.stencilTest?i.enable(i.STENCIL_TEST):i.disable(i.STENCIL_TEST),i.stencilMask(this._state.stencilWriteMask);for(let t=0;t<this.parameters.maxTextureImageUnits;t++){i.activeTexture(O+t),i.bindTexture(I.TEXTURE_2D,null),i.bindTexture(I.TEXTURE_CUBE_MAP,null),this.type===U.WEBGL2&&(i.bindTexture(I.TEXTURE_3D,null),i.bindTexture(I.TEXTURE_2D_ARRAY,null));const s=this._state.textureUnitMap[t];null!=s&&i.bindTexture(s.descriptor.target,s.glName)}i.activeTexture(O+this._state.activeTexture);const e=this._state.viewport;i.viewport(e.x,e.y,e.width,e.height),this.resetInfo()}_loadExtensions(){this.type===U.WEBGL1&&this.gl.getExtension("OES_element_index_uint"),this.gl.getExtension("KHR_parallel_shader_compile")}};function St(t,i,s,e){return i?e!==i&&t.bindBuffer(s,i.glName):t.bindBuffer(s,null),i}function Ft(t,i){switch(t){case w.POINTS:return 2*i;case w.TRIANGLES:return i/3;case w.TRIANGLE_STRIP:case w.TRIANGLE_FAN:return i-2;default:return 0}}export{Bt as P,J as o};
//# sourceMappingURL=p-c09e2cd9.js.map