import{hD as t,hE as e,e as o}from"./p-b54724b6.js";import{t as n}from"./p-b88ddb1e.js";import{l as r}from"./p-581eca80.js";import"./p-a5e3ec2a.js";import"./p-80be55a5.js";import"./p-8dc3148c.js";import"./p-ca5fb53c.js";import"./p-e6a64715.js";import"./p-dc29c329.js";function c(t){const e=t.toJSON();return e.attachmentTypes&&(e.attachmentTypes=e.attachmentTypes.join(",")),e.keywords&&(e.keywords=e.keywords.join(",")),e.globalIds&&(e.globalIds=e.globalIds.join(",")),e.objectIds&&(e.objectIds=e.objectIds.join(",")),e.size&&(e.size=e.size.join(",")),e}function s(o,n){const c={};for(const s of n){const{parentObjectId:n,parentGlobalId:a,attachmentInfos:p}=s;for(const s of p){const{id:p}=s,m=t(e(`${o.path}/${n}/attachments/${p}`)),f=r.fromJSON(s);f.set({url:m,parentObjectId:n,parentGlobalId:a}),c[n]?c[n].push(f):c[n]=[f]}}return c}function a(t,e,r){let s={query:n({...t.query,f:"json",...c(e)})};return r&&(s={...r,...s,query:{...r.query,...s.query}}),o(t.path+"/queryAttachments",s).then((t=>t.data.attachmentGroups))}async function p(t,e,n){const{objectIds:r}=e,c=[];for(const e of r)c.push(o(t.path+"/"+e+"/attachments",n));return Promise.all(c).then((t=>r.map(((e,o)=>({parentObjectId:e,attachmentInfos:t[o].data.attachmentInfos})))))}export{a as executeAttachmentQuery,p as fetchAttachments,s as processAttachmentQueryResult};
//# sourceMappingURL=p-0483db18.js.map