{"version":3,"names":["cedarConfigurationChooserCss","CedarConfigurationChooser","async","_event","console","debug","selected","this","dropdownEl","selectedItems","url","dataset","response","fetch","config","json","configurationSelected","emit","componentWillLoad","configurations","name","type","id","format","render","h","Host","ref","el","width","slot","scale","kind","appearance","map"],"sources":["./src/components/cedar-configuration-chooser/cedar-configuration-chooser.css?tag=cedar-configuration-chooser&encapsulation=shadow","./src/components/cedar-configuration-chooser/cedar-configuration-chooser.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n","import { Component, Event, EventEmitter, Host, Listen, Prop, h } from '@stencil/core';\nimport { ICedarFile } from '../../util/types';\n\n@Component({\n  tag: 'cedar-configuration-chooser',\n  styleUrl: 'cedar-configuration-chooser.css',\n  shadow: true,\n})\nexport class CedarConfigurationChooser {\n\n  @Prop({mutable: true, reflect: true}) configurations: Array<ICedarFile> = [];\n\n  @Listen('calciteDropdownSelect')\n  async calciteDropdownSelected(_event) {\n    console.debug(\"cedar-configuration-chooser: configurationSelected\", {\n      selected: this.dropdownEl.selectedItems\n    })\n    console.debug(\"cedar-configuration-chooser: configurationSelected\", {\n\n      url: this.dropdownEl.selectedItems[0].dataset.url\n    })\n\n    const url = this.dropdownEl.selectedItems[0].dataset.url;\n\n    const response = await fetch( url );\n    const config = await response.json();\n\n    this.configurationSelected.emit(config)\n  }\n\n  @Event() configurationSelected: EventEmitter<ICedarFile>;\n\n\n  componentWillLoad() {\n    this.configurations = [\n      {\n        url: \"/data/311_cedar.json\",\n        name: \"311 Dataset\",\n        type: \"dataset\",\n        id: \"311_cedar\",\n        format: \"cedar\"\n      },\n      {\n        url: \"/data/bar.json\",\n        name: \"Bar\",\n        type: \"dataset\",\n        id: \"Bar\",\n        format: \"cedar\"\n      },{\n        url: \"/data/line.json\",\n        name: \"Line\",\n        type: \"dataset\",\n        id: \"line\",\n        format: \"cedar\"\n      },{\n        url: \"/data/tree_cedar.json\",\n        name: \"Trees Dataset\",\n        type: \"dataset\",\n        id: \"tree_cedar\",\n        format: \"cedar\"\n      }\n    ]\n  }\n\n  private dropdownEl;\n\n  render() {\n    return (\n      <Host>\n        <slot></slot>\n        <calcite-dropdown ref={(el) => {this.dropdownEl = el}} width=\"m\" close-on-select-disabled>\n            <calcite-button slot=\"trigger\" scale=\"l\" kind=\"inverse\" appearance=\"outline-fill\" icon-start=\"classify-pixels\">\n                Chart Options\n            </calcite-button>\n            <calcite-dropdown-group selection-mode=\"single\" group-title=\"Basic\">\n            {this.configurations.map((config) => {\n              return (<calcite-dropdown-item data-id={config.id} data-url={config.url}>{config.name}</calcite-dropdown-item>)\n            })}\n            </calcite-dropdown-group>\n        </calcite-dropdown>\n      </Host>\n    );\n  }\n\n}\n"],"mappings":"yDAAA,MAAMA,EAA+B,uB,MCQxBC,EAAyB,M,0GAEsC,E,CAG1EC,8BAA8BC,GAC5BC,QAAQC,MAAM,qDAAsD,CAClEC,SAAUC,KAAKC,WAAWC,gBAE5BL,QAAQC,MAAM,qDAAsD,CAElEK,IAAKH,KAAKC,WAAWC,cAAc,GAAGE,QAAQD,MAGhD,MAAMA,EAAMH,KAAKC,WAAWC,cAAc,GAAGE,QAAQD,IAErD,MAAME,QAAiBC,MAAOH,GAC9B,MAAMI,QAAeF,EAASG,OAE9BR,KAAKS,sBAAsBC,KAAKH,E,CAMlCI,oBACEX,KAAKY,eAAiB,CACpB,CACET,IAAK,uBACLU,KAAM,cACNC,KAAM,UACNC,GAAI,YACJC,OAAQ,SAEV,CACEb,IAAK,iBACLU,KAAM,MACNC,KAAM,UACNC,GAAI,MACJC,OAAQ,SACR,CACAb,IAAK,kBACLU,KAAM,OACNC,KAAM,UACNC,GAAI,OACJC,OAAQ,SACR,CACAb,IAAK,wBACLU,KAAM,gBACNC,KAAM,UACNC,GAAI,aACJC,OAAQ,S,CAOdC,SACE,OACEC,EAACC,EAAI,KACHD,EAAA,aACAA,EAAA,oBAAkBE,IAAMC,IAAQrB,KAAKC,WAAaoB,CAAE,EAAGC,MAAM,IAAG,iCAC5DJ,EAAA,kBAAgBK,KAAK,UAAUC,MAAM,IAAIC,KAAK,UAAUC,WAAW,eAAc,aAAY,mBAAiB,iBAG9GR,EAAA,2CAAuC,SAAQ,cAAa,SAC3DlB,KAAKY,eAAee,KAAKpB,GAChBW,EAAA,mCAAgCX,EAAOQ,GAAE,WAAYR,EAAOJ,KAAMI,EAAOM,U"}