import{v as t,aQ as s,dJ as e,dr as r,s as i,aq as a,P as o,c as p}from"./p-98455486.js";import{r as h,s as n}from"./p-8399f9e1.js";import{m as c}from"./p-db9c2186.js";import{g as m,f as u}from"./p-073c3089.js";import{e as d}from"./p-c05df3c1.js";import{T as f,I as y}from"./p-a8d7d0e1.js";import{d as j}from"./p-9402bb46.js";import{H as l}from"./p-b7dc2733.js";import"./p-e6a64715.js";import"./p-dc29c329.js";import"./p-c73bdcee.js";import"./p-fe526e38.js";import"./p-9a4094ba.js";import"./p-9f1a0adc.js";import"./p-f63bd4b0.js";import"./p-14843b2a.js";import"./p-ffb89da5.js";import"./p-c6ce33a2.js";import"./p-0ea2a103.js";import"./p-623dbe5e.js";import"./p-1b4a7439.js";import"./p-0d2202fd.js";import"./p-f33b44a5.js";import"./p-f4b056c3.js";import"./p-d5b10b16.js";class w{constructor(){this._queryEngine=null,this._customParameters=null,this._snapshotFeatures=async r=>{const{objectIdField:i}=this._queryEngine,a=await l(this._getFeatureUrl??"",this._featureType.typeName,this._getFeatureOutputFormat,{customParameters:this._customParameters,dateFields:this._queryEngine.fieldsIndex.dateFields.map((t=>t.name)),signal:r});await f(a),t(r);const o=y(a,{geometryType:this._queryEngine.geometryType,hasZ:!1,objectIdField:i});if(!s(this._queryEngine.spatialReference,e))for(const t of o)null!=t.geometry&&(t.geometry=h(m(n(t.geometry,this._queryEngine.geometryType,!1,!1),e,this._queryEngine.spatialReference)));let p=1;for(const t of o){const s={};j(this._fieldsIndex,s,t.attributes,!0),t.attributes=s,null==t.attributes[i]&&(t.objectId=t.attributes[i]=p++)}return o}}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(s,e){const{getFeatureUrl:i,getFeatureOutputFormat:a,spatialReference:o,fields:p,geometryType:h,featureType:n,objectIdField:m,customParameters:u}=s;this._featureType=n,this._customParameters=u,this._getFeatureUrl=i,this._getFeatureOutputFormat=a,this._fieldsIndex=new r(p),await this._checkProjection(o),t(e),this._queryEngine=new d({fields:p,geometryType:h,hasM:!1,hasZ:!1,objectIdField:m,spatialReference:o,timeInfo:null,featureStore:new c({geometryType:h,hasM:!1,hasZ:!1})});const f=await this._snapshotFeatures(e.signal);return this._queryEngine.featureStore.addMany(f),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new i("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},s={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,s.signal)}async queryFeatureCount(t={},s={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,s.signal)}async queryObjectIds(t={},s={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(t,s.signal)}async queryExtent(t={},s={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,s.signal)}async querySnapping(t,s={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(t,s.signal)}async refresh(t){return this._customParameters=t,this._snapshotTask?.abort(),this._snapshotTask=a(this._snapshotFeatures),this._snapshotTask.promise.then((t=>{this._queryEngine.featureStore.clear(),t&&this._queryEngine.featureStore.addMany(t)}),(t=>{this._queryEngine.featureStore.clear(),o(t)||p.getLogger("esri.layers.WFSLayer").error(new i("wfs-layer:getfeature-error","An error occurred during the GetFeature request",{error:t}))})),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _checkProjection(t){try{await u(e,t)}catch{throw new i("unsupported-projection","Projection not supported",{spatialReference:t})}}}export default w;
//# sourceMappingURL=p-85ce00b9.js.map