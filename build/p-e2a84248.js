import{k as i,l as s,c7 as t,n as p,V as r,ac as e,aV as a,Q as o}from"./p-98455486.js";import{r as m}from"./p-057ad745.js";import{d as h,f as j}from"./p-f7917469.js";import"./p-ed1a11ab.js";import"./p-07f12c16.js";import"./p-1abe3c64.js";import"./p-908b7a05.js";import"./p-7099a764.js";import"./p-0c70c0e2.js";import"./p-13e550f5.js";import"./p-795f7c81.js";import"./p-7dc0ec82.js";import"./p-0e94eaa4.js";import"./p-620ed352.js";import"./p-9f1a0adc.js";import"./p-220b11a0.js";import"./p-4f76b2d1.js";import"./p-2d1dac84.js";import"./p-42c332a2.js";import"./p-5572f01a.js";import"./p-38e70926.js";import"./p-3a9bb31c.js";import"./p-783b6965.js";import"./p-8399f9e1.js";import"./p-e6a64715.js";import"./p-dc29c329.js";import"./p-d46be2b1.js";import"./p-fc9cd10b.js";import"./p-4f27d9ab.js";import"./p-ecc7ed03.js";import"./p-c5929b55.js";import"./p-8043ab9b.js";import"./p-4cbc7b66.js";import"./p-f5452a6b.js";import"./p-8b2bb530.js";import"./p-9a4094ba.js";import"./p-a9fef357.js";import"./p-0d2202fd.js";import"./p-f33b44a5.js";import"./p-e91d9d8d.js";import"./p-e22a21a4.js";import"./p-958a5da8.js";import"./p-fcbd27c0.js";import"./p-5abe9c67.js";import"./p-66f65b6a.js";import"./p-14843b2a.js";import"./p-ffb89da5.js";import"./p-dfd7ee02.js";import"./p-da8336be.js";import"./p-1172b129.js";import"./p-0fdabe4a.js";import"./p-9803a24d.js";import"./p-b15bfa44.js";import"./p-baa730bb.js";import"./p-e1758a64.js";import"./p-ec443a8b.js";import"./p-f4b056c3.js";import"./p-6133cc0f.js";import"./p-e75aa2b5.js";import"./p-f5f26b1f.js";import"./p-b8afab55.js";import"./p-c782b111.js";let b=class extends h{constructor(i){super(i),this.type="group",this.layerViews=new r}destroy(){this.handles.removeAll(),this.layerViews.length=0}_allLayerViewVisibility(i){this.layerViews.forEach((s=>{s.visible=i}))}initialize(){this.handles.add([this.layerViews.on("change",(i=>this._layerViewsChangeHandler(i))),e((()=>this.layer?.visibilityMode),(()=>{this.layer&&this._applyVisibility((()=>this._allLayerViewVisibility(this.visible)),(()=>this._applyExclusiveVisibility(null)))}),a),e((()=>this.visible),(i=>{this._applyVisibility((()=>this._allLayerViewVisibility(i)),(()=>{}))}),a)],"grouplayerview"),this._layerViewsChangeHandler({target:null,added:this.layerViews.toArray(),removed:[],moved:[]})}set layerViews(i){this._set("layerViews",o(i,this._get("layerViews")))}get updatingProgress(){return 0===this.layerViews.length?1:this.layerViews.reduce(((i,s)=>i+s.updatingProgress),0)/this.layerViews.length}isUpdating(){return this.layerViews.some((i=>i.updating))}_hasLayerViewVisibleOverrides(){return this.layerViews.some((i=>i._isOverridden("visible")))}_findLayerViewForLayer(i){return i&&this.layerViews.find((s=>s.layer===i))}_firstVisibleOnLayerOrder(){const i=this.layer.layers.find((i=>{const s=this._findLayerViewForLayer(i);return!!s?.visible}));return i&&this._findLayerViewForLayer(i)}_applyExclusiveVisibility(i){null==i&&null==(i=this._firstVisibleOnLayerOrder())&&this.layerViews.length>0&&(i=this._findLayerViewForLayer(this.layer.layers.at(0))),this.layerViews.forEach((s=>{s.visible=s===i}))}_layerViewsChangeHandler(i){this.handles.remove("grouplayerview:visible"),this.handles.add(this.layerViews.map((i=>e((()=>i.visible),(s=>this._applyVisibility((()=>{s!==this.visible&&(i.visible=this.visible)}),(()=>this._applyExclusiveVisibility(s?i:null)))),a))).toArray(),"grouplayerview:visible");const s=i.added[i.added.length-1];this._applyVisibility((()=>this._allLayerViewVisibility(this.visible)),(()=>this._applyExclusiveVisibility(s?.visible?s:null)))}_applyVisibility(i,s){this._hasLayerViewVisibleOverrides()&&("inherited"===this.layer?.visibilityMode?i():"exclusive"===this.layer?.visibilityMode&&s())}};i([s({cast:t})],b.prototype,"layerViews",null),i([s({readOnly:!0})],b.prototype,"updatingProgress",null),i([s()],b.prototype,"view",void 0),b=i([p("esri.views.layers.GroupLayerView")],b);const d=b;let l=class extends(j(d)){constructor(){super(...arguments),this.container=new m}attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",(()=>this._updateStageChildren())))}detach(){this.container.removeAllChildren()}update(i){}moveStart(){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach(((i,s)=>this.container.addChildAt(i.container,s)))}};l=i([p("esri.views.2d.layers.GroupLayerView2D")],l);const c=l;export default c;
//# sourceMappingURL=p-e2a84248.js.map