import{k as t,l as e,he as i,n as p,ae as s,s as r,P as a,c as o,ac as m,aS as h}from"./p-98455486.js";import{a as n}from"./p-ca3c9a87.js";import{f as j,d as c}from"./p-f7917469.js";import{v as d}from"./p-659e0d38.js";import{a as f}from"./p-4c46e2fb.js";import{l as b}from"./p-e241954f.js";import"./p-ed1a11ab.js";import"./p-07f12c16.js";import"./p-1abe3c64.js";import"./p-908b7a05.js";import"./p-7099a764.js";import"./p-0c70c0e2.js";import"./p-13e550f5.js";import"./p-795f7c81.js";import"./p-7dc0ec82.js";import"./p-0e94eaa4.js";import"./p-620ed352.js";import"./p-9f1a0adc.js";import"./p-220b11a0.js";import"./p-4f76b2d1.js";import"./p-2d1dac84.js";import"./p-42c332a2.js";import"./p-5572f01a.js";import"./p-38e70926.js";import"./p-3a9bb31c.js";import"./p-783b6965.js";import"./p-8399f9e1.js";import"./p-e6a64715.js";import"./p-dc29c329.js";import"./p-d46be2b1.js";import"./p-fc9cd10b.js";import"./p-4f27d9ab.js";import"./p-ecc7ed03.js";import"./p-c5929b55.js";import"./p-8043ab9b.js";import"./p-4cbc7b66.js";import"./p-f5452a6b.js";import"./p-8b2bb530.js";import"./p-9a4094ba.js";import"./p-a9fef357.js";import"./p-0d2202fd.js";import"./p-f33b44a5.js";import"./p-e91d9d8d.js";import"./p-e22a21a4.js";import"./p-958a5da8.js";import"./p-fcbd27c0.js";import"./p-5abe9c67.js";import"./p-66f65b6a.js";import"./p-14843b2a.js";import"./p-ffb89da5.js";import"./p-dfd7ee02.js";import"./p-da8336be.js";import"./p-1172b129.js";import"./p-0fdabe4a.js";import"./p-9803a24d.js";import"./p-b15bfa44.js";import"./p-baa730bb.js";import"./p-e1758a64.js";import"./p-ec443a8b.js";import"./p-f4b056c3.js";import"./p-6133cc0f.js";import"./p-e75aa2b5.js";import"./p-f5f26b1f.js";import"./p-b8afab55.js";import"./p-c782b111.js";import"./p-fde2045e.js";const u=a=>{let o=class extends a{initialize(){this.exportImageParameters=new b({layer:this.layer})}destroy(){this.exportImageParameters=s(this.exportImageParameters)}get exportImageVersion(){return this.exportImageParameters?.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}fetchPopupFeatures(t){const{layer:e}=this;if(!t)return Promise.reject(new r("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:e}));const{popupEnabled:i}=e;if(!i)return Promise.reject(new r("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:i}));const p=this.createFetchPopupFeaturesQuery(t);if(!p)return Promise.resolve([]);const{extent:s,width:a,height:o,x:m,y:h}=p;if(!(s&&a&&o))throw new r("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:s,width:a,height:o});return e.fetchFeatureInfo(s,a,o,m,h)}};return t([e()],o.prototype,"exportImageParameters",void 0),t([e({readOnly:!0})],o.prototype,"exportImageVersion",null),t([e()],o.prototype,"layer",void 0),t([e(i)],o.prototype,"timeExtent",void 0),o=t([p("esri.layers.mixins.WMSLayerView")],o),o};let l=class extends(u(f(j(c)))){constructor(){super(...arguments),this.bitmapContainer=new n}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}update(t){this.strategy.update(t).catch((t=>{a(t)||o.getLogger(this).error(t)}))}attach(){const{layer:t}=this,{imageMaxHeight:e,imageMaxWidth:i}=t;this.bitmapContainer=new n,this.container.addChild(this.bitmapContainer),this.strategy=new d({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:e,imageMaxWidth:i,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(m((()=>this.exportImageVersion),(()=>this.requestUpdate())))}detach(){this.strategy=s(this.strategy),this.container.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(t){const{view:e,bitmapContainer:i}=this,{x:p,y:s}=t,{spatialReference:r}=e;let a,o=0,m=0;if(i.children.some((t=>{const{width:e,height:i,resolution:n,x:j,y:c}=t,d=j+n*e,f=c-n*i;return p>=j&&p<=d&&s<=c&&s>=f&&(a=new h({xmin:j,ymin:f,xmax:d,ymax:c,spatialReference:r}),o=e,m=i,!0)})),!a)return null;const n=a.width/o,j=Math.round((p-a.xmin)/n),c=Math.round((a.ymax-s)/n);return{extent:a,width:o,height:m,x:j,y:c}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,i,p){return this.layer.fetchImageBitmap(t,e,i,{timeExtent:this.timeExtent,...p})}};t([e()],l.prototype,"strategy",void 0),t([e()],l.prototype,"updating",void 0),l=t([p("esri.views.2d.layers.WMSLayerView2D")],l);const x=l;export default x;
//# sourceMappingURL=p-3d46c3bd.js.map