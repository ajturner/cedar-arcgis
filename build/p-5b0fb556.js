import{hG as e,hH as t,bS as r,k as l,l as n,f1 as i,n as a,r as o,h2 as s,ik as y,h5 as u,j0 as p,d3 as d,d4 as c,d5 as m,aT as f,V as h,bk as b,T as g,d_ as w,j1 as S,hw as v,j2 as O,aS as L,e$ as T,L as x,s as N,cJ as C,b7 as M,a7 as j,U as I,j3 as J,aQ as E,aI as G,aH as P,aK as k,aJ as B}from"./p-98455486.js";import{b as D}from"./p-14843b2a.js";import{i as F,p as R}from"./p-6133cc0f.js";import{n as _}from"./p-05ec1917.js";import"./p-ffb89da5.js";let z=class extends(e(t(r))){constructor(e){super(e),this.elevationInfo=null,this.graphics=new F,this.screenSizePerspectiveEnabled=!0,this.type="graphics",this.internal=!1}destroy(){this.removeAll(),this.graphics.destroy()}add(e){return this.graphics.add(e),this}addMany(e){return this.graphics.addMany(e),this}removeAll(){return this.graphics.removeAll(),this}remove(e){this.graphics.remove(e)}removeMany(e){this.graphics.removeMany(e)}on(e,t){return super.on(e,t)}graphicChanged(e){this.emit("graphic-update",e)}};l([n({type:i})],z.prototype,"elevationInfo",void 0),l([n(R(F,"graphics"))],z.prototype,"graphics",void 0),l([n({type:["show","hide"]})],z.prototype,"listMode",void 0),l([n()],z.prototype,"screenSizePerspectiveEnabled",void 0),l([n({readOnly:!0})],z.prototype,"type",void 0),l([n({constructOnly:!0})],z.prototype,"internal",void 0),z=l([a("esri.layers.GraphicsLayer")],z);const A=z;function $(e){return"markup"===e.featureCollectionType||e.layers.some((e=>null!=e.layerDefinition.visibilityField||!H(e)))}function H({layerDefinition:e,featureSet:t}){const r=e.geometryType??t.geometryType;return V.find((t=>r===t.geometryTypeJSON&&e.drawingInfo?.renderer?.symbol?.type===t.identifyingSymbol.type))}function K(){return new L({xmin:-180,ymin:-90,xmax:180,ymax:90})}const Q=new o({name:"OBJECTID",alias:"OBJECTID",type:"oid",nullable:!1,editable:!1}),U=new o({name:"title",alias:"Title",type:"string",nullable:!0,editable:!0});let q=class extends A{constructor(e){super(e),this.visibilityMode="inherited"}initialize(){for(const e of this.graphics)e.sourceLayer=this.layer;this.graphics.on("after-add",(e=>{e.item.sourceLayer=this.layer})),this.graphics.on("after-remove",(e=>{e.item.sourceLayer=null}))}get fullExtent(){const e=this.layer?.spatialReference,t=this.fullBounds;return e?null==t?v(K(),e).geometry:T(t,e):null}get fullBounds(){const e=this.layer?.spatialReference;if(!e)return null;const t=w();return this.graphics.forEach((r=>{const l=null!=r.geometry?v(r.geometry,e).geometry:null;null!=l&&S(t,"point"===l.type?l:l.extent,t)})),O(t,J)?null:t}get sublayers(){return this.graphics}};l([n({readOnly:!0})],q.prototype,"fullExtent",null),l([n({readOnly:!0})],q.prototype,"fullBounds",null),l([n({readOnly:!0})],q.prototype,"sublayers",null),l([n()],q.prototype,"layer",void 0),l([n()],q.prototype,"layerId",void 0),l([n({readOnly:!0})],q.prototype,"visibilityMode",void 0),q=l([a("esri.layers.MapNotesLayer.MapNotesSublayer")],q);const V=[{geometryType:"polygon",geometryTypeJSON:"esriGeometryPolygon",id:"polygonLayer",layerId:0,title:"Polygons",identifyingSymbol:(new s).toJSON()},{geometryType:"polyline",geometryTypeJSON:"esriGeometryPolyline",id:"polylineLayer",layerId:1,title:"Polylines",identifyingSymbol:(new y).toJSON()},{geometryType:"multipoint",geometryTypeJSON:"esriGeometryMultipoint",id:"multipointLayer",layerId:2,title:"Multipoints",identifyingSymbol:(new u).toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"pointLayer",layerId:3,title:"Points",identifyingSymbol:(new u).toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"textLayer",layerId:4,title:"Text",identifyingSymbol:(new p).toJSON()}];let W=class extends(e(t(d(c(m(r)))))){constructor(e){super(e),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType="notes",this.legendEnabled=!1,this.listMode="hide-children",this.minScale=0,this.maxScale=0,this.spatialReference=f.WGS84,this.sublayers=new h(V.map((e=>new q({id:e.id,layerId:e.layerId,title:e.title,layer:this})))),this.title="Map Notes",this.type="map-notes",this.visibilityMode="inherited"}readCapabilities(e,t,r){return{operations:{supportsMapNotesEditing:!$(t)&&"portal-item"!==r?.origin}}}readFeatureCollections(e,t,r){if(!$(t))return null;const l=t.layers.map((e=>{const t=new b;return t.read(e,r),t}));return new h({items:l})}readLegacyfeatureCollectionJSON(e,t){return $(t)?g(t.featureCollection):null}get fullExtent(){const e=this.spatialReference,t=w();if(null!=this.sublayers)this.sublayers.forEach((({fullBounds:e})=>null!=e?S(t,e,t):t),t);else if(this.featureCollectionJSON?.layers.some((e=>e.layerDefinition.extent))){this.featureCollectionJSON.layers.forEach((r=>{const l=v(r.layerDefinition.extent,e).geometry;null!=l&&S(t,l,t)}))}return O(t,J)?v(K(),e).geometry:T(t,e)}readMinScale(e,t){for(const e of t.layers)if(null!=e.layerDefinition.minScale)return e.layerDefinition.minScale;return 0}readMaxScale(e,t){for(const e of t.layers)if(null!=e.layerDefinition.maxScale)return e.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer("multipointLayer")}get pointLayer(){return this._findSublayer("pointLayer")}get polygonLayer(){return this._findSublayer("polygonLayer")}get polylineLayer(){return this._findSublayer("polylineLayer")}readSpatialReference(e,t){return t.layers.length?f.fromJSON(t.layers[0].layerDefinition.spatialReference):f.WGS84}readSublayers(e,t,r){if($(t))return null;const l=[];let n=t.layers.reduce(((e,t)=>Math.max(e,t.layerDefinition.id??-1)),-1)+1;for(const e of t.layers){const{layerDefinition:t,featureSet:r}=e,i=t.id??n++,a=H(e);if(null!=a){const e=new q({id:a.id,title:t.name,layerId:i,layer:this,graphics:r.features.map((({geometry:e,symbol:t,attributes:r,popupInfo:l})=>x.fromJSON({attributes:r,geometry:e,symbol:t,popupTemplate:l})))});l.push(e)}}return new h(l)}writeSublayers(e,t,r,l){const{minScale:n,maxScale:i}=this;if(null==e)return;const a=e.some((e=>e.graphics.length>0));if(!this.capabilities.operations.supportsMapNotesEditing)return void(a&&l?.messages?.push(new N("map-notes-layer:editing-not-supported","New map notes cannot be added to this layer")));const o=[];let s=this.spatialReference.toJSON();e:for(const t of e)for(const e of t.graphics)if(null!=e.geometry){s=e.geometry.spatialReference.toJSON();break e}for(const t of V){const r=e.find((e=>t.id===e.id));this._writeMapNoteSublayer(o,r,t,n,i,s,l)}C("featureCollection.layers",o,t)}get textLayer(){return this._findSublayer("textLayer")}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}read(e,t){"featureCollection"in e&&(e=g(e),Object.assign(e,e.featureCollection)),super.read(e,t)}async beforeSave(){if(null==this.sublayers)return;let e=null;const t=[];for(const r of this.sublayers)for(const l of r.graphics)if(null!=l.geometry){const r=l.geometry;e?E(r.spatialReference,e)||(G(r.spatialReference,e)||P()||await k(),l.geometry=B(r,e)):e=r.spatialReference,t.push(l)}const r=await D(t.map((e=>e.geometry)));t.forEach(((e,t)=>e.geometry=r[t]))}_findSublayer(e){return null==this.sublayers?null:this.sublayers?.find((t=>t.id===e))??null}_writeMapNoteSublayer(e,t,r,l,n,i,a){const o=[];if(null!=t){for(const e of t.graphics)this._writeMapNote(o,e,r.geometryType,a);this._normalizeObjectIds(o,Q),e.push({layerDefinition:{name:t.title,drawingInfo:{renderer:{type:"simple",symbol:g(r.identifyingSymbol)}},id:t.layerId,geometryType:r.geometryTypeJSON,minScale:l,maxScale:n,objectIdField:"OBJECTID",fields:[Q.toJSON(),U.toJSON()],spatialReference:i},featureSet:{features:o,geometryType:r.geometryTypeJSON}})}}_writeMapNote(e,t,r,l){if(null==t)return;const{geometry:n,symbol:i,popupTemplate:a}=t;if(null==n)return;if(n.type!==r)return void l?.messages?.push(new M("map-notes-layer:invalid-geometry-type",`Geometry "${n.type}" cannot be saved in "${r}" layer`,{graphic:t}));if(null==i)return void l?.messages?.push(new M("map-notes-layer:no-symbol","Skipping map notes with no symbol",{graphic:t}));const o={attributes:{...t.attributes},geometry:n.toJSON(),symbol:i.toJSON()};null!=a&&(o.popupInfo=a.toJSON()),e.push(o)}_normalizeObjectIds(e,t){const r=t.name;let l=_(r,e)+1;const n=new Set;for(const t of e){t.attributes||(t.attributes={});const{attributes:e}=t;(null==e[r]||n.has(e[r]))&&(e[r]=l++),n.add(e[r])}}};l([n({readOnly:!0})],W.prototype,"capabilities",void 0),l([j(["portal-item","web-map"],"capabilities",["layers"])],W.prototype,"readCapabilities",null),l([n({readOnly:!0})],W.prototype,"featureCollections",void 0),l([j(["web-map","portal-item"],"featureCollections",["layers"])],W.prototype,"readFeatureCollections",null),l([n({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:"featureCollection"}}}}})],W.prototype,"featureCollectionJSON",void 0),l([j(["web-map","portal-item"],"featureCollectionJSON",["featureCollection"])],W.prototype,"readLegacyfeatureCollectionJSON",null),l([n({readOnly:!0,json:{read:!0,write:{enabled:!0,ignoreOrigin:!0}}})],W.prototype,"featureCollectionType",void 0),l([n({readOnly:!0})],W.prototype,"fullExtent",null),l([n({readOnly:!0,json:{origins:{"web-map":{write:{target:"featureCollection.showLegend",overridePolicy(){return{enabled:null!=this.featureCollectionJSON}}}}}}})],W.prototype,"legendEnabled",void 0),l([n({type:["show","hide","hide-children"]})],W.prototype,"listMode",void 0),l([n({type:Number,nonNullable:!0,json:{write:!1}})],W.prototype,"minScale",void 0),l([j(["web-map","portal-item"],"minScale",["layers"])],W.prototype,"readMinScale",null),l([n({type:Number,nonNullable:!0,json:{write:!1}})],W.prototype,"maxScale",void 0),l([j(["web-map","portal-item"],"maxScale",["layers"])],W.prototype,"readMaxScale",null),l([n({readOnly:!0})],W.prototype,"multipointLayer",null),l([n({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],W.prototype,"operationalLayerType",void 0),l([n({readOnly:!0})],W.prototype,"pointLayer",null),l([n({readOnly:!0})],W.prototype,"polygonLayer",null),l([n({readOnly:!0})],W.prototype,"polylineLayer",null),l([n({type:f})],W.prototype,"spatialReference",void 0),l([j(["web-map","portal-item"],"spatialReference",["layers"])],W.prototype,"readSpatialReference",null),l([n({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],W.prototype,"sublayers",void 0),l([j("web-map","sublayers",["layers"])],W.prototype,"readSublayers",null),l([I("web-map","sublayers")],W.prototype,"writeSublayers",null),l([n({readOnly:!0})],W.prototype,"textLayer",null),l([n()],W.prototype,"title",void 0),l([n({readOnly:!0,json:{read:!1}})],W.prototype,"type",void 0),W=l([a("esri.layers.MapNotesLayer")],W);const X=W;export default X;
//# sourceMappingURL=p-5b0fb556.js.map