import{hG as e,hH as t,hJ as s,bS as i,aT as a,aS as n,j as l,s as r,k as o,l as u,n as h,bM as d,bJ as p,d3 as g,d5 as y,a5 as c}from"./p-98455486.js";import{o as w}from"./p-d71c8851.js";import{j as v,t as b,p as m}from"./p-ec443a8b.js";var f;const M=new b("0/0/0",0,0,0,void 0);let j=f=class extends(e(t(s(i)))){constructor(){super(...arguments),this.tileInfo=v.create({spatialReference:a.WebMercator,size:256}),this.type="base-tile",this.fullExtent=new n(-20037508.342787,-20037508.34278,20037508.34278,20037508.342787,a.WebMercator),this.spatialReference=a.WebMercator}getTileBounds(e,t,s,i){const a=i||d();return M.level=e,M.row=t,M.col=s,M.extent=a,this.tileInfo.updateTileInfo(M),M.extent=void 0,a}fetchTile(e,t,s,i={}){const{signal:a}=i,n=this.getTileUrl(e,t,s),r={responseType:"image",signal:a,query:{...this.refreshParameters}};return l(n??"",r).then((e=>e.data))}async fetchImageBitmapTile(e,t,s,i={}){const{signal:a}=i;if(this.fetchTile!==f.prototype.fetchTile){const n=await this.fetchTile(e,t,s,i);return w(n,e,t,s,a)}const n=this.getTileUrl(e,t,s)??"",r={responseType:"blob",signal:a,query:{...this.refreshParameters}},{data:o}=await l(n,r);return w(o,e,t,s,a)}getTileUrl(){throw new r("basetilelayer:gettileurl-not-implemented","getTileUrl() is not implemented")}};o([u({type:v})],j.prototype,"tileInfo",void 0),o([u({type:["show","hide"]})],j.prototype,"listMode",void 0),o([u({readOnly:!0,value:"base-tile"})],j.prototype,"type",void 0),o([u({nonNullable:!0})],j.prototype,"fullExtent",void 0),o([u()],j.prototype,"spatialReference",void 0),j=f=o([h("esri.layers.BaseTileLayer")],j);const T=j;const B=new p({BingMapsAerial:"aerial",BingMapsRoad:"road",BingMapsHybrid:"hybrid"}),S="https://dev.virtualearth.net";let k=class extends(e(g(y(T)))){constructor(e){super(e),this.type="bing-maps",this.tileInfo=new v({size:[256,256],dpi:96,origin:new c({x:-20037508.342787,y:20037508.342787,spatialReference:a.WebMercator}),spatialReference:a.WebMercator,lods:[new m({level:1,resolution:78271.5169639999,scale:295828763.795777}),new m({level:2,resolution:39135.7584820001,scale:147914381.897889}),new m({level:3,resolution:19567.8792409999,scale:73957190.948944}),new m({level:4,resolution:9783.93962049996,scale:36978595.474472}),new m({level:5,resolution:4891.96981024998,scale:18489297.737236}),new m({level:6,resolution:2445.98490512499,scale:9244648.868618}),new m({level:7,resolution:1222.99245256249,scale:4622324.434309}),new m({level:8,resolution:611.49622628138,scale:2311162.217155}),new m({level:9,resolution:305.748113140558,scale:1155581.108577}),new m({level:10,resolution:152.874056570411,scale:577790.554289}),new m({level:11,resolution:76.4370282850732,scale:288895.277144}),new m({level:12,resolution:38.2185141425366,scale:144447.638572}),new m({level:13,resolution:19.1092570712683,scale:72223.819286}),new m({level:14,resolution:9.55462853563415,scale:36111.909643}),new m({level:15,resolution:4.77731426794937,scale:18055.954822}),new m({level:16,resolution:2.38865713397468,scale:9027.977411}),new m({level:17,resolution:1.19432856685505,scale:4513.988705}),new m({level:18,resolution:.597164283559817,scale:2256.994353}),new m({level:19,resolution:.298582141647617,scale:1128.497176}),new m({level:20,resolution:.1492910708238085,scale:564.248588})]}),this.key=null,this.style="road",this.culture="en-US",this.region=null,this.portalUrl=null,this.hasAttributionData=!0}get bingMetadata(){return this._get("bingMetadata")}set bingMetadata(e){this._set("bingMetadata",e)}get copyright(){return null!=this.bingMetadata?this.bingMetadata.copyright:null}get operationalLayerType(){return B.toJSON(this.style)}get bingLogo(){return null!=this.bingMetadata?this.bingMetadata.brandLogoUri:null}load(e){return this.key?this.addResolvingPromise(this._getMetadata()):this.portalUrl?this.addResolvingPromise(this._getPortalBingKey().then((()=>this._getMetadata()))):this.addResolvingPromise(Promise.reject(new r("bingmapslayer:load","Bing layer must have bing key."))),Promise.resolve(this)}getTileUrl(e,t,s){if(!this.loaded||null==this.bingMetadata)return null;const i=this.bingMetadata.resourceSets[0].resources[0],a=i.imageUrlSubdomains[t%i.imageUrlSubdomains.length],n=this._getQuadKey(e,t,s);return i.imageUrl.replace("{subdomain}",a).replace("{quadkey}",n)}async fetchAttributionData(){return this.load().then((()=>{if(null==this.bingMetadata)return null;return{contributors:this.bingMetadata.resourceSets[0].resources[0].imageryProviders.map((e=>({attribution:e.attribution,coverageAreas:e.coverageAreas.map((e=>({zoomMin:e.zoomMin,zoomMax:e.zoomMax,score:1,bbox:[e.bbox[0],e.bbox[1],e.bbox[2],e.bbox[3]]})))})))}}))}_getMetadata(){const e={road:"roadOnDemand",aerial:"aerial",hybrid:"aerialWithLabelsOnDemand"}[this.style];return l(`${S}/REST/v1/Imagery/Metadata/${e}`,{responseType:"json",query:{include:"ImageryProviders",uriScheme:"https",key:this.key,suppressStatus:!0,output:"json",culture:this.culture,userRegion:this.region}}).then((e=>{const t=e.data;if(200!==t.statusCode)throw new r("bingmapslayer:getmetadata",t.statusDescription);if(this.bingMetadata=t,0===this.bingMetadata.resourceSets.length)throw new r("bingmapslayer:getmetadata","no bing resourcesets");if(0===this.bingMetadata.resourceSets[0].resources.length)throw new r("bingmapslayer:getmetadata","no bing resources")})).catch((e=>{throw new r("bingmapslayer:getmetadata",e.message)}))}_getPortalBingKey(){return l(this.portalUrl??"",{responseType:"json",authMode:"no-prompt",query:{f:"json"}}).then((e=>{if(!e.data.bingKey)throw new r("bingmapslayer:getportalbingkey","The referenced Portal does not contain a valid bing key");this.key=e.data.bingKey})).catch((e=>{throw new r("bingmapslayer:getportalbingkey",e.message)}))}_getQuadKey(e,t,s){let i="";for(let a=e;a>0;a--){let e=0;const n=1<<a-1;0!=(s&n)&&(e+=1),0!=(t&n)&&(e+=2),i+=e.toString()}return i}};o([u({json:{read:!1,write:!1},value:null})],k.prototype,"bingMetadata",null),o([u({json:{read:!1,write:!1},value:"bing-maps",readOnly:!0})],k.prototype,"type",void 0),o([u({type:v})],k.prototype,"tileInfo",void 0),o([u({type:String,readOnly:!0,json:{read:!1,write:!1}})],k.prototype,"copyright",null),o([u({type:String,json:{write:!1,read:!1}})],k.prototype,"key",void 0),o([u({type:B.apiValues,nonNullable:!0,json:{read:{source:"layerType",reader:B.read}}})],k.prototype,"style",void 0),o([u({type:["BingMapsAerial","BingMapsHybrid","BingMapsRoad"]})],k.prototype,"operationalLayerType",null),o([u({type:String,json:{write:!1,read:!1}})],k.prototype,"culture",void 0),o([u({type:String,json:{write:!1,read:!1}})],k.prototype,"region",void 0),o([u({type:String,json:{write:!0,read:!0}})],k.prototype,"portalUrl",void 0),o([u({type:Boolean,json:{write:!1,read:!1}})],k.prototype,"hasAttributionData",void 0),o([u({type:String,readOnly:!0})],k.prototype,"bingLogo",null),k=o([h("esri.layers.BingMapsLayer")],k);const R=k;export default R;
//# sourceMappingURL=p-6473c3c0.js.map