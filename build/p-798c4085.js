import{k as t,l as e,a3 as n,n as r,o as i,s,T as o,c as l,bJ as a,h as f,v as c,eg as u,aS as h,b1 as p,ee as w}from"./p-98455486.js";class d{constructor(t=null,e=null,n=null){this.minValue=t,this.maxValue=e,this.noDataValue=n}}const y=9999999e31,M=2e-7,m={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function x(t){return m[t]??[-34028234663852886e22,34028234663852886e22]}function A(t,e,n){if(t.depthCount&&t.depthCount>1)return;const{pixels:r,statistics:i,pixelType:s}=t,o=r[0].length,l=t.bandMasks??[],a=t.mask??new Uint8Array(o).fill(255),f="f32"===s||"f64"===s,c=x(s);let u=!1;for(let t=0;t<r.length;t++){const h="number"==typeof e?e:e[t];if(null==h)continue;const p=i?.[t].minValue??c[0],w=i?.[t].maxValue??c[1];if(p>h+Number.EPSILON||w<h-Number.EPSILON)continue;const d=l[t]||new Uint8Array(o).fill(255),m=r[t],x=n?.customFloatTolerance;if(f&&0!==x){let t=x;t||(t=Math.abs(h)>=y?M*Math.abs(h):"f32"===s?2**-23:Number.EPSILON);for(let e=0;e<m.length;e++)d[e]&&Math.abs(m[e]-h)<t&&(m[e]=0,d[e]=0,a[e]=0,u=!0)}else for(let t=0;t<m.length;t++)d[t]&&m[t]===h&&(m[t]=0,d[t]=0,a[t]=0,u=!0);l[t]=d}u&&(t.bandMasks=l,t.mask=a),u&&"updateStatistics"in t&&t.updateStatistics()}var g;let k=g=class extends i{static createEmptyBand(t,e){return new(g.getPixelArrayConstructor(t))(e)}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){return this.pixels?.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new s("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new d)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map((t=>this._calculateBandStatistics(t,this.mask)));const t=this.mask;let e=0;if(null!=t)for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||"f64"===t||"f32"===t||!this.pixels)return;const[e,n]=x(t),r=this.pixels,i=this.width*this.height,s=r.length;let o,l,a;const f=[];for(let c=0;c<s;c++){a=g.createEmptyBand(t,i),o=r[c];for(let t=0;t<i;t++)l=o[t],a[t]=l>n?n:l<e?e:l;f.push(a)}this.pixels=f,this.pixelType=t}extractBands(t){const{pixels:e,statistics:n}=this;if(null==t||0===t.length||!e||0===e.length)return this;const r=e.length,i=t.some((t=>t>=e.length)),s=r===t.length&&!t.some(((t,e)=>t!==e));if(i||s)return this;const o=this.bandMasks?.length===r?t.map((t=>this.bandMasks[t])):void 0;let{mask:l,validPixelCount:a}=this;const{width:f,height:c}=this;if(o){if(1===o.length)l=o[0];else{const t=f*c;l=new Uint8Array(t).fill(255);for(let e=0;e<o.length;e++){const n=o[e];for(let e=0;e<t;e++)n[e]||(l[e]=0)}}a=l.filter((t=>!!t)).length}return new g({pixelType:this.pixelType,width:f,height:c,mask:l,bandMasks:o,validPixelCount:a,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>e[t])),statistics:n&&t.map((t=>n[t]))})}clone(){const t=new g({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;null!=this.mask&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0)),this.bandMasks&&(t.bandMasks=this.bandMasks.map((t=>new Uint8Array(t))));const n=g.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const r=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=r?this.pixels[e].slice(0,this.pixels[e].length):new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=o(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:r,pixels:i}=this;if(!t||!i||!i.length)return void l.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let s,o,a,f;s=o=a=i[0],i.length>=3?(o=i[1],a=i[2]):2===i.length&&(o=i[1]);const c=new Uint32Array(t),u=this.width*this.height;if(s.length===u)if(null!=e&&e.length===u)if(n)for(f=0;f<u;f++){const t=e[f];if(t){const e=t/255;c[f]=r?t<<24|a[f]*e<<16|o[f]*e<<8|s[f]*e:t<<24|a[f]<<16|o[f]<<8|s[f]}}else for(f=0;f<u;f++)e[f]&&(c[f]=255<<24|a[f]<<16|o[f]<<8|s[f]);else for(f=0;f<u;f++)c[f]=255<<24|a[f]<<16|o[f]<<8|s[f];else l.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:r}=this;if(!t||!e||!e.length)return void l.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const i=this.pixelType;let s=1,o=0,a=1;if(r&&r.length>0){for(const t of r)if(null!=t.minValue&&(o=Math.min(o,t.minValue)),null!=t.maxValue&&null!=t.minValue){const e=t.maxValue-t.minValue;a=Math.max(a,e)}s=255/a}else{let t=255;"s8"===i?(o=-128,t=127):"u16"===i?t=65535:"s16"===i?(o=-32768,t=32767):"u32"===i?t=4294967295:"s32"===i?(o=-2147483648,t=2147483647):"f32"===i?(o=-34e38,t=34e38):"f64"===i&&(o=-Number.MAX_VALUE,t=Number.MAX_VALUE),s=255/(t-o)}const f=new Uint32Array(t),c=this.width*this.height;let u,h,p,w,d;if(u=h=p=e[0],u.length!==c)return l.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(h=e[1],e.length>=3&&(p=e[2]),null!=n&&n.length===c)for(w=0;w<c;w++)n[w]&&(f[w]=255<<24|(p[w]-o)*s<<16|(h[w]-o)*s<<8|(u[w]-o)*s);else for(w=0;w<c;w++)f[w]=255<<24|(p[w]-o)*s<<16|(h[w]-o)*s<<8|(u[w]-o)*s;else if(null!=n&&n.length===c)for(w=0;w<c;w++)d=(u[w]-o)*s,n[w]&&(f[w]=255<<24|d<<16|d<<8|d);else for(w=0;w<c;w++)d=(u[w]-o)*s,f[w]=255<<24|d<<16|d<<8|d}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!e||!e.length)return l.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let r,i,s,o;r=i=s=e[0],e.length>=3?(i=e[1],s=e[2]):2===e.length&&(i=e[1]);const a=this.width*this.height;if(r.length!==a)return l.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let f=0;if(null!=n&&n.length===a)for(o=0;o<a;o++)t[f++]=r[o],t[f++]=i[o],t[f++]=s[o],t[f++]=1&n[o];else for(o=0;o<a;o++)t[f++]=r[o],t[f++]=i[o],t[f++]=s[o],t[f++]=1}_calculateBandStatistics(t,e){let n=1/0,r=-1/0;const i=t.length;let s,o=0;if(null!=e)for(s=0;s<i;s++)e[s]&&(o=t[s],n=o<n?o:n,r=o>r?o:r);else for(s=0;s<i;s++)o=t[s],n=o<n?o:n,r=o>r?o:r;return new d(n,r)}};t([e({json:{write:!0}})],k.prototype,"width",void 0),t([e({json:{write:!0}})],k.prototype,"height",void 0),t([e({json:{write:!0}})],k.prototype,"pixelType",void 0),t([n("pixelType")],k.prototype,"castPixelType",null),t([e({json:{write:!0}})],k.prototype,"validPixelCount",void 0),t([e({json:{write:!0}})],k.prototype,"mask",void 0),t([e({json:{write:!0}})],k.prototype,"maskIsAlpha",void 0),t([e({json:{write:!0}})],k.prototype,"pixels",void 0),t([e()],k.prototype,"premultiplyAlpha",void 0),t([e({json:{write:!0}})],k.prototype,"statistics",void 0),t([e({json:{write:!0}})],k.prototype,"depthCount",void 0),t([e({json:{write:!0}})],k.prototype,"noDataValues",void 0),t([e({json:{write:!0}})],k.prototype,"bandMasks",void 0),k=g=t([r("esri.layers.support.PixelBlock")],k);const b=k;var v,U;!function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"}(v||(v={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(U||(U={}));const T=6;function F(t){return null!=t&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function _(t){if(!t?.length||t.some((t=>!F(t))))return null;if(1===t.length)return t[0]?.clone()??null;const e=t,{width:n,height:r,pixelType:i}=e[0];if(e.some((t=>t.width!==n||t.height!==r)))return null;const s=e.map((({mask:t})=>t)).filter((t=>null!=t));let o=null;s.length&&(o=new Uint8Array(n*r),o.set(s[0]),s.length>1&&G(s.slice(1),o));const l=[];e.forEach((({pixels:t})=>l.push(...t)));const a=e.map((({statistics:t})=>t)).filter((t=>t?.length)),f=[];return a.forEach((t=>f.push(...t))),new b({pixelType:i,width:n,height:r,mask:o,pixels:l,statistics:f.length?f:null})}function I(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let r=0;n[0][0]<0&&(r=n[0][0]);const i=Math.max(256,n[n.length-1][0]-r+1),s=new Uint8Array(4*i),o=[];let l,a=0,f=0;const c=5===n[0].length;if(i>65536)return n.forEach((t=>{o[t[0]-r]=c?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:o,offset:r,alphaSpecified:c};if(t.fillUnspecified)for(l=n[f],a=l[0]-r;a<i;a++)s[4*a]=l[1],s[4*a+1]=l[2],s[4*a+2]=l[3],s[4*a+3]=c?l[4]:255,a===l[0]-r&&(l=f===n.length-1?l:n[++f]);else for(a=0;a<n.length;a++)l=n[a],f=4*(l[0]-r),s[f]=l[1],s[f+1]=l[2],s[f+2]=l[3],s[f+3]=c?l[4]:255;return{indexedColormap:s,offset:r,alphaSpecified:c}}function B(t,e){if(!F(t))return t;if(!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),r=n.pixels;let i=n.mask;const s=n.width*n.height;if(1!==r.length)return t;const{indexedColormap:o,indexed2DColormap:l,offset:a,alphaSpecified:f}=e;let c=0;const u=r[0],h=new Uint8Array(u.length),p=new Uint8Array(u.length),w=new Uint8Array(u.length);let d,y=0;if(o){const t=o.length-1;if(null!=i)for(c=0;c<s;c++)i[c]&&(y=4*(u[c]-a),y<a||y>t?i[c]=0:(h[c]=o[y],p[c]=o[y+1],w[c]=o[y+2],i[c]=o[y+3]));else{for(i=new Uint8Array(s),c=0;c<s;c++)y=4*(u[c]-a),y<a||y>t?i[c]=0:(h[c]=o[y],p[c]=o[y+1],w[c]=o[y+2],i[c]=o[y+3]);n.mask=i}}else if(l)if(null!=i)for(c=0;c<s;c++)i[c]&&(d=l[u[c]],h[c]=d[0],p[c]=d[1],w[c]=d[2],i[c]=d[3]);else{for(i=new Uint8Array(s),c=0;c<s;c++)d=l[u[c]],h[c]=d[0],p[c]=d[1],w[c]=d[2],i[c]=d[3];n.mask=i}return n.pixels=[h,p,w],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=f,n}function P(t,e){if(!F(t))return null;const{pixels:n,mask:r}=t,i=n.length;let s=e.lut;const{offset:o}=e;s&&1===s[0].length&&(s=n.map((()=>s)));const l=[],a=e.outputPixelType||"u8";for(let t=0;t<i;t++){const e=D(n[t],r,s[t],o||0,a);l.push(e)}const f=new b({width:t.width,height:t.height,pixels:l,mask:r,pixelType:a});return f.updateStatistics(),f}function D(t,e,n,r,i){const s=t.length,o=b.createEmptyBand(i,s);if(e)for(let i=0;i<s;i++)e[i]&&(o[i]=n[t[i]-r]);else for(let e=0;e<s;e++)o[e]=n[t[e]-r];return o}function R(t,e){if(!F(t))return null;const n=t.clone(),{pixels:r}=n,i=n.width*n.height,s=e.length,o=Math.floor(s/2),l=e[Math.floor(o)],a=r[0];let f,c,u,h,p,w,d=!1;const y=new Uint8Array(i),M=new Uint8Array(i),m=new Uint8Array(i);let x=n.mask;const A=4===e[0].mappedColor.length;for(x||(x=new Uint8Array(i),x.fill(A?255:1),n.mask=x),p=0;p<i;p++)if(x[p]){for(f=a[p],d=!1,w=o,c=l,u=0,h=s-1;h-u>1;){if(f===c.value){d=!0;break}f>c.value?u=w:h=w,w=Math.floor((u+h)/2),c=e[Math.floor(w)]}d||(f===e[u].value?(c=e[u],d=!0):f===e[h].value?(c=e[h],d=!0):f<e[u].value?(d=!1,c=null):f>e[u].value&&(f<e[h].value?(c=e[u],d=!0):h===s-1?(d=!1,c=null):(c=e[h],d=!0))),d?(y[p]=c.mappedColor[0],M[p]=c.mappedColor[1],m[p]=c.mappedColor[2],x[p]=c.mappedColor[3]):y[p]=M[p]=m[p]=x[p]=0}return n.pixels=[y,M,m],n.mask=x,n.pixelType="u8",n.maskIsAlpha=A,n}function S(t,e){if(!F(t))return null;const{width:n,height:r}=t,{inputRanges:i,outputValues:s,outputPixelType:o,noDataRanges:l,allowUnmatched:a,isLastInputRangeInclusive:f}=e,c=t.pixels[0],u=b.createEmptyBand(o,c.length),h=t.mask,p=new Uint8Array(n*r);h?p.set(h):p.fill(255);const w=t.pixelType.startsWith("f")?1e-6:0,d=i.map((t=>t-w));d[0]=i[0],d[d.length-1]=i[i.length-1]+(f?1e-6:0);const y=i.length/2,[M,m]=x(o);for(let t=0;t<r;t++)for(let e=0;e<n;e++){const r=t*n+e;if(p[r]){const t=c[r];let e=!1;for(let n=y-1;n>=0;n--)if(t===d[2*n]||t>d[2*n]&&t<d[2*n+1]){u[r]=s[n],e=!0;break}e||(a?u[r]=t>m?m:t<M?M:t:p[r]=0)}}const A=l?.length;if(A)for(let t=0;t<r;t++)for(let e=0;e<n;e++){const r=t*n+e;if(!h||h[r]){const t=c[r];for(let e=0;e<A;e+=2)if(t>=l[e]&&t<=l[e+1]){u[r]=0,p[r]=0;break}}}return new b({width:n,height:r,pixelType:o,pixels:[u],mask:p})}function j(t,e,n,r){const i=null!=n&&n.length>=2?new Set(n):null,s=1===n?.length?n[0]:null,o=!!e?.length;for(let n=0;n<t.length;n++)if(r[n]){const l=t[n];if(o){let t=!1;for(let n=0;n<e.length;n+=2)if(l>=e[n]&&l<=e[n+1]){t=!0;break}t||(r[n]=0)}r[n]&&(l===s||i?.has(l))&&(r[n]=0)}}function N(t,e){const n=t[0].length;for(let r=0;r<n;r++)if(e[r]){let n=!1;for(let e=0;e<t.length;e++)if(t[e][r]){n=!0;break}n||(e[r]=0)}}function G(t,e){const n=t[0].length;for(let r=0;r<n;r++)if(e[r]){let n=!1;for(let e=0;e<t.length;e++)if(0===t[e][r]){n=!0;break}n&&(e[r]=0)}}function C(t,e){if(!F(t))return null;const{width:n,height:r,pixels:i}=t,s=n*r,o=new Uint8Array(s);t.mask?o.set(t.mask):o.fill(255);const l=i.length,{includedRanges:a,noDataValues:f,outputPixelType:c,matchAll:u,lookups:h}=e;if(h){const t=[];for(let e=0;e<l;e++){const n=h[e],r=D(i[e],o,n.lut,n.offset||0,"u8");t.push(r)}1===t.length?o.set(t[0]):u?N(t,o):G(t,o)}else if(u){const t=[];for(let e=0;e<l;e++){const n=new Uint8Array(s);n.set(o),j(i[e],a?.slice(2*e,2*e+2),f?.[e],n),t.push(n)}1===t.length?o.set(t[0]):N(t,o)}else for(let t=0;t<l;t++)j(i[t],a?.slice(2*t,2*t+2),f?.[t],o);return new b({width:n,height:r,pixelType:c,pixels:i,mask:o})}function V(t){const{srcPixelType:e,inputRanges:n,outputValues:r,allowUnmatched:i,noDataRanges:s,isLastInputRangeInclusive:o,outputPixelType:l}=t;if("u8"!==e&&"s8"!==e&&"u16"!==e&&"s16"!==e)return null;const a=e.includes("16")?65536:256,f=e.includes("s")?-a/2:0,c=b.createEmptyBand(l,a),u=new Uint8Array(a);i&&u.fill(255);const[h,p]=x(l);if(n?.length&&r?.length){const t=1e-6,e=n.map((e=>e-t));e[0]=n[0],o&&(e[e.length-1]=n[n.length-1]);for(let t=0;t<e.length;t++){const n=r[t]>p?p:r[t]<h?h:r[t],i=Math.ceil(e[2*t]-f),s=Math.floor(e[2*t+1]-f);for(let t=i;t<=s;t++)c[t]=n,u[t]=255}}if(s?.length)for(let t=0;t<s.length;t++){const e=Math.ceil(s[2*t]-f),n=Math.floor(s[2*t+1]-f);for(let t=e;t<=n;t++)u[t]=0}return{lut:c,offset:f,mask:u}}function W(t,e,n){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const r=t.includes("16")?65536:256,i=t.includes("s")?-r/2:0,s=new Uint8Array(r);if(e)for(let t=0;t<e.length;t++){const n=Math.ceil(e[2*t]-i),r=Math.floor(e[2*t+1]-i);for(let t=n;t<=r;t++)s[t]=255}else s.fill(255);if(n)for(let t=0;t<n.length;t++)s[n[t]-i]=0;return{lut:s,offset:i}}function z(t,e,n,r,i,s,o,l){return{xmin:i<=n*t?0:i<n*t+t?i-n*t:t,ymin:s<=r*e?0:s<r*e+e?s-r*e:e,xmax:i+o<=n*t?0:i+o<n*t+t?i+o-n*t:t,ymax:s+l<=r*e?0:s+l<r*e+e?s+l-r*e:e}}function L(t,e){if(!t||0===t.length)return null;const n=t.find((t=>t.pixelBlock));if(!n||null==n.pixelBlock)return null;const r=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,i=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,s=.01*Math.min(r,i),o=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>s?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>s?t.extent.xmin-e.extent.xmin:0)),l=Math.min.apply(null,o.map((t=>t.extent.xmin))),a=Math.min.apply(null,o.map((t=>t.extent.ymin))),f=Math.max.apply(null,o.map((t=>t.extent.xmax))),c=Math.max.apply(null,o.map((t=>t.extent.ymax))),u={x:Math.round((e.xmin-l)/r),y:Math.round((c-e.ymax)/i)},h={width:Math.round((f-l)/r),height:Math.round((c-a)/i)},p={width:Math.round((e.xmax-e.xmin)/r),height:Math.round((e.ymax-e.ymin)/i)};if(Math.round(h.width/n.pixelBlock.width)*Math.round(h.height/n.pixelBlock.height)!==o.length||u.x<0||u.y<0||h.width<p.width||h.height<p.height)return null;return{extent:e,pixelBlock:O(o.map((t=>t.pixelBlock)),h,{clipOffset:u,clipSize:p})}}function q(t,e,n,r,i,s){const{width:o,height:l}=n.block,{x:a,y:f}=n.offset,{width:c,height:u}=n.mosaic,h=z(o,l,r,i,a,f,c,u);let p=0,w=0;if(s){const t=s.hasGCSSShiftTransform?360:s.halfWorldWidth??0,e=o*s.resolutionX,n=s.startX+r*e;n<t&&n+e>t?w=s.rightPadding:n>=t&&(p=s.leftMargin-s.rightPadding,w=0)}if(h.xmax-=w,"number"!=typeof e)for(let n=h.ymin;n<h.ymax;n++){const s=(i*l+n-f)*c+(r*o-a)+p,u=n*o;for(let n=h.xmin;n<h.xmax;n++)t[s+n]=e[u+n]}else for(let n=h.ymin;n<h.ymax;n++){const s=(i*l+n-f)*c+(r*o-a)+p;for(let n=h.xmin;n<h.xmax;n++)t[s+n]=e}}function O(t,e,n={}){const{clipOffset:r,clipSize:i,alignmentInfo:s,blockWidths:o}=n;if(o)return $(t,e,{blockWidths:o});const l=t.find((t=>F(t)));if(null==l)return null;const a=i?i.width:e.width,f=i?i.height:e.height,c=l.width,u=l.height,h=e.width/c,p=e.height/u,w={offset:r||{x:0,y:0},mosaic:i||e,block:{width:c,height:u}},d=l.pixelType,y=b.getPixelArrayConstructor(d),M=l.pixels.length,m=[];let x,A;for(let e=0;e<M;e++){A=new y(a*f);for(let n=0;n<p;n++)for(let r=0;r<h;r++){const i=t[n*h+r];F(i)&&(x=i.pixels[e],q(A,x,w,r,n,s))}m.push(A)}const g=t.some((t=>null==t||null!=t.mask&&t.mask.length>0)),k=t.some((t=>null!=t&&t.bandMasks&&t.bandMasks.length>1)),v=g?new Uint8Array(a*f):void 0,U=k?[]:void 0;if(v){for(let e=0;e<p;e++)for(let n=0;n<h;n++){const r=t[e*h+n],i=null!=r?r.mask:null;q(v,null!=i?i:r?255:0,w,n,e,s)}if(U)for(let e=0;e<M;e++){const n=new Uint8Array(a*f);for(let r=0;r<p;r++)for(let i=0;i<h;i++){const o=t[r*h+i],l=o?.bandMasks?.[e]??o?.mask;q(n,null!=l?l:o?255:0,w,i,r,s)}U.push(n)}}const T=new b({width:a,height:f,pixels:m,pixelType:d,bandMasks:U,mask:v});return T.updateStatistics(),T}function $(t,e,n){const r=t.find((t=>null!=t));if(null==r)return null;const i=t.some((t=>null==t||!!t.mask)),{width:s,height:o}=e,l=i?new Uint8Array(s*o):null,{blockWidths:a}=n,f=[],c=r.getPlaneCount(),u=b.getPixelArrayConstructor(r.pixelType);if(i)for(let e=0,n=0;e<t.length;n+=a[e],e++){const r=t[e];if(!F(r))continue;const i=r.mask;for(let t=0;t<o;t++)for(let o=0;o<a[e];o++)l[t*s+o+n]=null==i?255:i[t*r.width+o]}const h=t.some((t=>null!=t&&t.bandMasks&&t.bandMasks.length>1)),p=h?[]:void 0,w=s*o;for(let e=0;e<c;e++){const n=new u(w),r=h?new Uint8Array(w):void 0;for(let i=0,l=0;i<t.length;l+=a[i],i++){const f=t[i];if(!F(f))continue;const c=f.pixels[e];if(null!=c){for(let t=0;t<o;t++)for(let e=0;e<a[i];e++)n[t*s+e+l]=c[t*f.width+e];if(r){const t=f.bandMasks?.[e]??f.mask;for(let e=0;e<o;e++)for(let n=0;n<a[i];n++)r[e*s+n+l]=t?t[e*f.width+n]:255}}}f.push(n),p&&r&&p.push(r)}const d=new b({width:s,height:o,mask:l,bandMasks:p,pixels:f,pixelType:r.pixelType});return d.updateStatistics(),d}function H(t,e,n){if(!F(t))return null;const{width:r,height:i}=t,s=e.x,o=e.y,l=n.width+s,a=n.height+o;if(s<0||o<0||l>r||a>i)return t;if(0===s&&0===o&&l===r&&a===i)return t;t.mask||(t.mask=new Uint8Array(r*i));const f=t.mask;for(let t=0;t<i;t++){const e=t*r;for(let n=0;n<r;n++)f[e+n]=t<o||t>=a||n<s||n>=l?0:1}return t.updateStatistics(),t}function K(t){if(!F(t))return null;const e=t.clone(),{width:n,height:r,pixels:i}=t,s=i[0],o=e.pixels[0],l=t.mask;for(let t=2;t<r-1;t++){const e=new Map;for(let r=t-2;r<t+2;r++)for(let t=0;t<4;t++){const i=r*n+t;Q(e,s[i],l?l[i]:1)}o[t*n]=E(e),o[t*n+1]=o[t*n+2]=o[t*n];let r=3;for(;r<n-1;r++){let i=(t-2)*n+r+1;Q(e,s[i],l?l[i]:1),i=(t-1)*n+r+1,Q(e,s[i],l?l[i]:1),i=t*n+r+1,Q(e,s[i],l?l[i]:1),i=(t+1)*n+r+1,Q(e,s[i],l?l[i]:1),i=(t-2)*n+r-3,J(e,s[i],l?l[i]:1),i=(t-1)*n+r-3,J(e,s[i],l?l[i]:1),i=t*n+r-3,J(e,s[i],l?l[i]:1),i=(t+1)*n+r-3,J(e,s[i],l?l[i]:1),o[t*n+r]=E(e)}o[t*n+r+1]=o[t*n+r]}for(let t=0;t<n;t++)o[t]=o[n+t]=o[2*n+t],o[(r-1)*n+t]=o[(r-2)*n+t];return e.updateStatistics(),e}function E(t){if(0===t.size)return 0;let e=0,n=-1,r=0;const i=t.keys();let s=i.next();for(;!s.done;)r=t.get(s.value),r>e&&(n=s.value,e=r),s=i.next();return n}function J(t,e,n){if(0===n)return;const r=t.get(e);1===r?t.delete(e):t.set(e,r-1)}function Q(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function X(t,e,n){let{x:r,y:i}=e;const{width:s,height:o}=n;if(0===r&&0===i&&o===t.height&&s===t.width)return t;const{width:l,height:a}=t,f=Math.max(0,i),c=Math.max(0,r),u=Math.min(r+s,l),h=Math.min(i+o,a);if(u<0||h<0||!F(t))return null;r=Math.max(0,-r),i=Math.max(0,-i);const{pixels:p}=t,w=s*o,d=p.length,y=[];for(let e=0;e<d;e++){const n=p[e],o=b.createEmptyBand(t.pixelType,w);for(let t=f;t<h;t++){const e=t*l;let a=(t+i-f)*s+r;for(let t=c;t<u;t++)o[a++]=n[e+t]}y.push(o)}const M=new Uint8Array(w),m=t.mask;for(let t=f;t<h;t++){const e=t*l;let n=(t+i-f)*s+r;for(let t=c;t<u;t++)M[n++]=m?m[e+t]:1}const x=new b({width:n.width,height:n.height,pixelType:t.pixelType,pixels:y,mask:M});return x.updateStatistics(),x}function Y(t,e=!0){if(!F(t))return null;const{pixels:n,width:r,height:i,mask:s,pixelType:o}=t,l=[],a=Math.round(r/2),f=Math.round(i/2),c=i-1,u=r-1;for(let t=0;t<n.length;t++){const s=n[t],h=b.createEmptyBand(o,a*f);let p=0;for(let t=0;t<i;t+=2)for(let n=0;n<r;n+=2){const i=s[t*r+n];if(e){const e=n===u?i:s[t*r+n+1],o=t===c?i:s[t*r+n+r],l=n===u?o:t===c?e:s[t*r+n+r+1];h[p++]=(i+e+o+l)/4}else h[p++]=i}l.push(h)}let h=null;if(null!=s){h=new Uint8Array(a*f);let t=0;for(let n=0;n<i;n+=2)for(let i=0;i<r;i+=2){const o=s[n*r+i];if(e){const e=i===u?o:s[n*r+i+1],l=n===c?o:s[n*r+i+r],a=i===u?l:n===c?e:s[n*r+i+r+1];h[t++]=o*e*l*a?1:0}else h[t++]=o}}return new b({width:a,height:f,pixelType:o,pixels:l,mask:h})}function Z(t,e,n){if(!F(t))return null;const{width:r,height:i}=e;let{width:s,height:o}=t;const l=new Map,a={x:0,y:0},f=null==n?1:1+n;let c=t;for(let t=0;t<f;t++){const n=Math.ceil(s/r),u=Math.ceil(o/i);for(let s=0;s<u;s++){a.y=s*i;for(let i=0;i<n;i++){a.x=i*r;const n=X(c,a,e);l.set(`${t}/${s}/${i}`,n)}}t<f-1&&(c=Y(c)),s=Math.round(s/2),o=Math.round(o/2)}return l}function tt(t,e,n,r,i=0){const{width:s,height:o}=t,{width:l,height:a}=e,f=r.cols,c=r.rows,u=Math.ceil(l/f-.1/f),h=Math.ceil(a/c-.1/c);let p,w,d,y,M,m,x;const A=u*f,g=A*h*c,k=new Float32Array(g),b=new Float32Array(g),v=new Uint32Array(g),U=new Uint32Array(g);let T,F,_=0;for(let t=0;t<h;t++)for(let e=0;e<u;e++){p=12*(t*u+e),w=n[p],d=n[p+1],y=n[p+2],M=n[p+3],m=n[p+4],x=n[p+5];for(let n=0;n<c;n++){_=(t*c+n)*A+e*f,F=(n+.5)/c;for(let t=0;t<n;t++)T=(t+.5)/f,k[_+t]=(w*T+d*F+y)*s+i,b[_+t]=(M*T+m*F+x)*o+i,v[_+t]=Math.floor(k[_+t]),U[_+t]=Math.floor(b[_+t])}p+=6,w=n[p],d=n[p+1],y=n[p+2],M=n[p+3],m=n[p+4],x=n[p+5];for(let n=0;n<c;n++){_=(t*c+n)*A+e*f,F=(n+.5)/c;for(let t=n;t<f;t++)T=(t+.5)/f,k[_+t]=(w*T+d*F+y)*s+i,b[_+t]=(M*T+m*F+x)*o+i,v[_+t]=Math.floor(k[_+t]),U[_+t]=Math.floor(b[_+t])}}return{offsets_x:k,offsets_y:b,offsets_xi:v,offsets_yi:U,gridWidth:A}}function et(t,e){const{coefficients:n,spacing:r}=e,{offsets_x:i,offsets_y:s,gridWidth:o}=tt(t,t,n,{rows:r[0],cols:r[1]}),{width:l,height:a}=t,f=new Float32Array(l*a),c=180/Math.PI;for(let t=0;t<a;t++)for(let e=0;e<l;e++){const n=t*o+e,r=0===t?n:n-o,u=t===a-1?n:n+o,h=i[r]-i[u],p=s[u]-s[r];if(isNaN(h)||isNaN(p))f[t*l+e]=90;else{let n=Math.atan2(p,h)*c;n=(360+n)%360,f[t*l+e]=n}}return f}function nt(t,e,n,r,i="nearest"){if(!F(t))return null;"majority"===i&&(t=K(t));const{pixels:s,mask:o,bandMasks:l,pixelType:a}=t,f=t.width,c=t.height,u=b.getPixelArrayConstructor(a),h=s.length,{width:p,height:w}=e;let d=!1;for(let t=0;t<n.length;t+=3)-1===n[t]&&-1===n[t+1]&&-1===n[t+2]&&(d=!0);const{offsets_x:y,offsets_y:M,offsets_xi:m,offsets_yi:x,gridWidth:A}=tt({width:f,height:c},e,n,r,"majority"===i?.5:0);let g;const k=(t,e,n,r)=>{const i=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let s=0;s<w;s++){g=s*A;for(let o=0;o<p;o++){if(y[g]<0||M[g]<0)t[s*p+o]=0;else if(r)t[s*p+o]=e[m[g]+x[g]*f];else{const r=Math.floor(y[g]),l=Math.floor(M[g]),a=Math.ceil(y[g]),c=Math.ceil(M[g]),u=y[g]-r,h=M[g]-l;if(!n||n[r+l*f]&&n[a+l*f]&&n[r+c*f]&&n[a+c*f]){const n=(1-u)*e[r+l*f]+u*e[a+l*f],w=(1-u)*e[r+c*f]+u*e[a+c*f];t[s*p+o]=(1-h)*n+h*w+i}else t[s*p+o]=e[m[g]+x[g]*f]}g++}}},v=[];let U;const T=l?.length===h,_=[];for(let t=0;t<h;t++){if(T){const e=new Uint8Array(p*w);k(e,l[t],l[t],!0),_.push(e)}U=new u(p*w),k(U,s[t],T?l[t]:o,"nearest"===i||"majority"===i),v.push(U)}const I=new b({width:p,height:w,pixelType:a,pixels:v,bandMasks:T?_:void 0});if(null!=o)I.mask=new Uint8Array(p*w),k(I.mask,o,o,!0);else if(d){I.mask=new Uint8Array(p*w);for(let t=0;t<p*w;t++)I.mask[t]=y[t]<0||M[t]<0?0:1}return I.updateStatistics(),I}const rt=new Map;rt.set("meter-per-second",1),rt.set("kilometer-per-hour",.277778),rt.set("knots",.514444),rt.set("feet-per-second",.3048),rt.set("mile-per-hour",.44704);const it=180/Math.PI,st=5,ot=new a({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function lt(t,e){return rt.get(t)/rt.get(e)||1}function at(t){return(450-t)%360}function ft(t,e="geographic"){const[n,r]=t,i=Math.sqrt(n*n+r*r);let s=Math.atan2(r,n)*it;return s=(360+s)%360,"geographic"===e&&(s=at(s)),[i,s]}function ct(t,e="geographic"){let n=t[1];"geographic"===e&&(n=at(n)),n%=360;const r=t[0];return[r*Math.cos(n/it),r*Math.sin(n/it)]}function ut(t,e,n,r="geographic"){if(!F(t)||null==n)return t;const i="vector-magdir"===e?t.clone():ht(t,e),s=i.pixels[1];for(let t=0;t<s.length;t++)s[t]="geographic"===r?(s[t]+n[t]+270)%360:(s[t]+360-n[t])%360;return"vector-magdir"===e?i:ht(i,"vector-magdir")}function ht(t,e,n="geographic",r=1){if(!F(t))return t;const{pixels:i,width:s,height:o}=t,l=s*o,a=i[0],f=i[1],c=t.pixelType.startsWith("f")?t.pixelType:"f32",u=b.createEmptyBand(c,l),h=b.createEmptyBand(c,l);let p=0;for(let t=0;t<o;t++)for(let t=0;t<s;t++)"vector-uv"===e?([u[p],h[p]]=ft([a[p],f[p]],n),u[p]*=r):([u[p],h[p]]=ct([a[p],f[p]],n),u[p]*=r,h[p]*=r),p++;const w=new b({pixelType:c,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[u,h]});return w.updateStatistics(),w}function pt(t,e,n=1){if(1===n||!F(t))return t;const r=t.clone(),{pixels:i,width:s,height:o}=r,l=i[0],a=i[1];let f=0;for(let t=0;t<o;t++)for(let t=0;t<s;t++)"vector-uv"===e?(l[f]*=n,a[f]*=n):l[f]*=n,f++;return r.updateStatistics(),r}function wt(t,e,n,r,i){if(null==i||!i.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/r),height:Math.round(n/r),resolution:t.width/e};const s=i.xmin,o=i.ymax,l=(t.xmax-t.xmin)/e*r,a=(t.ymax-t.ymin)/n*r,f=(l+a)/2;return t.xmin=s+Math.floor((t.xmin-s)/l)*l,t.xmax=s+Math.ceil((t.xmax-s)/l)*l,t.ymin=o+Math.floor((t.ymin-o)/a)*a,t.ymax=o+Math.ceil((t.ymax-o)/a)*a,{extent:t,width:Math.round(t.width/l),height:Math.round(t.height/a),resolution:f}}const dt=yt(0,0,0);function yt(t=0,e=0,n=Math.PI,r=!0){r&&(n=(2*Math.PI-n)%(2*Math.PI));const i=r?-1:1,s=13*i,o=-7*i,l=-2*i,a=-16*i,f=21.75,[c,u]=mt(0,e+s,n,f),[h,p]=mt(t-5.5,e+o,n,f),[w,d]=mt(t+5.5,e+o,n,f),[y,M]=mt(t-1.5,e+l,n,f),[m,x]=mt(t+1.5,e+l,n,f),[A,g]=mt(t-1.5,e+a,n,f),[k,b]=mt(t+1.5,e+a,n,f);return[c,u,h,p,y,M,m,x,w,d,A,g,k,b]}function Mt(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const r=10,i=n?-1:1,s=5*i,o=20*i,l=25*i,a=45,f=0,c=0,u=2,h=0,p=u*i,w=n?1:-1,d=r/2*w;let[y,M]=[f+d,c-o],[m,x]=[y+u*w,M],[A,g]=[m-h*w,x+p],[k,b]=[f-d,c-l],[v,U]=[k+h*w,b-p],T=Math.ceil(t/st),F=Math.floor(T/10);T-=8*F;const _=[],I=[];for(let t=0;t<T/2;t++,F--){F<=0&&T%2==1&&t===(T-1)/2&&(k=f,v=k+h*w,b=(b+M)/2,U=b-p);const[n,r]=mt(k,b,e,a);if(F>0){const[t,i]=mt(m,b,e,a),[s,o]=mt(y,M,e,a);_.push(t),_.push(i),_.push(n),_.push(r),_.push(s),_.push(o)}else{const[t,i]=mt(m,x,e,a),[s,o]=mt(A,g,e,a),[l,f]=mt(v,U,e,a);I.push(n),I.push(r),I.push(l),I.push(f),I.push(s),I.push(o),I.push(t),I.push(i)}b+=s,M+=s,x+=s,g+=s,U+=s}const[B,P]=mt(f+d,c+o,e,a),D=(r/2+u)*w,[R,S]=mt(f+D,c+o,e,a),[j,N]=mt(f+d,c-l,e,a),[G,C]=mt(f+D,c-l,e,a);return{pennants:_,barbs:I,shaft:[B,P,R,S,j,N,G,C]}}function mt(t,e,n,r=1){const i=Math.sqrt(t*t+e*e)/r,s=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[i,(2*Math.PI+s-n)%(2*Math.PI)]}const xt=[0,1,3,6,10,16,21,27,33,40,47,55,63],At=[0,.5,1,1.5,2],gt=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function kt(t,e,n,r){const i=lt(r||"knots",n);let s;for(s=1;s<e.length;s++)if(s===e.length-1){if(t<e[s]*i)break}else if(t<=e[s]*i)break;return Math.min(s-1,e.length-2)}function bt(t,e,n,r,i){let s=0;switch(e){case"beaufort_kn":s=kt(t,xt,"knots",n);break;case"beaufort_km":s=kt(t,xt,"kilometer-per-hour",n);break;case"beaufort_ft":s=kt(t,xt,"feet-per-second",n);break;case"beaufort_m":s=kt(t,xt,"meter-per-second",n);break;case"classified_arrow":s=kt(t,i??[],r,n);break;case"ocean_current_m":s=kt(t,At,"meter-per-second",n);break;case"ocean_current_kn":s=kt(t,gt,"knots",n)}return s}function vt(t,e){const{style:n,inputUnit:r,outputUnit:i,breakValues:s}=e,o=ot.fromJSON(r),l=ot.fromJSON(i),a=7*6,f=15;let c=0,u=0;const{width:h,height:p,mask:w}=t,d=t.pixels[0],y=t.pixels[1],M=null!=w?w.filter((t=>t>0)).length:h*p,m=new Float32Array(M*a),x=new Uint32Array(f*M),A=e.invertDirection?yt(0,0,0,!1):dt;for(let t=0;t<p;t++)for(let e=0;e<h;e++){const r=t*h+e;if(!w||w[t*h+e]){const i=(y[r]+360)%360/180*Math.PI,f=bt(d[r],n,o,l,s);for(let n=0;n<A.length;n+=2)m[c++]=(e+.5)/h,m[c++]=(t+.5)/p,m[c++]=A[n],m[c++]=A[n+1]+i,m[c++]=f,m[c++]=d[r];const w=7*(c/a-1);x[u++]=w,x[u++]=w+1,x[u++]=w+2,x[u++]=w+0,x[u++]=w+4,x[u++]=w+3,x[u++]=w+0,x[u++]=w+2,x[u++]=w+3,x[u++]=w+2,x[u++]=w+5,x[u++]=w+3,x[u++]=w+5,x[u++]=w+6,x[u++]=w+3}}return{vertexData:m,indexData:x}}const Ut=[];function Tt(t,e){if(0===Ut.length)for(let t=0;t<30;t++)Ut.push(Mt(5*t,0,!e.invertDirection));const n=lt(ot.fromJSON(e.inputUnit),"knots"),{width:r,height:i,mask:s}=t,o=t.pixels[0],l=t.pixels[1],a=6,f=[],c=[];let u=0,h=0;for(let t=0;t<i;t++)for(let e=0;e<r;e++){const p=t*r+e,w=o[p]*n;if((!s||s[t*r+e])&&w>=st){const n=(l[p]+360)%360/180*Math.PI,{pennants:s,barbs:o,shaft:d}=Ut[Math.min(Math.floor(w/5),29)];if(s.length+o.length===0)continue;let y=f.length/a;const M=(e+.5)/r,m=(t+.5)/i;for(let t=0;t<s.length;t+=2)f[u++]=M,f[u++]=m,f[u++]=s[t],f[u++]=s[t+1]+n,f[u++]=0,f[u++]=w;for(let t=0;t<o.length;t+=2)f[u++]=M,f[u++]=m,f[u++]=o[t],f[u++]=o[t+1]+n,f[u++]=0,f[u++]=w;for(let t=0;t<d.length;t+=2)f[u++]=M,f[u++]=m,f[u++]=d[t],f[u++]=d[t+1]+n,f[u++]=0,f[u++]=w;for(let t=0;t<s.length/6;t++)c[h++]=y,c[h++]=y+1,c[h++]=y+2,y+=3;for(let t=0;t<o.length/8;t++)c[h++]=y,c[h++]=y+1,c[h++]=y+2,c[h++]=y+1,c[h++]=y+2,c[h++]=y+3,y+=4;c[h++]=y+0,c[h++]=y+1,c[h++]=y+2,c[h++]=y+1,c[h++]=y+3,c[h++]=y+2,y+=4}}return{vertexData:new Float32Array(f),indexData:new Uint32Array(c)}}function Ft(t,e){const n=4*6;let r=0,i=0;const{width:s,height:o,mask:l}=t,a=t.pixels[0],f=[],c=[],u=lt(ot.fromJSON(e.inputUnit),"knots"),h="wind_speed"===e.style?st:Number.MAX_VALUE;for(let t=0;t<o;t++)for(let e=0;e<s;e++){const p=a[t*s+e]*u;if((!l||l[t*s+e])&&p<h){for(let n=0;n<4;n++)f[r++]=(e+.5)/s,f[r++]=(t+.5)/o,f[r++]=n<2?-.5:.5,f[r++]=n%2==0?-.5:.5,f[r++]=0,f[r++]=p;const l=4*(r/n-1);c[i++]=l,c[i++]=l+1,c[i++]=l+2,c[i++]=l+1,c[i++]=l+2,c[i++]=l+3}}return{vertexData:new Float32Array(f),indexData:new Uint32Array(c)}}function _t(t,e){return"simple_scalar"===e.style?Ft(t,e):"wind_speed"===e.style?Tt(t,e):vt(t,e)}function It(t,e,n,r=[0,0],i=.5){const{width:s,height:o,mask:l}=t,[a,f]=t.pixels,[c,u]=r,h=Math.round((s-c)/n),p=Math.round((o-u)/n),w=h*p,d=new Float32Array(w),y=new Float32Array(w),M=new Uint8Array(w),m="vector-uv"===e;for(let t=0;t<p;t++)for(let e=0;e<h;e++){let r=0;const p=t*h+e,w=Math.max(0,t*n+u),x=Math.max(0,e*n+c),A=Math.min(o,w+n),g=Math.min(s,x+n);for(let t=w;t<A;t++)for(let e=x;e<g;e++){const n=t*s+e;if(!l||l[n]){r++;const t=m?[a[n],f[n]]:[a[n],(360+f[n])%360],[e,i]=m?t:ct(t);d[p]+=e,y[p]+=i}}if(r>=(A-w)*(g-x)*(1-i)){M[p]=1;const[t,e]=ft([d[p]/r,y[p]/r]);d[p]=t,y[p]=e}else M[p]=0,d[p]=0,y[p]=0}const x=new b({width:h,height:p,pixels:[d,y],mask:M});return x.updateStatistics(),x}const Bt=l.getLogger("esri.views.2d.engine.flow.dataUtils"),Pt=10;async function Dt(t,e,n,r){const i=performance.now(),s=Rt(e,n),o=performance.now(),l=jt(e,s,n.width,n.height),a=performance.now(),u=Gt(l,!0),h=performance.now(),p="Streamlines"===t?Ct(u,Pt):Vt(u),w=performance.now();return f("esri-2d-profiler")&&(Bt.info("I.1","_createFlowFieldFromData (ms)",Math.round(o-i)),Bt.info("I.2","_getStreamlines (ms)",Math.round(a-o)),Bt.info("I.3","createAnimatedLinesData (ms)",Math.round(h-a)),Bt.info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(w-h)),Bt.info("I.5","createFlowMesh (ms)",Math.round(w-i)),Bt.info("I.6","Mesh size (bytes)",p.vertexData.buffer.byteLength+p.indexData.buffer.byteLength)),await Promise.resolve(),c(r),p}function Rt(t,e){const n=Nt(e.data,e.width,e.height,t.smoothing);if(t.interpolate){return(t,r)=>{const i=Math.floor(t),s=Math.floor(r);if(i<0||i>=e.width)return[0,0];if(s<0||s>=e.height)return[0,0];const o=t-i,l=r-s,a=i,f=s,c=i<e.width-1?i+1:i,u=s<e.height-1?s+1:s,h=n[2*(f*e.width+a)],p=n[2*(f*e.width+c)],w=n[2*(u*e.width+a)],d=n[2*(u*e.width+c)],y=n[2*(f*e.width+a)+1],M=n[2*(f*e.width+c)+1];return[(h*(1-l)+w*l)*(1-o)+(p*(1-l)+d*l)*o,(y*(1-l)+n[2*(u*e.width+a)+1]*l)*(1-o)+(M*(1-l)+n[2*(u*e.width+c)+1]*l)*o]}}return(t,r)=>{const i=Math.round(t),s=Math.round(r);return i<0||i>=e.width||s<0||s>=e.height?[0,0]:[n[2*(s*e.width+i)],n[2*(s*e.width+i)+1]]}}function St(t,e,n,r,i,s,o,l,a){const f=[];let c=n,u=r,h=0,[p,w]=e(c,u);p*=t.velocityScale,w*=t.velocityScale;const d=Math.sqrt(p*p+w*w);let y,M;f.push({x:c,y:u,t:h,speed:d});for(let n=0;n<t.verticesPerLine;n++){let[n,r]=e(c,u);n*=t.velocityScale,r*=t.velocityScale;const p=Math.sqrt(n*n+r*r);if(p<t.minSpeedThreshold)return f;const w=n/p,d=r/p;c+=w*t.segmentLength,u+=d*t.segmentLength;if(h+=t.segmentLength/p,Math.acos(w*y+d*M)>t.maxTurnAngle)return f;if(t.collisions){const t=Math.round(c*a),e=Math.round(u*a);if(t<0||t>o-1||e<0||e>l-1)return f;const n=s[e*o+t];if(-1!==n&&n!==i)return f;s[e*o+t]=i}f.push({x:c,y:u,t:h,speed:p}),y=w,M=d}return f}function jt(t,e,n,r){const i=[],s=new u,o=1/Math.max(t.lineCollisionWidth,1),l=Math.round(n*o),a=Math.round(r*o),f=new Int32Array(l*a);for(let t=0;t<f.length;t++)f[t]=-1;const c=[];for(let e=0;e<r;e+=t.lineSpacing)for(let r=0;r<n;r+=t.lineSpacing)c.push({x:r,y:e,sort:s.getFloat()});c.sort(((t,e)=>t.sort-e.sort));for(const{x:n,y:r}of c)if(s.getFloat()<t.density){const s=St(t,e,n,r,i.length,f,l,a,o);if(s.length<2)continue;i.push(s)}return i}function Nt(t,e,n,r){if(0===r)return t;const i=Math.round(3*r),s=new Array(2*i+1);let o=0;for(let t=-i;t<=i;t++){const e=Math.exp(-t*t/(r*r));s[t+i]=e,o+=e}for(let t=-i;t<=i;t++)s[t+i]/=o;const l=new Float32Array(t.length);for(let r=0;r<n;r++)for(let n=0;n<e;n++){let o=0,a=0;for(let l=-i;l<=i;l++){if(n+l<0||n+l>=e)continue;const f=s[l+i];o+=f*t[2*(r*e+(n+l))],a+=f*t[2*(r*e+(n+l))+1]}l[2*(r*e+n)]=o,l[2*(r*e+n)+1]=a}const a=new Float32Array(t.length);for(let t=0;t<e;t++)for(let r=0;r<n;r++){let o=0,f=0;for(let a=-i;a<=i;a++){if(r+a<0||r+a>=n)continue;const c=s[a+i];o+=c*l[2*((r+a)*e+t)],f+=c*l[2*((r+a)*e+t)+1]}a[2*(r*e+t)]=o,a[2*(r*e+t)+1]=f}return a}function Gt(t,e){const n=new u,r=t.reduce(((t,e)=>t+e.length),0),i=new Float32Array(4*r),s=new Array(t.length);let o=0,l=0;for(const r of t){const t=o;for(const t of r)i[4*o]=t.x,i[4*o+1]=t.y,i[4*o+2]=t.t,i[4*o+3]=t.speed,o++;s[l++]={startVertex:t,numberOfVertices:r.length,totalTime:r[r.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:i,lineDescriptors:s}}function Ct(t,e){const n=9,{lineVertices:r,lineDescriptors:i}=t;let s=0,o=0;for(const t of i){s+=2*t.numberOfVertices;o+=6*(t.numberOfVertices-1)}const l=new Float32Array(s*n),a=new Uint32Array(o);let f=0,c=0;function u(){a[c++]=f-2,a[c++]=f,a[c++]=f-1,a[c++]=f,a[c++]=f+1,a[c++]=f-1}function h(t,e,r,i,s,o,a,c){const u=f*n;let h=0;l[u+h++]=t,l[u+h++]=e,l[u+h++]=1,l[u+h++]=r,l[u+h++]=o,l[u+h++]=a,l[u+h++]=i/2,l[u+h++]=s/2,l[u+h++]=c,f++,l[u+h++]=t,l[u+h++]=e,l[u+h++]=-1,l[u+h++]=r,l[u+h++]=o,l[u+h++]=a,l[u+h++]=-i/2,l[u+h++]=-s/2,l[u+h++]=c,f++}for(const t of i){const{totalTime:n,timeSeed:i}=t;let s=null,o=null,l=null,a=null,f=null,c=null;for(let p=0;p<t.numberOfVertices;p++){const w=r[4*(t.startVertex+p)],d=r[4*(t.startVertex+p)+1],y=r[4*(t.startVertex+p)+2],M=r[4*(t.startVertex+p)+3];let m=null,x=null,A=null,g=null;if(p>0){m=w-s,x=d-o;const t=Math.sqrt(m*m+x*x);if(m/=t,x/=t,p>1){let t=m+f,n=x+c;const r=Math.sqrt(t*t+n*n);t/=r,n/=r;const i=Math.min(1/(t*m+n*x),e);t*=i,n*=i,A=-n,g=t}else A=-x,g=m;null!==A&&null!==g&&(h(s,o,l,A,g,n,i,M),u())}s=w,o=d,l=y,f=m,c=x,a=M}h(s,o,l,-c,f,n,i,a)}return{vertexData:l,indexData:a}}function Vt(t){const e=16,n=1,r=2,{lineVertices:i,lineDescriptors:s}=t;let o=0,l=0;for(const t of s){const e=t.numberOfVertices-1;o+=4*e*2,l+=6*e*2}const a=new Float32Array(o*e),f=new Uint32Array(l);let c,u,h,p,w,d,y,M,m,x,A,g,k,b,v=0,U=0;function T(){f[U++]=v-8,f[U++]=v-7,f[U++]=v-6,f[U++]=v-7,f[U++]=v-5,f[U++]=v-6,f[U++]=v-4,f[U++]=v-3,f[U++]=v-2,f[U++]=v-3,f[U++]=v-1,f[U++]=v-2}function F(t,i,s,o,l,f,c,u,h,p,w,d,y,M){const m=v*e;let x=0;for(const e of[n,r])for(const n of[1,2,3,4])a[m+x++]=t,a[m+x++]=i,a[m+x++]=s,a[m+x++]=o,a[m+x++]=c,a[m+x++]=u,a[m+x++]=h,a[m+x++]=p,a[m+x++]=e,a[m+x++]=n,a[m+x++]=y,a[m+x++]=M,a[m+x++]=l/2,a[m+x++]=f/2,a[m+x++]=w/2,a[m+x++]=d/2,v++}function _(t,e){let n=m+A,r=x+g;const i=Math.sqrt(n*n+r*r);n/=i,r/=i;const s=m*n+x*r;n/=s,r/=s;let o=A+k,l=g+b;const a=Math.sqrt(o*o+l*l);o/=a,l/=a;const f=A*o+g*l;o/=f,l/=f,F(c,u,h,p,-r,n,w,d,y,M,-l,o,t,e),T()}function I(t,e,n,r,i,s){if(m=A,x=g,A=k,g=b,null==m&&null==x&&(m=A,x=g),null!=w&&null!=d){k=t-w,b=e-d;const n=Math.sqrt(k*k+b*b);k/=n,b/=n}null!=m&&null!=x&&_(i,s),c=w,u=d,h=y,p=M,w=t,d=e,y=n,M=r}function B(t,e){m=A,x=g,A=k,g=b,null==m&&null==x&&(m=A,x=g),null!=m&&null!=x&&_(t,e)}for(const t of s){c=null,u=null,h=null,p=null,w=null,d=null,y=null,M=null,m=null,x=null,A=null,g=null,k=null,b=null;const{totalTime:e,timeSeed:n}=t;for(let r=0;r<t.numberOfVertices;r++){I(i[4*(t.startVertex+r)],i[4*(t.startVertex+r)+1],i[4*(t.startVertex+r)+2],i[4*(t.startVertex+r)+3],e,n)}B(e,n)}return{vertexData:a,indexData:f}}function Wt(t,e){const n=e.pixels,{width:r,height:i}=e,s=new Float32Array(r*i*2),o=e.mask||new Uint8Array(r*i*2);if(e.mask||o.fill(255),"vector-uv"===t)for(let t=0;t<r*i;t++)s[2*t]=n[0][t],s[2*t+1]=-n[1][t];else if("vector-magdir"===t)for(let t=0;t<r*i;t++){const e=n[0][t],r=w(n[1][t]),i=Math.cos(r-Math.PI/2),o=Math.sin(r-Math.PI/2);s[2*t]=i*e,s[2*t+1]=o*e}return{data:s,mask:o,width:r,height:i}}async function zt(t,e,n,r,i,s){const o=performance.now(),l=p(e.spatialReference);if(!l){const l=await Lt(t,e,n,r,i,s);return f("esri-2d-profiler")&&Bt.info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-o)),f("esri-2d-profiler")&&Bt.info("I.9","Number of parts",1),l}const[a,c]=l.valid,u=c-a,w=Math.ceil(e.width/u),d=e.width/w,y=Math.round(n/w);let M=e.xmin;const m=[],x=performance.now();for(let n=0;n<w;n++){const n=new h({xmin:M,xmax:M+d,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});m.push(Lt(t,n,y,r,i,s)),M+=d}const A=await Promise.all(m);f("esri-2d-profiler")&&Bt.info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-x)),f("esri-2d-profiler")&&Bt.info("I.9","Number of parts",A.length);const g={data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r};let k=0;for(const t of A){for(let e=0;e<t.height;e++)for(let r=0;r<t.width;r++)k+r>=n||(g.data[2*(e*n+k+r)]=t.data[2*(e*t.width+r)],g.data[2*(e*n+k+r)+1]=t.data[2*(e*t.width+r)+1],g.mask[e*n+k+r]=t.mask[e*t.width+r]);k+=t.width}return f("esri-2d-profiler")&&Bt.info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-o)),g}async function Lt(t,e,n,r,i,s){const o={requestProjectedLocalDirections:!0,signal:s};if(null!=i&&(o.timeExtent=i),"imagery"===t.type){await t.load({signal:s});const i=t.rasterInfo.dataType,l=await t.fetchImage(e,n,r,o);return l&&null!=l.pixelData&&null!=l.pixelData.pixelBlock?Wt(i,l.pixelData.pixelBlock):{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}}await t.load({signal:s});const l=t.rasterInfo.dataType,a=await t.fetchPixels(e,n,r,o);return a&&null!=a.pixelBlock?Wt(l,a.pixelBlock):{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}}export{pt as A,et as I,L as M,nt as R,It as S,H as T,O as U,Z as W,Ft as _,ut as a,A as b,x as c,R as d,P as e,ht as f,I as g,B as h,T as i,C as j,D as k,U as l,wt as m,v as n,F as o,S as p,zt as q,_ as r,Dt as s,_t as t,b as u,ft as v,W as w,ot as x,V as y,lt as z};
//# sourceMappingURL=p-798c4085.js.map