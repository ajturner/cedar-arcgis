import{bJ as e,k as t,p as l,l as a,n,o as i,c as r}from"./p-98455486.js";const s=new e({esriClassifyEqualInterval:"equal-interval",esriClassifyManual:"manual",esriClassifyNaturalBreaks:"natural-breaks",esriClassifyQuantile:"quantile",esriClassifyStandardDeviation:"standard-deviation",esriClassifyDefinedInterval:"defined-interval"}),o=new e({esriNormalizeByLog:"log",esriNormalizeByPercentOfTotal:"percent-of-total",esriNormalizeByField:"field"});let u=class extends i{constructor(e){super(e),this.type="class-breaks-definition",this.breakCount=null,this.classificationField=null,this.classificationMethod=null,this.normalizationField=null,this.normalizationType=null}set standardDeviationInterval(e){"standard-deviation"===this.classificationMethod&&this._set("standardDeviationInterval",e)}set definedInterval(e){"defined-interval"===this.classificationMethod&&this._set("definedInterval",e)}};t([l({classBreaksDef:"class-breaks-definition"})],u.prototype,"type",void 0),t([a({json:{write:!0}})],u.prototype,"breakCount",void 0),t([a({json:{write:!0}})],u.prototype,"classificationField",void 0),t([a({type:String,json:{read:s.read,write:s.write}})],u.prototype,"classificationMethod",void 0),t([a({json:{write:!0}})],u.prototype,"normalizationField",void 0),t([a({json:{read:o.read,write:o.write}})],u.prototype,"normalizationType",void 0),t([a({value:null,json:{write:!0}})],u.prototype,"standardDeviationInterval",null),t([a({value:null,json:{write:!0}})],u.prototype,"definedInterval",null),u=t([n("esri.rest.support.ClassBreaksDefinition")],u);const f=u;const c=r.getLogger("esri.rest.support.generateRendererUtils");function d(e,t){return Number(e.toFixed(t))}function m(e){const t=h(e),l=[],a=t.uniqueValues.length;for(let e=0;e<a;e++){const a=t.uniqueValues[e],n=t.valueFrequency[e],i=a.toString();l.push({value:a,count:n,label:i})}return{uniqueValues:l}}function v(e){const{normalizationTotal:t}=e;return{classBreaks:V(e),normalizationTotal:t}}function V(e){const t=e.definition,{classificationMethod:l,normalizationType:a,definedInterval:n}=t,i=t.breakCount??1,r=[];let s=e.values;if(0===s.length)return[];s=s.sort(((e,t)=>e-t));const o=s[0],u=s[s.length-1];if("equal-interval"===l)if(s.length>=i){const e=(u-o)/i;let t=o;for(let l=1;l<i;l++){const n=d(o+l*e,6);r.push({minValue:t,maxValue:n,label:b(t,n,a)}),t=n}r.push({minValue:t,maxValue:u,label:b(t,u,a)})}else s.forEach((e=>{r.push({minValue:e,maxValue:e,label:b(e,e,a)})}));else if("natural-breaks"===l){const t=h(s),l=e.valueFrequency||t.valueFrequency,n=p(t.uniqueValues,l,i);let f=o;for(let e=1;e<i;e++)if(t.uniqueValues.length>e){const l=d(t.uniqueValues[n[e]],6);r.push({minValue:f,maxValue:l,label:b(f,l,a)}),f=l}r.push({minValue:f,maxValue:u,label:b(f,u,a)})}else if("quantile"===l)if(s.length>=i&&o!==u){let e=o,t=Math.ceil(s.length/i),l=0;for(let n=1;n<i;n++){let o=t+l-1;o>s.length&&(o=s.length-1),o<0&&(o=0),r.push({minValue:e,maxValue:s[o],label:b(e,s[o],a)}),e=s[o],l+=t,t=Math.ceil((s.length-l)/(i-n))}r.push({minValue:e,maxValue:u,label:b(e,u,a)})}else{let e=-1;for(let t=0;t<s.length;t++){const l=s[t];l!==e&&(e=l,r.push({minValue:e,maxValue:l,label:b(e,l,a)}),e=l)}}else if("standard-deviation"===l){const e=M(s),t=w(s,e);if(0===t)r.push({minValue:s[0],maxValue:s[0],label:b(s[0],s[0],a)});else{const l=y(o,u,i,e,t)*t;let n=0,s=o;for(let t=i;t>=1;t--){const i=d(e-(t-.5)*l,6);r.push({minValue:s,maxValue:i,label:b(s,i,a)}),s=i,n++}let f=d(e+.5*l,6);r.push({minValue:s,maxValue:f,label:b(s,f,a)}),s=f,n++;for(let t=1;t<=i;t++)f=n===2*i?u:d(e+(t+.5)*l,6),r.push({minValue:s,maxValue:f,label:b(s,f,a)}),s=f,n++}}else if("defined-interval"===l){if(!n)return r;const e=s[0],t=s[s.length-1],l=Math.ceil((t-e)/n);let i=e;for(let t=1;t<l;t++){const l=d(e+t*n,6);r.push({minValue:i,maxValue:l,label:b(i,l,a)}),i=l}r.push({minValue:i,maxValue:t,label:b(i,t,a)})}return r}function b(e,t,l){let a=null;return a=e===t?l&&"percent-of-total"===l?e+"%":e.toString():l&&"percent-of-total"===l?e+"% - "+t+"%":e+" - "+t,a}function h(e){const t=[],l=[];let a=Number.MIN_VALUE,n=1,i=-1;for(let r=0;r<e.length;r++){const s=e[r];s===a?(n++,l[i]=n):null!==s&&(t.push(s),a=s,n=1,l.push(n),i++)}return{uniqueValues:t,valueFrequency:l}}function p(e,t,l){const a=e.length,n=[];l>a&&(l=a);for(let e=0;e<l;e++)n.push(Math.round(e*a/l-1));n.push(a-1);let i=x(n,e,t,l);return k(i.mean,i.sdcm,n,e,t,l)&&(i=x(n,e,t,l)),n}function x(e,t,l,a){let n=[],i=[],r=[],s=0;const o=[],u=[];for(let n=0;n<a;n++){const a=I(n,e,t,l);o.push(a.sbMean),u.push(a.sbSdcm),s+=u[n]}let f,c=s,d=!0;for(;d||s<c;){d=!1,n=[];for(let t=0;t<a;t++)n.push(e[t]);for(let l=0;l<a;l++)for(let n=e[l]+1;n<=e[l+1];n++)if(f=t[n],l>0&&n!==e[l+1]&&Math.abs(f-o[l])>Math.abs(f-o[l-1]))e[l]=n;else if(l<a-1&&e[l]!==n-1&&Math.abs(f-o[l])>Math.abs(f-o[l+1])){e[l+1]=n-1;break}c=s,s=0,i=[],r=[];for(let n=0;n<a;n++){i.push(o[n]),r.push(u[n]);const a=I(n,e,t,l);o[n]=a.sbMean,u[n]=a.sbSdcm,s+=u[n]}}if(s>c){for(let t=0;t<a;t++)e[t]=n[t],o[t]=i[t],u[t]=r[t];s=c}return{mean:o,sdcm:u}}function k(e,t,l,a,n,i){let r=0,s=0,o=0,u=0,f=!0;for(let c=0;c<2&&f;c++){0===c&&(f=!1);for(let c=0;c<i-1;c++)for(;l[c+1]+1!==l[c+2];){l[c+1]=l[c+1]+1;const i=I(c,l,a,n);o=i.sbMean,r=i.sbSdcm;const d=I(c+1,l,a,n);if(u=d.sbMean,s=d.sbSdcm,!(r+s<t[c]+t[c+1])){l[c+1]=l[c+1]-1;break}t[c]=r,t[c+1]=s,e[c]=o,e[c+1]=u,f=!0}for(let c=i-1;c>0;c--)for(;l[c]!==l[c-1]+1;){l[c]=l[c]-1;const i=I(c-1,l,a,n);o=i.sbMean,r=i.sbSdcm;const d=I(c,l,a,n);if(u=d.sbMean,s=d.sbSdcm,!(r+s<t[c-1]+t[c])){l[c]=l[c]+1;break}t[c-1]=r,t[c]=s,e[c-1]=o,e[c]=u,f=!0}}return f}function y(e,t,l,a,n){let i=Math.max(a-e,t-a)/n/l;return i=i>=1?1:i>=.5?.5:.25,i}function M(e){let t=0;for(let l=0;l<e.length;l++)t+=e[l];return t/=e.length,t}function w(e,t){let l=0;for(let a=0;a<e.length;a++){const n=e[a];l+=(n-t)*(n-t)}l/=e.length;return Math.sqrt(l)}function I(e,t,l,a){let n=0,i=0;for(let r=t[e]+1;r<=t[e+1];r++){const e=a[r];n+=l[r]*e,i+=e}i<=0&&c.warn("Exception in Natural Breaks calculation");const r=n/i;let s=0;for(let n=t[e]+1;n<=t[e+1];n++)s+=a[n]*(l[n]-r)**2;return{sbMean:r,sbSdcm:s}}export{v as a,f as d,m as n};
//# sourceMappingURL=p-f33b44a5.js.map