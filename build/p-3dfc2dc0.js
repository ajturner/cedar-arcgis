import{s as e,di as t,dj as r,bm as n,bS as a,bQ as o,dk as i}from"./p-98455486.js";import{t as u,r as s}from"./p-3521d9f7.js";import{e as c}from"./p-fc892660.js";async function l(e,t){const r=e.instance.portalItem;if(r&&r.id)return await r.load(t),p(e),y(e,t)}function p(t){const r=t.instance.portalItem;if(!r?.type||!t.supportedTypes.includes(r.type))throw new e("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:r?.type,expectedType:t.supportedTypes.join(", ")})}async function y(e,r){const n=e.instance,a=n.portalItem;if(!a)return;const{url:o,title:i}=a,u=c(a);if("group"===n.type)return n.read({title:i},u),f(n,e);o&&n.read({url:o},u);const s=await g(e,r);return s&&n.read(s,u),n.resourceReferences={portalItem:a,paths:u.readResourcePaths??[]},"subtype-group"!==n.type&&n.read({title:i},u),t(n,u)}async function f(t,n){let a;const{portalItem:o}=t;if(!o)return;const i=o.type,u=n.layerModuleTypeMap,s=r(o,"Oriented Imagery Layer")??!1;switch(i){case"Feature Service":a=s?u.OrientedImageryLayer:u.FeatureLayer;break;case"Stream Service":a=u.StreamLayer;break;case"Scene Service":a=u.SceneLayer;break;case"Feature Collection":a=u.FeatureLayer;break;default:throw new e("portal:unsupported-item-type-as-group",`The item type '${i}' is not supported as a 'IGroupLayer'`)}let[c,l]=await Promise.all([a(),g(n)]),p=()=>c;if("Feature Service"===i){l=o.url?await v(l,o.url):{};if(F(l).length){const e=u.SubtypeGroupLayer,t=await e();p=e=>"SubtypeGroupLayer"===e.layerType?t:c}return b(t,p,l,await k(o.url))}return h(l)>0?b(t,p,l):d(t,p)}async function d(e,t){const{portalItem:r}=e;if(!r?.url)return;const n=await u(r.url);n&&b(e,t,{layers:n.layers?.map(m),tables:n.tables?.map(m)})}function m(e){return{id:e.id,name:e.name}}function b(e,t,r,n){let a=r.layers||[];const o=r.tables||[];if("Feature Collection"===e.portalItem?.type&&(a.forEach((e=>{"Table"===e?.layerDefinition?.type&&o.push(e)})),a=a.filter((e=>"Table"!==e?.layerDefinition?.type))),"coverage"in r){const t=T(r);t&&e.add(t)}a.reverse().forEach((a=>{const o=n?.(a);if(o||!n){const n=w(e,t(a),r,a,o);e.add(n)}})),o.reverse().forEach((a=>{const o=n?.(a);if(o||!n){const n=w(e,t(a),r,a,o);e.tables.add(n)}}))}function w(e,t,r,a,o){const i=e.portalItem,u=new t({portalItem:i.clone(),layerId:a.id});if("sourceJSON"in u&&(u.sourceJSON=o),"subtype-group"!==u.type&&(u.sublayerTitleMode="service-name"),"Feature Collection"===i.type){const e={origin:"portal-item",portal:i.portal||n.getDefault()};u.read(a,e);const t=r.showLegend;null!=t&&u.read({showLegend:t},e)}return u}async function g(e,t){if(!1===e.supportsData)return;const r=e.instance,n=r.portalItem;if(!n)return;let a=null;try{a=await n.fetchData("json",t)}catch(e){}if(L(r)){let e=null,t=!0;if(a&&h(a)>0){if(null==r.layerId){const e=F(a);r.layerId="subtype-group"===r.type?e?.[0]:I(a)}e=S(a,r),e&&(1===h(a)&&(t=!1),null!=a.showLegend&&(e.showLegend=a.showLegend))}return t&&"sublayerTitleMode"in r&&"service-name"!==r.sublayerTitleMode&&(r.sublayerTitleMode="item-title-and-service-name"),e}return a}async function v(e,t){if(null==e?.layers||null==e?.tables){const r=await u(t);(e=e||{}).layers=e.layers||r?.layers,e.tables=e.tables||r?.tables}return e}function I(e){const t=e.layers;if(t&&t.length)return t[0].id;const r=e.tables;return r&&r.length?r[0].id:null}function S(e,t){const{layerId:r}=t,n=e.layers?.find((e=>e.id===r))||e.tables?.find((e=>e.id===r));return n&&j(n,t)?n:null}function h(e){return(e?.layers?.length??0)+(e?.tables?.length??0)}function L(e){return"stream"!==e.type&&"oriented-imagery"!==e.type&&"layerId"in e}function T(t){const{coverage:r}=t;if(!r)return null;const n=new URL(r);if(r.toLowerCase().includes("item.html")){const e=n.searchParams.get("id"),t=n.origin;return a.fromPortalItem({portalItem:new o({id:e,url:t})})}if(i(r))return a.fromArcGISServerUrl({url:r});throw new e("portal:oriented-imagery-layer-coverage","the provided coverage url couldn't be loaded as a layer")}function F(e){const t=[];return e?.layers?.forEach((e=>{"SubtypeGroupLayer"===e.layerType&&t.push(e.id)})),t}function j(e,t){return!("feature"===t.type&&"layerType"in e&&"SubtypeGroupLayer"===e.layerType||"subtype-group"===t.type&&!("layerType"in e))}async function k(e){const{layersJSON:t}=await s(e);if(!t)return null;const r=[...t.layers,...t.tables];return e=>r.find((t=>t.id===e.id))}export{I as getFirstLayerOrTableId,h as getNumLayersAndTables,F as getSubtypeGroupLayerIds,l as load,v as preprocessFSItemData};
//# sourceMappingURL=p-3dfc2dc0.js.map